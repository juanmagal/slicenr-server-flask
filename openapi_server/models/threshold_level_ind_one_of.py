# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.threshold_hysteresis import ThresholdHysteresis
from openapi_server import util

from openapi_server.models.threshold_hysteresis import ThresholdHysteresis  # noqa: E501

class ThresholdLevelIndOneOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, up=None):  # noqa: E501
        """ThresholdLevelIndOneOf - a model defined in OpenAPI

        :param up: The up of this ThresholdLevelIndOneOf.  # noqa: E501
        :type up: ThresholdHysteresis
        """
        self.openapi_types = {
            'up': ThresholdHysteresis
        }

        self.attribute_map = {
            'up': 'up'
        }

        self._up = up

    @classmethod
    def from_dict(cls, dikt) -> 'ThresholdLevelIndOneOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ThresholdLevelInd_oneOf of this ThresholdLevelIndOneOf.  # noqa: E501
        :rtype: ThresholdLevelIndOneOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def up(self):
        """Gets the up of this ThresholdLevelIndOneOf.


        :return: The up of this ThresholdLevelIndOneOf.
        :rtype: ThresholdHysteresis
        """
        return self._up

    @up.setter
    def up(self, up):
        """Sets the up of this ThresholdLevelIndOneOf.


        :param up: The up of this ThresholdLevelIndOneOf.
        :type up: ThresholdHysteresis
        """

        self._up = up
