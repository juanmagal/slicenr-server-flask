# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.arp import Arp
import re
from openapi_server import util

from openapi_server.models.arp import Arp  # noqa: E501
import re  # noqa: E501

class QosData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, qos_id=None, five_qi_value=None, maxbr_ul=None, maxbr_dl=None, gbr_ul=None, gbr_dl=None, arp=None, qos_notification_control=None, reflective_qos=None, sharing_key_dl=None, sharing_key_ul=None, max_packet_loss_rate_dl=None, max_packet_loss_rate_ul=None, ext_max_data_burst_vol=None):  # noqa: E501
        """QosData - a model defined in OpenAPI

        :param qos_id: The qos_id of this QosData.  # noqa: E501
        :type qos_id: str
        :param five_qi_value: The five_qi_value of this QosData.  # noqa: E501
        :type five_qi_value: int
        :param maxbr_ul: The maxbr_ul of this QosData.  # noqa: E501
        :type maxbr_ul: str
        :param maxbr_dl: The maxbr_dl of this QosData.  # noqa: E501
        :type maxbr_dl: str
        :param gbr_ul: The gbr_ul of this QosData.  # noqa: E501
        :type gbr_ul: str
        :param gbr_dl: The gbr_dl of this QosData.  # noqa: E501
        :type gbr_dl: str
        :param arp: The arp of this QosData.  # noqa: E501
        :type arp: Arp
        :param qos_notification_control: The qos_notification_control of this QosData.  # noqa: E501
        :type qos_notification_control: bool
        :param reflective_qos: The reflective_qos of this QosData.  # noqa: E501
        :type reflective_qos: bool
        :param sharing_key_dl: The sharing_key_dl of this QosData.  # noqa: E501
        :type sharing_key_dl: str
        :param sharing_key_ul: The sharing_key_ul of this QosData.  # noqa: E501
        :type sharing_key_ul: str
        :param max_packet_loss_rate_dl: The max_packet_loss_rate_dl of this QosData.  # noqa: E501
        :type max_packet_loss_rate_dl: int
        :param max_packet_loss_rate_ul: The max_packet_loss_rate_ul of this QosData.  # noqa: E501
        :type max_packet_loss_rate_ul: int
        :param ext_max_data_burst_vol: The ext_max_data_burst_vol of this QosData.  # noqa: E501
        :type ext_max_data_burst_vol: int
        """
        self.openapi_types = {
            'qos_id': str,
            'five_qi_value': int,
            'maxbr_ul': str,
            'maxbr_dl': str,
            'gbr_ul': str,
            'gbr_dl': str,
            'arp': Arp,
            'qos_notification_control': bool,
            'reflective_qos': bool,
            'sharing_key_dl': str,
            'sharing_key_ul': str,
            'max_packet_loss_rate_dl': int,
            'max_packet_loss_rate_ul': int,
            'ext_max_data_burst_vol': int
        }

        self.attribute_map = {
            'qos_id': 'qosId',
            'five_qi_value': 'fiveQIValue',
            'maxbr_ul': 'maxbrUl',
            'maxbr_dl': 'maxbrDl',
            'gbr_ul': 'gbrUl',
            'gbr_dl': 'gbrDl',
            'arp': 'arp',
            'qos_notification_control': 'qosNotificationControl',
            'reflective_qos': 'reflectiveQos',
            'sharing_key_dl': 'sharingKeyDl',
            'sharing_key_ul': 'sharingKeyUl',
            'max_packet_loss_rate_dl': 'maxPacketLossRateDl',
            'max_packet_loss_rate_ul': 'maxPacketLossRateUl',
            'ext_max_data_burst_vol': 'extMaxDataBurstVol'
        }

        self._qos_id = qos_id
        self._five_qi_value = five_qi_value
        self._maxbr_ul = maxbr_ul
        self._maxbr_dl = maxbr_dl
        self._gbr_ul = gbr_ul
        self._gbr_dl = gbr_dl
        self._arp = arp
        self._qos_notification_control = qos_notification_control
        self._reflective_qos = reflective_qos
        self._sharing_key_dl = sharing_key_dl
        self._sharing_key_ul = sharing_key_ul
        self._max_packet_loss_rate_dl = max_packet_loss_rate_dl
        self._max_packet_loss_rate_ul = max_packet_loss_rate_ul
        self._ext_max_data_burst_vol = ext_max_data_burst_vol

    @classmethod
    def from_dict(cls, dikt) -> 'QosData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The QosData of this QosData.  # noqa: E501
        :rtype: QosData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def qos_id(self):
        """Gets the qos_id of this QosData.


        :return: The qos_id of this QosData.
        :rtype: str
        """
        return self._qos_id

    @qos_id.setter
    def qos_id(self, qos_id):
        """Sets the qos_id of this QosData.


        :param qos_id: The qos_id of this QosData.
        :type qos_id: str
        """

        self._qos_id = qos_id

    @property
    def five_qi_value(self):
        """Gets the five_qi_value of this QosData.


        :return: The five_qi_value of this QosData.
        :rtype: int
        """
        return self._five_qi_value

    @five_qi_value.setter
    def five_qi_value(self, five_qi_value):
        """Sets the five_qi_value of this QosData.


        :param five_qi_value: The five_qi_value of this QosData.
        :type five_qi_value: int
        """

        self._five_qi_value = five_qi_value

    @property
    def maxbr_ul(self):
        """Gets the maxbr_ul of this QosData.

        This data type is defined in the same way as the 'BitRate' data type, but with the OpenAPI 'nullable: true' property.   # noqa: E501

        :return: The maxbr_ul of this QosData.
        :rtype: str
        """
        return self._maxbr_ul

    @maxbr_ul.setter
    def maxbr_ul(self, maxbr_ul):
        """Sets the maxbr_ul of this QosData.

        This data type is defined in the same way as the 'BitRate' data type, but with the OpenAPI 'nullable: true' property.   # noqa: E501

        :param maxbr_ul: The maxbr_ul of this QosData.
        :type maxbr_ul: str
        """
        if maxbr_ul is not None and not re.search(r'^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$', maxbr_ul):  # noqa: E501
            raise ValueError("Invalid value for `maxbr_ul`, must be a follow pattern or equal to `/^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$/`")  # noqa: E501

        self._maxbr_ul = maxbr_ul

    @property
    def maxbr_dl(self):
        """Gets the maxbr_dl of this QosData.

        This data type is defined in the same way as the 'BitRate' data type, but with the OpenAPI 'nullable: true' property.   # noqa: E501

        :return: The maxbr_dl of this QosData.
        :rtype: str
        """
        return self._maxbr_dl

    @maxbr_dl.setter
    def maxbr_dl(self, maxbr_dl):
        """Sets the maxbr_dl of this QosData.

        This data type is defined in the same way as the 'BitRate' data type, but with the OpenAPI 'nullable: true' property.   # noqa: E501

        :param maxbr_dl: The maxbr_dl of this QosData.
        :type maxbr_dl: str
        """
        if maxbr_dl is not None and not re.search(r'^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$', maxbr_dl):  # noqa: E501
            raise ValueError("Invalid value for `maxbr_dl`, must be a follow pattern or equal to `/^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$/`")  # noqa: E501

        self._maxbr_dl = maxbr_dl

    @property
    def gbr_ul(self):
        """Gets the gbr_ul of this QosData.

        This data type is defined in the same way as the 'BitRate' data type, but with the OpenAPI 'nullable: true' property.   # noqa: E501

        :return: The gbr_ul of this QosData.
        :rtype: str
        """
        return self._gbr_ul

    @gbr_ul.setter
    def gbr_ul(self, gbr_ul):
        """Sets the gbr_ul of this QosData.

        This data type is defined in the same way as the 'BitRate' data type, but with the OpenAPI 'nullable: true' property.   # noqa: E501

        :param gbr_ul: The gbr_ul of this QosData.
        :type gbr_ul: str
        """
        if gbr_ul is not None and not re.search(r'^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$', gbr_ul):  # noqa: E501
            raise ValueError("Invalid value for `gbr_ul`, must be a follow pattern or equal to `/^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$/`")  # noqa: E501

        self._gbr_ul = gbr_ul

    @property
    def gbr_dl(self):
        """Gets the gbr_dl of this QosData.

        This data type is defined in the same way as the 'BitRate' data type, but with the OpenAPI 'nullable: true' property.   # noqa: E501

        :return: The gbr_dl of this QosData.
        :rtype: str
        """
        return self._gbr_dl

    @gbr_dl.setter
    def gbr_dl(self, gbr_dl):
        """Sets the gbr_dl of this QosData.

        This data type is defined in the same way as the 'BitRate' data type, but with the OpenAPI 'nullable: true' property.   # noqa: E501

        :param gbr_dl: The gbr_dl of this QosData.
        :type gbr_dl: str
        """
        if gbr_dl is not None and not re.search(r'^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$', gbr_dl):  # noqa: E501
            raise ValueError("Invalid value for `gbr_dl`, must be a follow pattern or equal to `/^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$/`")  # noqa: E501

        self._gbr_dl = gbr_dl

    @property
    def arp(self):
        """Gets the arp of this QosData.


        :return: The arp of this QosData.
        :rtype: Arp
        """
        return self._arp

    @arp.setter
    def arp(self, arp):
        """Sets the arp of this QosData.


        :param arp: The arp of this QosData.
        :type arp: Arp
        """

        self._arp = arp

    @property
    def qos_notification_control(self):
        """Gets the qos_notification_control of this QosData.


        :return: The qos_notification_control of this QosData.
        :rtype: bool
        """
        return self._qos_notification_control

    @qos_notification_control.setter
    def qos_notification_control(self, qos_notification_control):
        """Sets the qos_notification_control of this QosData.


        :param qos_notification_control: The qos_notification_control of this QosData.
        :type qos_notification_control: bool
        """

        self._qos_notification_control = qos_notification_control

    @property
    def reflective_qos(self):
        """Gets the reflective_qos of this QosData.


        :return: The reflective_qos of this QosData.
        :rtype: bool
        """
        return self._reflective_qos

    @reflective_qos.setter
    def reflective_qos(self, reflective_qos):
        """Sets the reflective_qos of this QosData.


        :param reflective_qos: The reflective_qos of this QosData.
        :type reflective_qos: bool
        """

        self._reflective_qos = reflective_qos

    @property
    def sharing_key_dl(self):
        """Gets the sharing_key_dl of this QosData.


        :return: The sharing_key_dl of this QosData.
        :rtype: str
        """
        return self._sharing_key_dl

    @sharing_key_dl.setter
    def sharing_key_dl(self, sharing_key_dl):
        """Sets the sharing_key_dl of this QosData.


        :param sharing_key_dl: The sharing_key_dl of this QosData.
        :type sharing_key_dl: str
        """

        self._sharing_key_dl = sharing_key_dl

    @property
    def sharing_key_ul(self):
        """Gets the sharing_key_ul of this QosData.


        :return: The sharing_key_ul of this QosData.
        :rtype: str
        """
        return self._sharing_key_ul

    @sharing_key_ul.setter
    def sharing_key_ul(self, sharing_key_ul):
        """Sets the sharing_key_ul of this QosData.


        :param sharing_key_ul: The sharing_key_ul of this QosData.
        :type sharing_key_ul: str
        """

        self._sharing_key_ul = sharing_key_ul

    @property
    def max_packet_loss_rate_dl(self):
        """Gets the max_packet_loss_rate_dl of this QosData.

        This data type is defined in the same way as the 'PacketLossRate' data type, but with the OpenAPI 'nullable: true' property.   # noqa: E501

        :return: The max_packet_loss_rate_dl of this QosData.
        :rtype: int
        """
        return self._max_packet_loss_rate_dl

    @max_packet_loss_rate_dl.setter
    def max_packet_loss_rate_dl(self, max_packet_loss_rate_dl):
        """Sets the max_packet_loss_rate_dl of this QosData.

        This data type is defined in the same way as the 'PacketLossRate' data type, but with the OpenAPI 'nullable: true' property.   # noqa: E501

        :param max_packet_loss_rate_dl: The max_packet_loss_rate_dl of this QosData.
        :type max_packet_loss_rate_dl: int
        """
        if max_packet_loss_rate_dl is not None and max_packet_loss_rate_dl > 1000:  # noqa: E501
            raise ValueError("Invalid value for `max_packet_loss_rate_dl`, must be a value less than or equal to `1000`")  # noqa: E501
        if max_packet_loss_rate_dl is not None and max_packet_loss_rate_dl < 0:  # noqa: E501
            raise ValueError("Invalid value for `max_packet_loss_rate_dl`, must be a value greater than or equal to `0`")  # noqa: E501

        self._max_packet_loss_rate_dl = max_packet_loss_rate_dl

    @property
    def max_packet_loss_rate_ul(self):
        """Gets the max_packet_loss_rate_ul of this QosData.

        This data type is defined in the same way as the 'PacketLossRate' data type, but with the OpenAPI 'nullable: true' property.   # noqa: E501

        :return: The max_packet_loss_rate_ul of this QosData.
        :rtype: int
        """
        return self._max_packet_loss_rate_ul

    @max_packet_loss_rate_ul.setter
    def max_packet_loss_rate_ul(self, max_packet_loss_rate_ul):
        """Sets the max_packet_loss_rate_ul of this QosData.

        This data type is defined in the same way as the 'PacketLossRate' data type, but with the OpenAPI 'nullable: true' property.   # noqa: E501

        :param max_packet_loss_rate_ul: The max_packet_loss_rate_ul of this QosData.
        :type max_packet_loss_rate_ul: int
        """
        if max_packet_loss_rate_ul is not None and max_packet_loss_rate_ul > 1000:  # noqa: E501
            raise ValueError("Invalid value for `max_packet_loss_rate_ul`, must be a value less than or equal to `1000`")  # noqa: E501
        if max_packet_loss_rate_ul is not None and max_packet_loss_rate_ul < 0:  # noqa: E501
            raise ValueError("Invalid value for `max_packet_loss_rate_ul`, must be a value greater than or equal to `0`")  # noqa: E501

        self._max_packet_loss_rate_ul = max_packet_loss_rate_ul

    @property
    def ext_max_data_burst_vol(self):
        """Gets the ext_max_data_burst_vol of this QosData.

        This data type is defined in the same way as the 'ExtMaxDataBurstVol' data type, but with the OpenAPI 'nullable: true' property.   # noqa: E501

        :return: The ext_max_data_burst_vol of this QosData.
        :rtype: int
        """
        return self._ext_max_data_burst_vol

    @ext_max_data_burst_vol.setter
    def ext_max_data_burst_vol(self, ext_max_data_burst_vol):
        """Sets the ext_max_data_burst_vol of this QosData.

        This data type is defined in the same way as the 'ExtMaxDataBurstVol' data type, but with the OpenAPI 'nullable: true' property.   # noqa: E501

        :param ext_max_data_burst_vol: The ext_max_data_burst_vol of this QosData.
        :type ext_max_data_burst_vol: int
        """
        if ext_max_data_burst_vol is not None and ext_max_data_burst_vol > 2000000:  # noqa: E501
            raise ValueError("Invalid value for `ext_max_data_burst_vol`, must be a value less than or equal to `2000000`")  # noqa: E501
        if ext_max_data_burst_vol is not None and ext_max_data_burst_vol < 4096:  # noqa: E501
            raise ValueError("Invalid value for `ext_max_data_burst_vol`, must be a value greater than or equal to `4096`")  # noqa: E501

        self._ext_max_data_burst_vol = ext_max_data_burst_vol
