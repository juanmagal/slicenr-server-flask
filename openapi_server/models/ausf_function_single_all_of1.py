# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.epn12_single import EPN12Single
from openapi_server.models.epn13_single import EPN13Single
from openapi_server import util

from openapi_server.models.epn12_single import EPN12Single  # noqa: E501
from openapi_server.models.epn13_single import EPN13Single  # noqa: E501

class AusfFunctionSingleAllOf1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ep_n12=None, ep_n13=None):  # noqa: E501
        """AusfFunctionSingleAllOf1 - a model defined in OpenAPI

        :param ep_n12: The ep_n12 of this AusfFunctionSingleAllOf1.  # noqa: E501
        :type ep_n12: List[EPN12Single]
        :param ep_n13: The ep_n13 of this AusfFunctionSingleAllOf1.  # noqa: E501
        :type ep_n13: List[EPN13Single]
        """
        self.openapi_types = {
            'ep_n12': List[EPN12Single],
            'ep_n13': List[EPN13Single]
        }

        self.attribute_map = {
            'ep_n12': 'EP_N12',
            'ep_n13': 'EP_N13'
        }

        self._ep_n12 = ep_n12
        self._ep_n13 = ep_n13

    @classmethod
    def from_dict(cls, dikt) -> 'AusfFunctionSingleAllOf1':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AusfFunction_Single_allOf_1 of this AusfFunctionSingleAllOf1.  # noqa: E501
        :rtype: AusfFunctionSingleAllOf1
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ep_n12(self):
        """Gets the ep_n12 of this AusfFunctionSingleAllOf1.


        :return: The ep_n12 of this AusfFunctionSingleAllOf1.
        :rtype: List[EPN12Single]
        """
        return self._ep_n12

    @ep_n12.setter
    def ep_n12(self, ep_n12):
        """Sets the ep_n12 of this AusfFunctionSingleAllOf1.


        :param ep_n12: The ep_n12 of this AusfFunctionSingleAllOf1.
        :type ep_n12: List[EPN12Single]
        """

        self._ep_n12 = ep_n12

    @property
    def ep_n13(self):
        """Gets the ep_n13 of this AusfFunctionSingleAllOf1.


        :return: The ep_n13 of this AusfFunctionSingleAllOf1.
        :rtype: List[EPN13Single]
        """
        return self._ep_n13

    @ep_n13.setter
    def ep_n13(self, ep_n13):
        """Sets the ep_n13 of this AusfFunctionSingleAllOf1.


        :param ep_n13: The ep_n13 of this AusfFunctionSingleAllOf1.
        :type ep_n13: List[EPN13Single]
        """

        self._ep_n13 = ep_n13
