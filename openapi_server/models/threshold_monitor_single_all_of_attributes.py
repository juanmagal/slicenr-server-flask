# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.administrative_state import AdministrativeState
from openapi_server.models.operational_state import OperationalState
from openapi_server.models.threshold_info import ThresholdInfo
from openapi_server import util

from openapi_server.models.administrative_state import AdministrativeState  # noqa: E501
from openapi_server.models.operational_state import OperationalState  # noqa: E501
from openapi_server.models.threshold_info import ThresholdInfo  # noqa: E501

class ThresholdMonitorSingleAllOfAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, administrative_state=None, operational_state=None, performance_metrics=None, threshold_info_list=None, monitor_granularity_period=None, object_instances=None, root_object_instances=None):  # noqa: E501
        """ThresholdMonitorSingleAllOfAttributes - a model defined in OpenAPI

        :param administrative_state: The administrative_state of this ThresholdMonitorSingleAllOfAttributes.  # noqa: E501
        :type administrative_state: AdministrativeState
        :param operational_state: The operational_state of this ThresholdMonitorSingleAllOfAttributes.  # noqa: E501
        :type operational_state: OperationalState
        :param performance_metrics: The performance_metrics of this ThresholdMonitorSingleAllOfAttributes.  # noqa: E501
        :type performance_metrics: List[str]
        :param threshold_info_list: The threshold_info_list of this ThresholdMonitorSingleAllOfAttributes.  # noqa: E501
        :type threshold_info_list: List[ThresholdInfo]
        :param monitor_granularity_period: The monitor_granularity_period of this ThresholdMonitorSingleAllOfAttributes.  # noqa: E501
        :type monitor_granularity_period: int
        :param object_instances: The object_instances of this ThresholdMonitorSingleAllOfAttributes.  # noqa: E501
        :type object_instances: List[str]
        :param root_object_instances: The root_object_instances of this ThresholdMonitorSingleAllOfAttributes.  # noqa: E501
        :type root_object_instances: List[str]
        """
        self.openapi_types = {
            'administrative_state': AdministrativeState,
            'operational_state': OperationalState,
            'performance_metrics': List[str],
            'threshold_info_list': List[ThresholdInfo],
            'monitor_granularity_period': int,
            'object_instances': List[str],
            'root_object_instances': List[str]
        }

        self.attribute_map = {
            'administrative_state': 'administrativeState',
            'operational_state': 'operationalState',
            'performance_metrics': 'performanceMetrics',
            'threshold_info_list': 'thresholdInfoList',
            'monitor_granularity_period': 'monitorGranularityPeriod',
            'object_instances': 'objectInstances',
            'root_object_instances': 'rootObjectInstances'
        }

        self._administrative_state = administrative_state
        self._operational_state = operational_state
        self._performance_metrics = performance_metrics
        self._threshold_info_list = threshold_info_list
        self._monitor_granularity_period = monitor_granularity_period
        self._object_instances = object_instances
        self._root_object_instances = root_object_instances

    @classmethod
    def from_dict(cls, dikt) -> 'ThresholdMonitorSingleAllOfAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ThresholdMonitor_Single_allOf_attributes of this ThresholdMonitorSingleAllOfAttributes.  # noqa: E501
        :rtype: ThresholdMonitorSingleAllOfAttributes
        """
        return util.deserialize_model(dikt, cls)

    @property
    def administrative_state(self):
        """Gets the administrative_state of this ThresholdMonitorSingleAllOfAttributes.


        :return: The administrative_state of this ThresholdMonitorSingleAllOfAttributes.
        :rtype: AdministrativeState
        """
        return self._administrative_state

    @administrative_state.setter
    def administrative_state(self, administrative_state):
        """Sets the administrative_state of this ThresholdMonitorSingleAllOfAttributes.


        :param administrative_state: The administrative_state of this ThresholdMonitorSingleAllOfAttributes.
        :type administrative_state: AdministrativeState
        """

        self._administrative_state = administrative_state

    @property
    def operational_state(self):
        """Gets the operational_state of this ThresholdMonitorSingleAllOfAttributes.


        :return: The operational_state of this ThresholdMonitorSingleAllOfAttributes.
        :rtype: OperationalState
        """
        return self._operational_state

    @operational_state.setter
    def operational_state(self, operational_state):
        """Sets the operational_state of this ThresholdMonitorSingleAllOfAttributes.


        :param operational_state: The operational_state of this ThresholdMonitorSingleAllOfAttributes.
        :type operational_state: OperationalState
        """

        self._operational_state = operational_state

    @property
    def performance_metrics(self):
        """Gets the performance_metrics of this ThresholdMonitorSingleAllOfAttributes.


        :return: The performance_metrics of this ThresholdMonitorSingleAllOfAttributes.
        :rtype: List[str]
        """
        return self._performance_metrics

    @performance_metrics.setter
    def performance_metrics(self, performance_metrics):
        """Sets the performance_metrics of this ThresholdMonitorSingleAllOfAttributes.


        :param performance_metrics: The performance_metrics of this ThresholdMonitorSingleAllOfAttributes.
        :type performance_metrics: List[str]
        """

        self._performance_metrics = performance_metrics

    @property
    def threshold_info_list(self):
        """Gets the threshold_info_list of this ThresholdMonitorSingleAllOfAttributes.


        :return: The threshold_info_list of this ThresholdMonitorSingleAllOfAttributes.
        :rtype: List[ThresholdInfo]
        """
        return self._threshold_info_list

    @threshold_info_list.setter
    def threshold_info_list(self, threshold_info_list):
        """Sets the threshold_info_list of this ThresholdMonitorSingleAllOfAttributes.


        :param threshold_info_list: The threshold_info_list of this ThresholdMonitorSingleAllOfAttributes.
        :type threshold_info_list: List[ThresholdInfo]
        """

        self._threshold_info_list = threshold_info_list

    @property
    def monitor_granularity_period(self):
        """Gets the monitor_granularity_period of this ThresholdMonitorSingleAllOfAttributes.


        :return: The monitor_granularity_period of this ThresholdMonitorSingleAllOfAttributes.
        :rtype: int
        """
        return self._monitor_granularity_period

    @monitor_granularity_period.setter
    def monitor_granularity_period(self, monitor_granularity_period):
        """Sets the monitor_granularity_period of this ThresholdMonitorSingleAllOfAttributes.


        :param monitor_granularity_period: The monitor_granularity_period of this ThresholdMonitorSingleAllOfAttributes.
        :type monitor_granularity_period: int
        """
        if monitor_granularity_period is not None and monitor_granularity_period < 1:  # noqa: E501
            raise ValueError("Invalid value for `monitor_granularity_period`, must be a value greater than or equal to `1`")  # noqa: E501

        self._monitor_granularity_period = monitor_granularity_period

    @property
    def object_instances(self):
        """Gets the object_instances of this ThresholdMonitorSingleAllOfAttributes.


        :return: The object_instances of this ThresholdMonitorSingleAllOfAttributes.
        :rtype: List[str]
        """
        return self._object_instances

    @object_instances.setter
    def object_instances(self, object_instances):
        """Sets the object_instances of this ThresholdMonitorSingleAllOfAttributes.


        :param object_instances: The object_instances of this ThresholdMonitorSingleAllOfAttributes.
        :type object_instances: List[str]
        """

        self._object_instances = object_instances

    @property
    def root_object_instances(self):
        """Gets the root_object_instances of this ThresholdMonitorSingleAllOfAttributes.


        :return: The root_object_instances of this ThresholdMonitorSingleAllOfAttributes.
        :rtype: List[str]
        """
        return self._root_object_instances

    @root_object_instances.setter
    def root_object_instances(self, root_object_instances):
        """Sets the root_object_instances of this ThresholdMonitorSingleAllOfAttributes.


        :param root_object_instances: The root_object_instances of this ThresholdMonitorSingleAllOfAttributes.
        :type root_object_instances: List[str]
        """

        self._root_object_instances = root_object_instances
