# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.epn15_single import EPN15Single
from openapi_server.models.epn16_single import EPN16Single
from openapi_server.models.epn5_single import EPN5Single
from openapi_server.models.epn7_single import EPN7Single
from openapi_server.models.eprx_single import EPRxSingle
from openapi_server.models.predefined_pcc_rule_set_single import PredefinedPccRuleSetSingle
from openapi_server import util

from openapi_server.models.epn15_single import EPN15Single  # noqa: E501
from openapi_server.models.epn16_single import EPN16Single  # noqa: E501
from openapi_server.models.epn5_single import EPN5Single  # noqa: E501
from openapi_server.models.epn7_single import EPN7Single  # noqa: E501
from openapi_server.models.eprx_single import EPRxSingle  # noqa: E501
from openapi_server.models.predefined_pcc_rule_set_single import PredefinedPccRuleSetSingle  # noqa: E501

class PcfFunctionSingleAllOf1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ep_n5=None, ep_n7=None, ep_n15=None, ep_n16=None, ep_rx=None, predefined_pcc_rule_set=None):  # noqa: E501
        """PcfFunctionSingleAllOf1 - a model defined in OpenAPI

        :param ep_n5: The ep_n5 of this PcfFunctionSingleAllOf1.  # noqa: E501
        :type ep_n5: List[EPN5Single]
        :param ep_n7: The ep_n7 of this PcfFunctionSingleAllOf1.  # noqa: E501
        :type ep_n7: List[EPN7Single]
        :param ep_n15: The ep_n15 of this PcfFunctionSingleAllOf1.  # noqa: E501
        :type ep_n15: List[EPN15Single]
        :param ep_n16: The ep_n16 of this PcfFunctionSingleAllOf1.  # noqa: E501
        :type ep_n16: List[EPN16Single]
        :param ep_rx: The ep_rx of this PcfFunctionSingleAllOf1.  # noqa: E501
        :type ep_rx: List[EPRxSingle]
        :param predefined_pcc_rule_set: The predefined_pcc_rule_set of this PcfFunctionSingleAllOf1.  # noqa: E501
        :type predefined_pcc_rule_set: PredefinedPccRuleSetSingle
        """
        self.openapi_types = {
            'ep_n5': List[EPN5Single],
            'ep_n7': List[EPN7Single],
            'ep_n15': List[EPN15Single],
            'ep_n16': List[EPN16Single],
            'ep_rx': List[EPRxSingle],
            'predefined_pcc_rule_set': PredefinedPccRuleSetSingle
        }

        self.attribute_map = {
            'ep_n5': 'EP_N5',
            'ep_n7': 'EP_N7',
            'ep_n15': 'EP_N15',
            'ep_n16': 'EP_N16',
            'ep_rx': 'EP_Rx',
            'predefined_pcc_rule_set': 'PredefinedPccRuleSet'
        }

        self._ep_n5 = ep_n5
        self._ep_n7 = ep_n7
        self._ep_n15 = ep_n15
        self._ep_n16 = ep_n16
        self._ep_rx = ep_rx
        self._predefined_pcc_rule_set = predefined_pcc_rule_set

    @classmethod
    def from_dict(cls, dikt) -> 'PcfFunctionSingleAllOf1':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PcfFunction_Single_allOf_1 of this PcfFunctionSingleAllOf1.  # noqa: E501
        :rtype: PcfFunctionSingleAllOf1
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ep_n5(self):
        """Gets the ep_n5 of this PcfFunctionSingleAllOf1.


        :return: The ep_n5 of this PcfFunctionSingleAllOf1.
        :rtype: List[EPN5Single]
        """
        return self._ep_n5

    @ep_n5.setter
    def ep_n5(self, ep_n5):
        """Sets the ep_n5 of this PcfFunctionSingleAllOf1.


        :param ep_n5: The ep_n5 of this PcfFunctionSingleAllOf1.
        :type ep_n5: List[EPN5Single]
        """

        self._ep_n5 = ep_n5

    @property
    def ep_n7(self):
        """Gets the ep_n7 of this PcfFunctionSingleAllOf1.


        :return: The ep_n7 of this PcfFunctionSingleAllOf1.
        :rtype: List[EPN7Single]
        """
        return self._ep_n7

    @ep_n7.setter
    def ep_n7(self, ep_n7):
        """Sets the ep_n7 of this PcfFunctionSingleAllOf1.


        :param ep_n7: The ep_n7 of this PcfFunctionSingleAllOf1.
        :type ep_n7: List[EPN7Single]
        """

        self._ep_n7 = ep_n7

    @property
    def ep_n15(self):
        """Gets the ep_n15 of this PcfFunctionSingleAllOf1.


        :return: The ep_n15 of this PcfFunctionSingleAllOf1.
        :rtype: List[EPN15Single]
        """
        return self._ep_n15

    @ep_n15.setter
    def ep_n15(self, ep_n15):
        """Sets the ep_n15 of this PcfFunctionSingleAllOf1.


        :param ep_n15: The ep_n15 of this PcfFunctionSingleAllOf1.
        :type ep_n15: List[EPN15Single]
        """

        self._ep_n15 = ep_n15

    @property
    def ep_n16(self):
        """Gets the ep_n16 of this PcfFunctionSingleAllOf1.


        :return: The ep_n16 of this PcfFunctionSingleAllOf1.
        :rtype: List[EPN16Single]
        """
        return self._ep_n16

    @ep_n16.setter
    def ep_n16(self, ep_n16):
        """Sets the ep_n16 of this PcfFunctionSingleAllOf1.


        :param ep_n16: The ep_n16 of this PcfFunctionSingleAllOf1.
        :type ep_n16: List[EPN16Single]
        """

        self._ep_n16 = ep_n16

    @property
    def ep_rx(self):
        """Gets the ep_rx of this PcfFunctionSingleAllOf1.


        :return: The ep_rx of this PcfFunctionSingleAllOf1.
        :rtype: List[EPRxSingle]
        """
        return self._ep_rx

    @ep_rx.setter
    def ep_rx(self, ep_rx):
        """Sets the ep_rx of this PcfFunctionSingleAllOf1.


        :param ep_rx: The ep_rx of this PcfFunctionSingleAllOf1.
        :type ep_rx: List[EPRxSingle]
        """

        self._ep_rx = ep_rx

    @property
    def predefined_pcc_rule_set(self):
        """Gets the predefined_pcc_rule_set of this PcfFunctionSingleAllOf1.


        :return: The predefined_pcc_rule_set of this PcfFunctionSingleAllOf1.
        :rtype: PredefinedPccRuleSetSingle
        """
        return self._predefined_pcc_rule_set

    @predefined_pcc_rule_set.setter
    def predefined_pcc_rule_set(self, predefined_pcc_rule_set):
        """Sets the predefined_pcc_rule_set of this PcfFunctionSingleAllOf1.


        :param predefined_pcc_rule_set: The predefined_pcc_rule_set of this PcfFunctionSingleAllOf1.
        :type predefined_pcc_rule_set: PredefinedPccRuleSetSingle
        """

        self._predefined_pcc_rule_set = predefined_pcc_rule_set
