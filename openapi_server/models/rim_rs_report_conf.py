# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.rim_rs_report_info import RimRSReportInfo
from openapi_server import util

from openapi_server.models.rim_rs_report_info import RimRSReportInfo  # noqa: E501

class RimRSReportConf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, report_indicator=None, report_interval=None, nrof_rimrs_report_info=None, max_propagation_delay=None, rim_rs_report_info_list=None):  # noqa: E501
        """RimRSReportConf - a model defined in OpenAPI

        :param report_indicator: The report_indicator of this RimRSReportConf.  # noqa: E501
        :type report_indicator: str
        :param report_interval: The report_interval of this RimRSReportConf.  # noqa: E501
        :type report_interval: int
        :param nrof_rimrs_report_info: The nrof_rimrs_report_info of this RimRSReportConf.  # noqa: E501
        :type nrof_rimrs_report_info: int
        :param max_propagation_delay: The max_propagation_delay of this RimRSReportConf.  # noqa: E501
        :type max_propagation_delay: int
        :param rim_rs_report_info_list: The rim_rs_report_info_list of this RimRSReportConf.  # noqa: E501
        :type rim_rs_report_info_list: List[RimRSReportInfo]
        """
        self.openapi_types = {
            'report_indicator': str,
            'report_interval': int,
            'nrof_rimrs_report_info': int,
            'max_propagation_delay': int,
            'rim_rs_report_info_list': List[RimRSReportInfo]
        }

        self.attribute_map = {
            'report_indicator': 'reportIndicator',
            'report_interval': 'reportInterval',
            'nrof_rimrs_report_info': 'nrofRIMRSReportInfo',
            'max_propagation_delay': 'maxPropagationDelay',
            'rim_rs_report_info_list': 'rimRSReportInfoList'
        }

        self._report_indicator = report_indicator
        self._report_interval = report_interval
        self._nrof_rimrs_report_info = nrof_rimrs_report_info
        self._max_propagation_delay = max_propagation_delay
        self._rim_rs_report_info_list = rim_rs_report_info_list

    @classmethod
    def from_dict(cls, dikt) -> 'RimRSReportConf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RimRSReportConf of this RimRSReportConf.  # noqa: E501
        :rtype: RimRSReportConf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def report_indicator(self):
        """Gets the report_indicator of this RimRSReportConf.


        :return: The report_indicator of this RimRSReportConf.
        :rtype: str
        """
        return self._report_indicator

    @report_indicator.setter
    def report_indicator(self, report_indicator):
        """Sets the report_indicator of this RimRSReportConf.


        :param report_indicator: The report_indicator of this RimRSReportConf.
        :type report_indicator: str
        """
        allowed_values = ["ENABLE", "DISABLE"]  # noqa: E501
        if report_indicator not in allowed_values:
            raise ValueError(
                "Invalid value for `report_indicator` ({0}), must be one of {1}"
                .format(report_indicator, allowed_values)
            )

        self._report_indicator = report_indicator

    @property
    def report_interval(self):
        """Gets the report_interval of this RimRSReportConf.


        :return: The report_interval of this RimRSReportConf.
        :rtype: int
        """
        return self._report_interval

    @report_interval.setter
    def report_interval(self, report_interval):
        """Sets the report_interval of this RimRSReportConf.


        :param report_interval: The report_interval of this RimRSReportConf.
        :type report_interval: int
        """

        self._report_interval = report_interval

    @property
    def nrof_rimrs_report_info(self):
        """Gets the nrof_rimrs_report_info of this RimRSReportConf.


        :return: The nrof_rimrs_report_info of this RimRSReportConf.
        :rtype: int
        """
        return self._nrof_rimrs_report_info

    @nrof_rimrs_report_info.setter
    def nrof_rimrs_report_info(self, nrof_rimrs_report_info):
        """Sets the nrof_rimrs_report_info of this RimRSReportConf.


        :param nrof_rimrs_report_info: The nrof_rimrs_report_info of this RimRSReportConf.
        :type nrof_rimrs_report_info: int
        """

        self._nrof_rimrs_report_info = nrof_rimrs_report_info

    @property
    def max_propagation_delay(self):
        """Gets the max_propagation_delay of this RimRSReportConf.


        :return: The max_propagation_delay of this RimRSReportConf.
        :rtype: int
        """
        return self._max_propagation_delay

    @max_propagation_delay.setter
    def max_propagation_delay(self, max_propagation_delay):
        """Sets the max_propagation_delay of this RimRSReportConf.


        :param max_propagation_delay: The max_propagation_delay of this RimRSReportConf.
        :type max_propagation_delay: int
        """

        self._max_propagation_delay = max_propagation_delay

    @property
    def rim_rs_report_info_list(self):
        """Gets the rim_rs_report_info_list of this RimRSReportConf.


        :return: The rim_rs_report_info_list of this RimRSReportConf.
        :rtype: List[RimRSReportInfo]
        """
        return self._rim_rs_report_info_list

    @rim_rs_report_info_list.setter
    def rim_rs_report_info_list(self, rim_rs_report_info_list):
        """Sets the rim_rs_report_info_list of this RimRSReportConf.


        :param rim_rs_report_info_list: The rim_rs_report_info_list of this RimRSReportConf.
        :type rim_rs_report_info_list: List[RimRSReportInfo]
        """

        self._rim_rs_report_info_list = rim_rs_report_info_list
