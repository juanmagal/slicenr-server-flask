# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.administrative_state import AdministrativeState
from openapi_server.models.cell_state import CellState
from openapi_server.models.npn_identity import NpnIdentity
from openapi_server.models.operational_state import OperationalState
from openapi_server.models.pee_parameter import PeeParameter
from openapi_server.models.plmn_info import PlmnInfo
from openapi_server.models.ssb_duration import SsbDuration
from openapi_server.models.ssb_periodicity import SsbPeriodicity
from openapi_server.models.ssb_sub_carrier_spacing import SsbSubCarrierSpacing
from openapi_server.models.supported_perf_metric_group import SupportedPerfMetricGroup
from openapi_server.models.vnf_parameter import VnfParameter
from openapi_server import util

from openapi_server.models.administrative_state import AdministrativeState  # noqa: E501
from openapi_server.models.cell_state import CellState  # noqa: E501
from openapi_server.models.npn_identity import NpnIdentity  # noqa: E501
from openapi_server.models.operational_state import OperationalState  # noqa: E501
from openapi_server.models.pee_parameter import PeeParameter  # noqa: E501
from openapi_server.models.plmn_info import PlmnInfo  # noqa: E501
from openapi_server.models.ssb_duration import SsbDuration  # noqa: E501
from openapi_server.models.ssb_periodicity import SsbPeriodicity  # noqa: E501
from openapi_server.models.ssb_sub_carrier_spacing import SsbSubCarrierSpacing  # noqa: E501
from openapi_server.models.supported_perf_metric_group import SupportedPerfMetricGroup  # noqa: E501
from openapi_server.models.vnf_parameter import VnfParameter  # noqa: E501

class NrCellDuSingleAllOfAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user_label=None, vnf_parameters_list=None, pee_parameters_list=None, priority_label=None, supported_perf_metric_groups=None, supported_trace_metrics=None, administrative_state=None, operational_state=None, cell_local_id=None, cell_state=None, plmn_info_list=None, npn_identity_list=None, nr_pci=None, nr_tac=None, arfcn_dl=None, arfcn_ul=None, arfcn_sul=None, b_s_channel_bw_dl=None, b_s_channel_bw_ul=None, b_s_channel_bw_sul=None, ssb_frequency=None, ssb_periodicity=None, ssb_sub_carrier_spacing=None, ssb_offset=None, ssb_duration=None, nr_sector_carrier_ref=None, bwp_ref=None, rim_rs_monitoring_start_time=None, rim_rs_monitoring_stop_time=None, rim_rs_monitoring_window_duration=None, rim_rs_monitoring_window_starting_offset=None, rim_rs_monitoring_window_periodicity=None, rim_rs_monitoring_occasion_interval=None, rim_rs_monitoring_occasion_starting_offset=None, n_r_frequency_ref=None, victim_set_ref=None, aggressor_set_ref=None):  # noqa: E501
        """NrCellDuSingleAllOfAttributes - a model defined in OpenAPI

        :param user_label: The user_label of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type user_label: str
        :param vnf_parameters_list: The vnf_parameters_list of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type vnf_parameters_list: List[VnfParameter]
        :param pee_parameters_list: The pee_parameters_list of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type pee_parameters_list: List[PeeParameter]
        :param priority_label: The priority_label of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type priority_label: int
        :param supported_perf_metric_groups: The supported_perf_metric_groups of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type supported_perf_metric_groups: List[SupportedPerfMetricGroup]
        :param supported_trace_metrics: The supported_trace_metrics of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type supported_trace_metrics: List[str]
        :param administrative_state: The administrative_state of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type administrative_state: AdministrativeState
        :param operational_state: The operational_state of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type operational_state: OperationalState
        :param cell_local_id: The cell_local_id of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type cell_local_id: int
        :param cell_state: The cell_state of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type cell_state: CellState
        :param plmn_info_list: The plmn_info_list of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type plmn_info_list: List[PlmnInfo]
        :param npn_identity_list: The npn_identity_list of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type npn_identity_list: List[NpnIdentity]
        :param nr_pci: The nr_pci of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type nr_pci: int
        :param nr_tac: The nr_tac of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type nr_tac: int
        :param arfcn_dl: The arfcn_dl of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type arfcn_dl: int
        :param arfcn_ul: The arfcn_ul of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type arfcn_ul: int
        :param arfcn_sul: The arfcn_sul of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type arfcn_sul: int
        :param b_s_channel_bw_dl: The b_s_channel_bw_dl of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type b_s_channel_bw_dl: int
        :param b_s_channel_bw_ul: The b_s_channel_bw_ul of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type b_s_channel_bw_ul: int
        :param b_s_channel_bw_sul: The b_s_channel_bw_sul of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type b_s_channel_bw_sul: int
        :param ssb_frequency: The ssb_frequency of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type ssb_frequency: int
        :param ssb_periodicity: The ssb_periodicity of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type ssb_periodicity: SsbPeriodicity
        :param ssb_sub_carrier_spacing: The ssb_sub_carrier_spacing of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type ssb_sub_carrier_spacing: SsbSubCarrierSpacing
        :param ssb_offset: The ssb_offset of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type ssb_offset: int
        :param ssb_duration: The ssb_duration of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type ssb_duration: SsbDuration
        :param nr_sector_carrier_ref: The nr_sector_carrier_ref of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type nr_sector_carrier_ref: List[str]
        :param bwp_ref: The bwp_ref of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type bwp_ref: List[str]
        :param rim_rs_monitoring_start_time: The rim_rs_monitoring_start_time of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type rim_rs_monitoring_start_time: str
        :param rim_rs_monitoring_stop_time: The rim_rs_monitoring_stop_time of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type rim_rs_monitoring_stop_time: str
        :param rim_rs_monitoring_window_duration: The rim_rs_monitoring_window_duration of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type rim_rs_monitoring_window_duration: int
        :param rim_rs_monitoring_window_starting_offset: The rim_rs_monitoring_window_starting_offset of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type rim_rs_monitoring_window_starting_offset: int
        :param rim_rs_monitoring_window_periodicity: The rim_rs_monitoring_window_periodicity of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type rim_rs_monitoring_window_periodicity: int
        :param rim_rs_monitoring_occasion_interval: The rim_rs_monitoring_occasion_interval of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type rim_rs_monitoring_occasion_interval: int
        :param rim_rs_monitoring_occasion_starting_offset: The rim_rs_monitoring_occasion_starting_offset of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type rim_rs_monitoring_occasion_starting_offset: int
        :param n_r_frequency_ref: The n_r_frequency_ref of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type n_r_frequency_ref: str
        :param victim_set_ref: The victim_set_ref of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type victim_set_ref: str
        :param aggressor_set_ref: The aggressor_set_ref of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :type aggressor_set_ref: str
        """
        self.openapi_types = {
            'user_label': str,
            'vnf_parameters_list': List[VnfParameter],
            'pee_parameters_list': List[PeeParameter],
            'priority_label': int,
            'supported_perf_metric_groups': List[SupportedPerfMetricGroup],
            'supported_trace_metrics': List[str],
            'administrative_state': AdministrativeState,
            'operational_state': OperationalState,
            'cell_local_id': int,
            'cell_state': CellState,
            'plmn_info_list': List[PlmnInfo],
            'npn_identity_list': List[NpnIdentity],
            'nr_pci': int,
            'nr_tac': int,
            'arfcn_dl': int,
            'arfcn_ul': int,
            'arfcn_sul': int,
            'b_s_channel_bw_dl': int,
            'b_s_channel_bw_ul': int,
            'b_s_channel_bw_sul': int,
            'ssb_frequency': int,
            'ssb_periodicity': SsbPeriodicity,
            'ssb_sub_carrier_spacing': SsbSubCarrierSpacing,
            'ssb_offset': int,
            'ssb_duration': SsbDuration,
            'nr_sector_carrier_ref': List[str],
            'bwp_ref': List[str],
            'rim_rs_monitoring_start_time': str,
            'rim_rs_monitoring_stop_time': str,
            'rim_rs_monitoring_window_duration': int,
            'rim_rs_monitoring_window_starting_offset': int,
            'rim_rs_monitoring_window_periodicity': int,
            'rim_rs_monitoring_occasion_interval': int,
            'rim_rs_monitoring_occasion_starting_offset': int,
            'n_r_frequency_ref': str,
            'victim_set_ref': str,
            'aggressor_set_ref': str
        }

        self.attribute_map = {
            'user_label': 'userLabel',
            'vnf_parameters_list': 'vnfParametersList',
            'pee_parameters_list': 'peeParametersList',
            'priority_label': 'priorityLabel',
            'supported_perf_metric_groups': 'supportedPerfMetricGroups',
            'supported_trace_metrics': 'supportedTraceMetrics',
            'administrative_state': 'administrativeState',
            'operational_state': 'operationalState',
            'cell_local_id': 'cellLocalId',
            'cell_state': 'cellState',
            'plmn_info_list': 'plmnInfoList',
            'npn_identity_list': 'npnIdentityList',
            'nr_pci': 'nrPci',
            'nr_tac': 'nrTac',
            'arfcn_dl': 'arfcnDL',
            'arfcn_ul': 'arfcnUL',
            'arfcn_sul': 'arfcnSUL',
            'b_s_channel_bw_dl': 'bSChannelBwDL',
            'b_s_channel_bw_ul': 'bSChannelBwUL',
            'b_s_channel_bw_sul': 'bSChannelBwSUL',
            'ssb_frequency': 'ssbFrequency',
            'ssb_periodicity': 'ssbPeriodicity',
            'ssb_sub_carrier_spacing': 'ssbSubCarrierSpacing',
            'ssb_offset': 'ssbOffset',
            'ssb_duration': 'ssbDuration',
            'nr_sector_carrier_ref': 'nrSectorCarrierRef',
            'bwp_ref': 'bwpRef',
            'rim_rs_monitoring_start_time': 'rimRSMonitoringStartTime',
            'rim_rs_monitoring_stop_time': 'rimRSMonitoringStopTime',
            'rim_rs_monitoring_window_duration': 'rimRSMonitoringWindowDuration',
            'rim_rs_monitoring_window_starting_offset': 'rimRSMonitoringWindowStartingOffset',
            'rim_rs_monitoring_window_periodicity': 'rimRSMonitoringWindowPeriodicity',
            'rim_rs_monitoring_occasion_interval': 'rimRSMonitoringOccasionInterval',
            'rim_rs_monitoring_occasion_starting_offset': 'rimRSMonitoringOccasionStartingOffset',
            'n_r_frequency_ref': 'nRFrequencyRef',
            'victim_set_ref': 'victimSetRef',
            'aggressor_set_ref': 'aggressorSetRef'
        }

        self._user_label = user_label
        self._vnf_parameters_list = vnf_parameters_list
        self._pee_parameters_list = pee_parameters_list
        self._priority_label = priority_label
        self._supported_perf_metric_groups = supported_perf_metric_groups
        self._supported_trace_metrics = supported_trace_metrics
        self._administrative_state = administrative_state
        self._operational_state = operational_state
        self._cell_local_id = cell_local_id
        self._cell_state = cell_state
        self._plmn_info_list = plmn_info_list
        self._npn_identity_list = npn_identity_list
        self._nr_pci = nr_pci
        self._nr_tac = nr_tac
        self._arfcn_dl = arfcn_dl
        self._arfcn_ul = arfcn_ul
        self._arfcn_sul = arfcn_sul
        self._b_s_channel_bw_dl = b_s_channel_bw_dl
        self._b_s_channel_bw_ul = b_s_channel_bw_ul
        self._b_s_channel_bw_sul = b_s_channel_bw_sul
        self._ssb_frequency = ssb_frequency
        self._ssb_periodicity = ssb_periodicity
        self._ssb_sub_carrier_spacing = ssb_sub_carrier_spacing
        self._ssb_offset = ssb_offset
        self._ssb_duration = ssb_duration
        self._nr_sector_carrier_ref = nr_sector_carrier_ref
        self._bwp_ref = bwp_ref
        self._rim_rs_monitoring_start_time = rim_rs_monitoring_start_time
        self._rim_rs_monitoring_stop_time = rim_rs_monitoring_stop_time
        self._rim_rs_monitoring_window_duration = rim_rs_monitoring_window_duration
        self._rim_rs_monitoring_window_starting_offset = rim_rs_monitoring_window_starting_offset
        self._rim_rs_monitoring_window_periodicity = rim_rs_monitoring_window_periodicity
        self._rim_rs_monitoring_occasion_interval = rim_rs_monitoring_occasion_interval
        self._rim_rs_monitoring_occasion_starting_offset = rim_rs_monitoring_occasion_starting_offset
        self._n_r_frequency_ref = n_r_frequency_ref
        self._victim_set_ref = victim_set_ref
        self._aggressor_set_ref = aggressor_set_ref

    @classmethod
    def from_dict(cls, dikt) -> 'NrCellDuSingleAllOfAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NrCellDu_Single_allOf_attributes of this NrCellDuSingleAllOfAttributes.  # noqa: E501
        :rtype: NrCellDuSingleAllOfAttributes
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_label(self):
        """Gets the user_label of this NrCellDuSingleAllOfAttributes.


        :return: The user_label of this NrCellDuSingleAllOfAttributes.
        :rtype: str
        """
        return self._user_label

    @user_label.setter
    def user_label(self, user_label):
        """Sets the user_label of this NrCellDuSingleAllOfAttributes.


        :param user_label: The user_label of this NrCellDuSingleAllOfAttributes.
        :type user_label: str
        """

        self._user_label = user_label

    @property
    def vnf_parameters_list(self):
        """Gets the vnf_parameters_list of this NrCellDuSingleAllOfAttributes.


        :return: The vnf_parameters_list of this NrCellDuSingleAllOfAttributes.
        :rtype: List[VnfParameter]
        """
        return self._vnf_parameters_list

    @vnf_parameters_list.setter
    def vnf_parameters_list(self, vnf_parameters_list):
        """Sets the vnf_parameters_list of this NrCellDuSingleAllOfAttributes.


        :param vnf_parameters_list: The vnf_parameters_list of this NrCellDuSingleAllOfAttributes.
        :type vnf_parameters_list: List[VnfParameter]
        """

        self._vnf_parameters_list = vnf_parameters_list

    @property
    def pee_parameters_list(self):
        """Gets the pee_parameters_list of this NrCellDuSingleAllOfAttributes.


        :return: The pee_parameters_list of this NrCellDuSingleAllOfAttributes.
        :rtype: List[PeeParameter]
        """
        return self._pee_parameters_list

    @pee_parameters_list.setter
    def pee_parameters_list(self, pee_parameters_list):
        """Sets the pee_parameters_list of this NrCellDuSingleAllOfAttributes.


        :param pee_parameters_list: The pee_parameters_list of this NrCellDuSingleAllOfAttributes.
        :type pee_parameters_list: List[PeeParameter]
        """

        self._pee_parameters_list = pee_parameters_list

    @property
    def priority_label(self):
        """Gets the priority_label of this NrCellDuSingleAllOfAttributes.


        :return: The priority_label of this NrCellDuSingleAllOfAttributes.
        :rtype: int
        """
        return self._priority_label

    @priority_label.setter
    def priority_label(self, priority_label):
        """Sets the priority_label of this NrCellDuSingleAllOfAttributes.


        :param priority_label: The priority_label of this NrCellDuSingleAllOfAttributes.
        :type priority_label: int
        """

        self._priority_label = priority_label

    @property
    def supported_perf_metric_groups(self):
        """Gets the supported_perf_metric_groups of this NrCellDuSingleAllOfAttributes.


        :return: The supported_perf_metric_groups of this NrCellDuSingleAllOfAttributes.
        :rtype: List[SupportedPerfMetricGroup]
        """
        return self._supported_perf_metric_groups

    @supported_perf_metric_groups.setter
    def supported_perf_metric_groups(self, supported_perf_metric_groups):
        """Sets the supported_perf_metric_groups of this NrCellDuSingleAllOfAttributes.


        :param supported_perf_metric_groups: The supported_perf_metric_groups of this NrCellDuSingleAllOfAttributes.
        :type supported_perf_metric_groups: List[SupportedPerfMetricGroup]
        """

        self._supported_perf_metric_groups = supported_perf_metric_groups

    @property
    def supported_trace_metrics(self):
        """Gets the supported_trace_metrics of this NrCellDuSingleAllOfAttributes.


        :return: The supported_trace_metrics of this NrCellDuSingleAllOfAttributes.
        :rtype: List[str]
        """
        return self._supported_trace_metrics

    @supported_trace_metrics.setter
    def supported_trace_metrics(self, supported_trace_metrics):
        """Sets the supported_trace_metrics of this NrCellDuSingleAllOfAttributes.


        :param supported_trace_metrics: The supported_trace_metrics of this NrCellDuSingleAllOfAttributes.
        :type supported_trace_metrics: List[str]
        """

        self._supported_trace_metrics = supported_trace_metrics

    @property
    def administrative_state(self):
        """Gets the administrative_state of this NrCellDuSingleAllOfAttributes.


        :return: The administrative_state of this NrCellDuSingleAllOfAttributes.
        :rtype: AdministrativeState
        """
        return self._administrative_state

    @administrative_state.setter
    def administrative_state(self, administrative_state):
        """Sets the administrative_state of this NrCellDuSingleAllOfAttributes.


        :param administrative_state: The administrative_state of this NrCellDuSingleAllOfAttributes.
        :type administrative_state: AdministrativeState
        """

        self._administrative_state = administrative_state

    @property
    def operational_state(self):
        """Gets the operational_state of this NrCellDuSingleAllOfAttributes.


        :return: The operational_state of this NrCellDuSingleAllOfAttributes.
        :rtype: OperationalState
        """
        return self._operational_state

    @operational_state.setter
    def operational_state(self, operational_state):
        """Sets the operational_state of this NrCellDuSingleAllOfAttributes.


        :param operational_state: The operational_state of this NrCellDuSingleAllOfAttributes.
        :type operational_state: OperationalState
        """

        self._operational_state = operational_state

    @property
    def cell_local_id(self):
        """Gets the cell_local_id of this NrCellDuSingleAllOfAttributes.


        :return: The cell_local_id of this NrCellDuSingleAllOfAttributes.
        :rtype: int
        """
        return self._cell_local_id

    @cell_local_id.setter
    def cell_local_id(self, cell_local_id):
        """Sets the cell_local_id of this NrCellDuSingleAllOfAttributes.


        :param cell_local_id: The cell_local_id of this NrCellDuSingleAllOfAttributes.
        :type cell_local_id: int
        """

        self._cell_local_id = cell_local_id

    @property
    def cell_state(self):
        """Gets the cell_state of this NrCellDuSingleAllOfAttributes.


        :return: The cell_state of this NrCellDuSingleAllOfAttributes.
        :rtype: CellState
        """
        return self._cell_state

    @cell_state.setter
    def cell_state(self, cell_state):
        """Sets the cell_state of this NrCellDuSingleAllOfAttributes.


        :param cell_state: The cell_state of this NrCellDuSingleAllOfAttributes.
        :type cell_state: CellState
        """

        self._cell_state = cell_state

    @property
    def plmn_info_list(self):
        """Gets the plmn_info_list of this NrCellDuSingleAllOfAttributes.


        :return: The plmn_info_list of this NrCellDuSingleAllOfAttributes.
        :rtype: List[PlmnInfo]
        """
        return self._plmn_info_list

    @plmn_info_list.setter
    def plmn_info_list(self, plmn_info_list):
        """Sets the plmn_info_list of this NrCellDuSingleAllOfAttributes.


        :param plmn_info_list: The plmn_info_list of this NrCellDuSingleAllOfAttributes.
        :type plmn_info_list: List[PlmnInfo]
        """

        self._plmn_info_list = plmn_info_list

    @property
    def npn_identity_list(self):
        """Gets the npn_identity_list of this NrCellDuSingleAllOfAttributes.


        :return: The npn_identity_list of this NrCellDuSingleAllOfAttributes.
        :rtype: List[NpnIdentity]
        """
        return self._npn_identity_list

    @npn_identity_list.setter
    def npn_identity_list(self, npn_identity_list):
        """Sets the npn_identity_list of this NrCellDuSingleAllOfAttributes.


        :param npn_identity_list: The npn_identity_list of this NrCellDuSingleAllOfAttributes.
        :type npn_identity_list: List[NpnIdentity]
        """

        self._npn_identity_list = npn_identity_list

    @property
    def nr_pci(self):
        """Gets the nr_pci of this NrCellDuSingleAllOfAttributes.


        :return: The nr_pci of this NrCellDuSingleAllOfAttributes.
        :rtype: int
        """
        return self._nr_pci

    @nr_pci.setter
    def nr_pci(self, nr_pci):
        """Sets the nr_pci of this NrCellDuSingleAllOfAttributes.


        :param nr_pci: The nr_pci of this NrCellDuSingleAllOfAttributes.
        :type nr_pci: int
        """
        if nr_pci is not None and nr_pci > 503:  # noqa: E501
            raise ValueError("Invalid value for `nr_pci`, must be a value less than or equal to `503`")  # noqa: E501

        self._nr_pci = nr_pci

    @property
    def nr_tac(self):
        """Gets the nr_tac of this NrCellDuSingleAllOfAttributes.


        :return: The nr_tac of this NrCellDuSingleAllOfAttributes.
        :rtype: int
        """
        return self._nr_tac

    @nr_tac.setter
    def nr_tac(self, nr_tac):
        """Sets the nr_tac of this NrCellDuSingleAllOfAttributes.


        :param nr_tac: The nr_tac of this NrCellDuSingleAllOfAttributes.
        :type nr_tac: int
        """
        if nr_tac is not None and nr_tac > 16777215:  # noqa: E501
            raise ValueError("Invalid value for `nr_tac`, must be a value less than or equal to `16777215`")  # noqa: E501

        self._nr_tac = nr_tac

    @property
    def arfcn_dl(self):
        """Gets the arfcn_dl of this NrCellDuSingleAllOfAttributes.


        :return: The arfcn_dl of this NrCellDuSingleAllOfAttributes.
        :rtype: int
        """
        return self._arfcn_dl

    @arfcn_dl.setter
    def arfcn_dl(self, arfcn_dl):
        """Sets the arfcn_dl of this NrCellDuSingleAllOfAttributes.


        :param arfcn_dl: The arfcn_dl of this NrCellDuSingleAllOfAttributes.
        :type arfcn_dl: int
        """

        self._arfcn_dl = arfcn_dl

    @property
    def arfcn_ul(self):
        """Gets the arfcn_ul of this NrCellDuSingleAllOfAttributes.


        :return: The arfcn_ul of this NrCellDuSingleAllOfAttributes.
        :rtype: int
        """
        return self._arfcn_ul

    @arfcn_ul.setter
    def arfcn_ul(self, arfcn_ul):
        """Sets the arfcn_ul of this NrCellDuSingleAllOfAttributes.


        :param arfcn_ul: The arfcn_ul of this NrCellDuSingleAllOfAttributes.
        :type arfcn_ul: int
        """

        self._arfcn_ul = arfcn_ul

    @property
    def arfcn_sul(self):
        """Gets the arfcn_sul of this NrCellDuSingleAllOfAttributes.


        :return: The arfcn_sul of this NrCellDuSingleAllOfAttributes.
        :rtype: int
        """
        return self._arfcn_sul

    @arfcn_sul.setter
    def arfcn_sul(self, arfcn_sul):
        """Sets the arfcn_sul of this NrCellDuSingleAllOfAttributes.


        :param arfcn_sul: The arfcn_sul of this NrCellDuSingleAllOfAttributes.
        :type arfcn_sul: int
        """

        self._arfcn_sul = arfcn_sul

    @property
    def b_s_channel_bw_dl(self):
        """Gets the b_s_channel_bw_dl of this NrCellDuSingleAllOfAttributes.


        :return: The b_s_channel_bw_dl of this NrCellDuSingleAllOfAttributes.
        :rtype: int
        """
        return self._b_s_channel_bw_dl

    @b_s_channel_bw_dl.setter
    def b_s_channel_bw_dl(self, b_s_channel_bw_dl):
        """Sets the b_s_channel_bw_dl of this NrCellDuSingleAllOfAttributes.


        :param b_s_channel_bw_dl: The b_s_channel_bw_dl of this NrCellDuSingleAllOfAttributes.
        :type b_s_channel_bw_dl: int
        """

        self._b_s_channel_bw_dl = b_s_channel_bw_dl

    @property
    def b_s_channel_bw_ul(self):
        """Gets the b_s_channel_bw_ul of this NrCellDuSingleAllOfAttributes.


        :return: The b_s_channel_bw_ul of this NrCellDuSingleAllOfAttributes.
        :rtype: int
        """
        return self._b_s_channel_bw_ul

    @b_s_channel_bw_ul.setter
    def b_s_channel_bw_ul(self, b_s_channel_bw_ul):
        """Sets the b_s_channel_bw_ul of this NrCellDuSingleAllOfAttributes.


        :param b_s_channel_bw_ul: The b_s_channel_bw_ul of this NrCellDuSingleAllOfAttributes.
        :type b_s_channel_bw_ul: int
        """

        self._b_s_channel_bw_ul = b_s_channel_bw_ul

    @property
    def b_s_channel_bw_sul(self):
        """Gets the b_s_channel_bw_sul of this NrCellDuSingleAllOfAttributes.


        :return: The b_s_channel_bw_sul of this NrCellDuSingleAllOfAttributes.
        :rtype: int
        """
        return self._b_s_channel_bw_sul

    @b_s_channel_bw_sul.setter
    def b_s_channel_bw_sul(self, b_s_channel_bw_sul):
        """Sets the b_s_channel_bw_sul of this NrCellDuSingleAllOfAttributes.


        :param b_s_channel_bw_sul: The b_s_channel_bw_sul of this NrCellDuSingleAllOfAttributes.
        :type b_s_channel_bw_sul: int
        """

        self._b_s_channel_bw_sul = b_s_channel_bw_sul

    @property
    def ssb_frequency(self):
        """Gets the ssb_frequency of this NrCellDuSingleAllOfAttributes.


        :return: The ssb_frequency of this NrCellDuSingleAllOfAttributes.
        :rtype: int
        """
        return self._ssb_frequency

    @ssb_frequency.setter
    def ssb_frequency(self, ssb_frequency):
        """Sets the ssb_frequency of this NrCellDuSingleAllOfAttributes.


        :param ssb_frequency: The ssb_frequency of this NrCellDuSingleAllOfAttributes.
        :type ssb_frequency: int
        """
        if ssb_frequency is not None and ssb_frequency > 3279165:  # noqa: E501
            raise ValueError("Invalid value for `ssb_frequency`, must be a value less than or equal to `3279165`")  # noqa: E501
        if ssb_frequency is not None and ssb_frequency < 0:  # noqa: E501
            raise ValueError("Invalid value for `ssb_frequency`, must be a value greater than or equal to `0`")  # noqa: E501

        self._ssb_frequency = ssb_frequency

    @property
    def ssb_periodicity(self):
        """Gets the ssb_periodicity of this NrCellDuSingleAllOfAttributes.


        :return: The ssb_periodicity of this NrCellDuSingleAllOfAttributes.
        :rtype: SsbPeriodicity
        """
        return self._ssb_periodicity

    @ssb_periodicity.setter
    def ssb_periodicity(self, ssb_periodicity):
        """Sets the ssb_periodicity of this NrCellDuSingleAllOfAttributes.


        :param ssb_periodicity: The ssb_periodicity of this NrCellDuSingleAllOfAttributes.
        :type ssb_periodicity: SsbPeriodicity
        """

        self._ssb_periodicity = ssb_periodicity

    @property
    def ssb_sub_carrier_spacing(self):
        """Gets the ssb_sub_carrier_spacing of this NrCellDuSingleAllOfAttributes.


        :return: The ssb_sub_carrier_spacing of this NrCellDuSingleAllOfAttributes.
        :rtype: SsbSubCarrierSpacing
        """
        return self._ssb_sub_carrier_spacing

    @ssb_sub_carrier_spacing.setter
    def ssb_sub_carrier_spacing(self, ssb_sub_carrier_spacing):
        """Sets the ssb_sub_carrier_spacing of this NrCellDuSingleAllOfAttributes.


        :param ssb_sub_carrier_spacing: The ssb_sub_carrier_spacing of this NrCellDuSingleAllOfAttributes.
        :type ssb_sub_carrier_spacing: SsbSubCarrierSpacing
        """

        self._ssb_sub_carrier_spacing = ssb_sub_carrier_spacing

    @property
    def ssb_offset(self):
        """Gets the ssb_offset of this NrCellDuSingleAllOfAttributes.


        :return: The ssb_offset of this NrCellDuSingleAllOfAttributes.
        :rtype: int
        """
        return self._ssb_offset

    @ssb_offset.setter
    def ssb_offset(self, ssb_offset):
        """Sets the ssb_offset of this NrCellDuSingleAllOfAttributes.


        :param ssb_offset: The ssb_offset of this NrCellDuSingleAllOfAttributes.
        :type ssb_offset: int
        """
        if ssb_offset is not None and ssb_offset > 159:  # noqa: E501
            raise ValueError("Invalid value for `ssb_offset`, must be a value less than or equal to `159`")  # noqa: E501
        if ssb_offset is not None and ssb_offset < 0:  # noqa: E501
            raise ValueError("Invalid value for `ssb_offset`, must be a value greater than or equal to `0`")  # noqa: E501

        self._ssb_offset = ssb_offset

    @property
    def ssb_duration(self):
        """Gets the ssb_duration of this NrCellDuSingleAllOfAttributes.


        :return: The ssb_duration of this NrCellDuSingleAllOfAttributes.
        :rtype: SsbDuration
        """
        return self._ssb_duration

    @ssb_duration.setter
    def ssb_duration(self, ssb_duration):
        """Sets the ssb_duration of this NrCellDuSingleAllOfAttributes.


        :param ssb_duration: The ssb_duration of this NrCellDuSingleAllOfAttributes.
        :type ssb_duration: SsbDuration
        """

        self._ssb_duration = ssb_duration

    @property
    def nr_sector_carrier_ref(self):
        """Gets the nr_sector_carrier_ref of this NrCellDuSingleAllOfAttributes.


        :return: The nr_sector_carrier_ref of this NrCellDuSingleAllOfAttributes.
        :rtype: List[str]
        """
        return self._nr_sector_carrier_ref

    @nr_sector_carrier_ref.setter
    def nr_sector_carrier_ref(self, nr_sector_carrier_ref):
        """Sets the nr_sector_carrier_ref of this NrCellDuSingleAllOfAttributes.


        :param nr_sector_carrier_ref: The nr_sector_carrier_ref of this NrCellDuSingleAllOfAttributes.
        :type nr_sector_carrier_ref: List[str]
        """

        self._nr_sector_carrier_ref = nr_sector_carrier_ref

    @property
    def bwp_ref(self):
        """Gets the bwp_ref of this NrCellDuSingleAllOfAttributes.


        :return: The bwp_ref of this NrCellDuSingleAllOfAttributes.
        :rtype: List[str]
        """
        return self._bwp_ref

    @bwp_ref.setter
    def bwp_ref(self, bwp_ref):
        """Sets the bwp_ref of this NrCellDuSingleAllOfAttributes.


        :param bwp_ref: The bwp_ref of this NrCellDuSingleAllOfAttributes.
        :type bwp_ref: List[str]
        """

        self._bwp_ref = bwp_ref

    @property
    def rim_rs_monitoring_start_time(self):
        """Gets the rim_rs_monitoring_start_time of this NrCellDuSingleAllOfAttributes.


        :return: The rim_rs_monitoring_start_time of this NrCellDuSingleAllOfAttributes.
        :rtype: str
        """
        return self._rim_rs_monitoring_start_time

    @rim_rs_monitoring_start_time.setter
    def rim_rs_monitoring_start_time(self, rim_rs_monitoring_start_time):
        """Sets the rim_rs_monitoring_start_time of this NrCellDuSingleAllOfAttributes.


        :param rim_rs_monitoring_start_time: The rim_rs_monitoring_start_time of this NrCellDuSingleAllOfAttributes.
        :type rim_rs_monitoring_start_time: str
        """

        self._rim_rs_monitoring_start_time = rim_rs_monitoring_start_time

    @property
    def rim_rs_monitoring_stop_time(self):
        """Gets the rim_rs_monitoring_stop_time of this NrCellDuSingleAllOfAttributes.


        :return: The rim_rs_monitoring_stop_time of this NrCellDuSingleAllOfAttributes.
        :rtype: str
        """
        return self._rim_rs_monitoring_stop_time

    @rim_rs_monitoring_stop_time.setter
    def rim_rs_monitoring_stop_time(self, rim_rs_monitoring_stop_time):
        """Sets the rim_rs_monitoring_stop_time of this NrCellDuSingleAllOfAttributes.


        :param rim_rs_monitoring_stop_time: The rim_rs_monitoring_stop_time of this NrCellDuSingleAllOfAttributes.
        :type rim_rs_monitoring_stop_time: str
        """

        self._rim_rs_monitoring_stop_time = rim_rs_monitoring_stop_time

    @property
    def rim_rs_monitoring_window_duration(self):
        """Gets the rim_rs_monitoring_window_duration of this NrCellDuSingleAllOfAttributes.


        :return: The rim_rs_monitoring_window_duration of this NrCellDuSingleAllOfAttributes.
        :rtype: int
        """
        return self._rim_rs_monitoring_window_duration

    @rim_rs_monitoring_window_duration.setter
    def rim_rs_monitoring_window_duration(self, rim_rs_monitoring_window_duration):
        """Sets the rim_rs_monitoring_window_duration of this NrCellDuSingleAllOfAttributes.


        :param rim_rs_monitoring_window_duration: The rim_rs_monitoring_window_duration of this NrCellDuSingleAllOfAttributes.
        :type rim_rs_monitoring_window_duration: int
        """

        self._rim_rs_monitoring_window_duration = rim_rs_monitoring_window_duration

    @property
    def rim_rs_monitoring_window_starting_offset(self):
        """Gets the rim_rs_monitoring_window_starting_offset of this NrCellDuSingleAllOfAttributes.


        :return: The rim_rs_monitoring_window_starting_offset of this NrCellDuSingleAllOfAttributes.
        :rtype: int
        """
        return self._rim_rs_monitoring_window_starting_offset

    @rim_rs_monitoring_window_starting_offset.setter
    def rim_rs_monitoring_window_starting_offset(self, rim_rs_monitoring_window_starting_offset):
        """Sets the rim_rs_monitoring_window_starting_offset of this NrCellDuSingleAllOfAttributes.


        :param rim_rs_monitoring_window_starting_offset: The rim_rs_monitoring_window_starting_offset of this NrCellDuSingleAllOfAttributes.
        :type rim_rs_monitoring_window_starting_offset: int
        """

        self._rim_rs_monitoring_window_starting_offset = rim_rs_monitoring_window_starting_offset

    @property
    def rim_rs_monitoring_window_periodicity(self):
        """Gets the rim_rs_monitoring_window_periodicity of this NrCellDuSingleAllOfAttributes.


        :return: The rim_rs_monitoring_window_periodicity of this NrCellDuSingleAllOfAttributes.
        :rtype: int
        """
        return self._rim_rs_monitoring_window_periodicity

    @rim_rs_monitoring_window_periodicity.setter
    def rim_rs_monitoring_window_periodicity(self, rim_rs_monitoring_window_periodicity):
        """Sets the rim_rs_monitoring_window_periodicity of this NrCellDuSingleAllOfAttributes.


        :param rim_rs_monitoring_window_periodicity: The rim_rs_monitoring_window_periodicity of this NrCellDuSingleAllOfAttributes.
        :type rim_rs_monitoring_window_periodicity: int
        """

        self._rim_rs_monitoring_window_periodicity = rim_rs_monitoring_window_periodicity

    @property
    def rim_rs_monitoring_occasion_interval(self):
        """Gets the rim_rs_monitoring_occasion_interval of this NrCellDuSingleAllOfAttributes.


        :return: The rim_rs_monitoring_occasion_interval of this NrCellDuSingleAllOfAttributes.
        :rtype: int
        """
        return self._rim_rs_monitoring_occasion_interval

    @rim_rs_monitoring_occasion_interval.setter
    def rim_rs_monitoring_occasion_interval(self, rim_rs_monitoring_occasion_interval):
        """Sets the rim_rs_monitoring_occasion_interval of this NrCellDuSingleAllOfAttributes.


        :param rim_rs_monitoring_occasion_interval: The rim_rs_monitoring_occasion_interval of this NrCellDuSingleAllOfAttributes.
        :type rim_rs_monitoring_occasion_interval: int
        """

        self._rim_rs_monitoring_occasion_interval = rim_rs_monitoring_occasion_interval

    @property
    def rim_rs_monitoring_occasion_starting_offset(self):
        """Gets the rim_rs_monitoring_occasion_starting_offset of this NrCellDuSingleAllOfAttributes.


        :return: The rim_rs_monitoring_occasion_starting_offset of this NrCellDuSingleAllOfAttributes.
        :rtype: int
        """
        return self._rim_rs_monitoring_occasion_starting_offset

    @rim_rs_monitoring_occasion_starting_offset.setter
    def rim_rs_monitoring_occasion_starting_offset(self, rim_rs_monitoring_occasion_starting_offset):
        """Sets the rim_rs_monitoring_occasion_starting_offset of this NrCellDuSingleAllOfAttributes.


        :param rim_rs_monitoring_occasion_starting_offset: The rim_rs_monitoring_occasion_starting_offset of this NrCellDuSingleAllOfAttributes.
        :type rim_rs_monitoring_occasion_starting_offset: int
        """

        self._rim_rs_monitoring_occasion_starting_offset = rim_rs_monitoring_occasion_starting_offset

    @property
    def n_r_frequency_ref(self):
        """Gets the n_r_frequency_ref of this NrCellDuSingleAllOfAttributes.


        :return: The n_r_frequency_ref of this NrCellDuSingleAllOfAttributes.
        :rtype: str
        """
        return self._n_r_frequency_ref

    @n_r_frequency_ref.setter
    def n_r_frequency_ref(self, n_r_frequency_ref):
        """Sets the n_r_frequency_ref of this NrCellDuSingleAllOfAttributes.


        :param n_r_frequency_ref: The n_r_frequency_ref of this NrCellDuSingleAllOfAttributes.
        :type n_r_frequency_ref: str
        """

        self._n_r_frequency_ref = n_r_frequency_ref

    @property
    def victim_set_ref(self):
        """Gets the victim_set_ref of this NrCellDuSingleAllOfAttributes.


        :return: The victim_set_ref of this NrCellDuSingleAllOfAttributes.
        :rtype: str
        """
        return self._victim_set_ref

    @victim_set_ref.setter
    def victim_set_ref(self, victim_set_ref):
        """Sets the victim_set_ref of this NrCellDuSingleAllOfAttributes.


        :param victim_set_ref: The victim_set_ref of this NrCellDuSingleAllOfAttributes.
        :type victim_set_ref: str
        """

        self._victim_set_ref = victim_set_ref

    @property
    def aggressor_set_ref(self):
        """Gets the aggressor_set_ref of this NrCellDuSingleAllOfAttributes.


        :return: The aggressor_set_ref of this NrCellDuSingleAllOfAttributes.
        :rtype: str
        """
        return self._aggressor_set_ref

    @aggressor_set_ref.setter
    def aggressor_set_ref(self, aggressor_set_ref):
        """Sets the aggressor_set_ref of this NrCellDuSingleAllOfAttributes.


        :param aggressor_set_ref: The aggressor_set_ref of this NrCellDuSingleAllOfAttributes.
        :type aggressor_set_ref: str
        """

        self._aggressor_set_ref = aggressor_set_ref
