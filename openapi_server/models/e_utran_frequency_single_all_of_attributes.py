# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class EUtranFrequencySingleAllOfAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, earfcn_dl=None, multi_band_info_list_eutra=None):  # noqa: E501
        """EUtranFrequencySingleAllOfAttributes - a model defined in OpenAPI

        :param earfcn_dl: The earfcn_dl of this EUtranFrequencySingleAllOfAttributes.  # noqa: E501
        :type earfcn_dl: int
        :param multi_band_info_list_eutra: The multi_band_info_list_eutra of this EUtranFrequencySingleAllOfAttributes.  # noqa: E501
        :type multi_band_info_list_eutra: int
        """
        self.openapi_types = {
            'earfcn_dl': int,
            'multi_band_info_list_eutra': int
        }

        self.attribute_map = {
            'earfcn_dl': 'earfcnDL',
            'multi_band_info_list_eutra': 'multiBandInfoListEutra'
        }

        self._earfcn_dl = earfcn_dl
        self._multi_band_info_list_eutra = multi_band_info_list_eutra

    @classmethod
    def from_dict(cls, dikt) -> 'EUtranFrequencySingleAllOfAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EUtranFrequency_Single_allOf_attributes of this EUtranFrequencySingleAllOfAttributes.  # noqa: E501
        :rtype: EUtranFrequencySingleAllOfAttributes
        """
        return util.deserialize_model(dikt, cls)

    @property
    def earfcn_dl(self):
        """Gets the earfcn_dl of this EUtranFrequencySingleAllOfAttributes.


        :return: The earfcn_dl of this EUtranFrequencySingleAllOfAttributes.
        :rtype: int
        """
        return self._earfcn_dl

    @earfcn_dl.setter
    def earfcn_dl(self, earfcn_dl):
        """Sets the earfcn_dl of this EUtranFrequencySingleAllOfAttributes.


        :param earfcn_dl: The earfcn_dl of this EUtranFrequencySingleAllOfAttributes.
        :type earfcn_dl: int
        """
        if earfcn_dl is not None and earfcn_dl > 262143:  # noqa: E501
            raise ValueError("Invalid value for `earfcn_dl`, must be a value less than or equal to `262143`")  # noqa: E501
        if earfcn_dl is not None and earfcn_dl < 0:  # noqa: E501
            raise ValueError("Invalid value for `earfcn_dl`, must be a value greater than or equal to `0`")  # noqa: E501

        self._earfcn_dl = earfcn_dl

    @property
    def multi_band_info_list_eutra(self):
        """Gets the multi_band_info_list_eutra of this EUtranFrequencySingleAllOfAttributes.


        :return: The multi_band_info_list_eutra of this EUtranFrequencySingleAllOfAttributes.
        :rtype: int
        """
        return self._multi_band_info_list_eutra

    @multi_band_info_list_eutra.setter
    def multi_band_info_list_eutra(self, multi_band_info_list_eutra):
        """Sets the multi_band_info_list_eutra of this EUtranFrequencySingleAllOfAttributes.


        :param multi_band_info_list_eutra: The multi_band_info_list_eutra of this EUtranFrequencySingleAllOfAttributes.
        :type multi_band_info_list_eutra: int
        """
        if multi_band_info_list_eutra is not None and multi_band_info_list_eutra > 256:  # noqa: E501
            raise ValueError("Invalid value for `multi_band_info_list_eutra`, must be a value less than or equal to `256`")  # noqa: E501
        if multi_band_info_list_eutra is not None and multi_band_info_list_eutra < 1:  # noqa: E501
            raise ValueError("Invalid value for `multi_band_info_list_eutra`, must be a value greater than or equal to `1`")  # noqa: E501

        self._multi_band_info_list_eutra = multi_band_info_list_eutra
