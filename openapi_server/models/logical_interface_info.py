# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class LogicalInterfaceInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, logical_interface_type=None, logical_interface_id=None):  # noqa: E501
        """LogicalInterfaceInfo - a model defined in OpenAPI

        :param logical_interface_type: The logical_interface_type of this LogicalInterfaceInfo.  # noqa: E501
        :type logical_interface_type: str
        :param logical_interface_id: The logical_interface_id of this LogicalInterfaceInfo.  # noqa: E501
        :type logical_interface_id: str
        """
        self.openapi_types = {
            'logical_interface_type': str,
            'logical_interface_id': str
        }

        self.attribute_map = {
            'logical_interface_type': 'logicalInterfaceType',
            'logical_interface_id': 'logicalInterfaceId'
        }

        self._logical_interface_type = logical_interface_type
        self._logical_interface_id = logical_interface_id

    @classmethod
    def from_dict(cls, dikt) -> 'LogicalInterfaceInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LogicalInterfaceInfo of this LogicalInterfaceInfo.  # noqa: E501
        :rtype: LogicalInterfaceInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def logical_interface_type(self):
        """Gets the logical_interface_type of this LogicalInterfaceInfo.


        :return: The logical_interface_type of this LogicalInterfaceInfo.
        :rtype: str
        """
        return self._logical_interface_type

    @logical_interface_type.setter
    def logical_interface_type(self, logical_interface_type):
        """Sets the logical_interface_type of this LogicalInterfaceInfo.


        :param logical_interface_type: The logical_interface_type of this LogicalInterfaceInfo.
        :type logical_interface_type: str
        """
        allowed_values = ["VLAN", "MPLS", "Segment"]  # noqa: E501
        if logical_interface_type not in allowed_values:
            raise ValueError(
                "Invalid value for `logical_interface_type` ({0}), must be one of {1}"
                .format(logical_interface_type, allowed_values)
            )

        self._logical_interface_type = logical_interface_type

    @property
    def logical_interface_id(self):
        """Gets the logical_interface_id of this LogicalInterfaceInfo.


        :return: The logical_interface_id of this LogicalInterfaceInfo.
        :rtype: str
        """
        return self._logical_interface_id

    @logical_interface_id.setter
    def logical_interface_id(self, logical_interface_id):
        """Sets the logical_interface_id of this LogicalInterfaceInfo.


        :param logical_interface_id: The logical_interface_id of this LogicalInterfaceInfo.
        :type logical_interface_id: str
        """

        self._logical_interface_id = logical_interface_id
