# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.model5_gcnf_conn_ecm_info import Model5GCNfConnEcmInfo
from openapi_server.models.serving_location import ServingLocation
from openapi_server.models.upf_connection_info import UPFConnectionInfo
from openapi_server import util

from openapi_server.models.model5_gcnf_conn_ecm_info import Model5GCNfConnEcmInfo  # noqa: E501
from openapi_server.models.serving_location import ServingLocation  # noqa: E501
from openapi_server.models.upf_connection_info import UPFConnectionInfo  # noqa: E501

class EcmConnectionInfoSingleAllOfAttributesAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, e_as_service_area=None, e_es_service_area=None, e_dn_service_area=None, e_asip_address=None, e_esip_address=None, e_csip_address=None, edn_identifier=None, ecm_connection_type=None, _5_gcnf_conn_ecm_info_list=None, u_pf_connection_info=None):  # noqa: E501
        """EcmConnectionInfoSingleAllOfAttributesAllOf - a model defined in OpenAPI

        :param e_as_service_area: The e_as_service_area of this EcmConnectionInfoSingleAllOfAttributesAllOf.  # noqa: E501
        :type e_as_service_area: ServingLocation
        :param e_es_service_area: The e_es_service_area of this EcmConnectionInfoSingleAllOfAttributesAllOf.  # noqa: E501
        :type e_es_service_area: ServingLocation
        :param e_dn_service_area: The e_dn_service_area of this EcmConnectionInfoSingleAllOfAttributesAllOf.  # noqa: E501
        :type e_dn_service_area: ServingLocation
        :param e_asip_address: The e_asip_address of this EcmConnectionInfoSingleAllOfAttributesAllOf.  # noqa: E501
        :type e_asip_address: str
        :param e_esip_address: The e_esip_address of this EcmConnectionInfoSingleAllOfAttributesAllOf.  # noqa: E501
        :type e_esip_address: str
        :param e_csip_address: The e_csip_address of this EcmConnectionInfoSingleAllOfAttributesAllOf.  # noqa: E501
        :type e_csip_address: str
        :param edn_identifier: The edn_identifier of this EcmConnectionInfoSingleAllOfAttributesAllOf.  # noqa: E501
        :type edn_identifier: str
        :param ecm_connection_type: The ecm_connection_type of this EcmConnectionInfoSingleAllOfAttributesAllOf.  # noqa: E501
        :type ecm_connection_type: str
        :param _5_gcnf_conn_ecm_info_list: The _5_gcnf_conn_ecm_info_list of this EcmConnectionInfoSingleAllOfAttributesAllOf.  # noqa: E501
        :type _5_gcnf_conn_ecm_info_list: List[Model5GCNfConnEcmInfo]
        :param u_pf_connection_info: The u_pf_connection_info of this EcmConnectionInfoSingleAllOfAttributesAllOf.  # noqa: E501
        :type u_pf_connection_info: UPFConnectionInfo
        """
        self.openapi_types = {
            'e_as_service_area': ServingLocation,
            'e_es_service_area': ServingLocation,
            'e_dn_service_area': ServingLocation,
            'e_asip_address': str,
            'e_esip_address': str,
            'e_csip_address': str,
            'edn_identifier': str,
            'ecm_connection_type': str,
            '_5_gcnf_conn_ecm_info_list': List[Model5GCNfConnEcmInfo],
            'u_pf_connection_info': UPFConnectionInfo
        }

        self.attribute_map = {
            'e_as_service_area': 'eASServiceArea',
            'e_es_service_area': 'eESServiceArea',
            'e_dn_service_area': 'eDNServiceArea',
            'e_asip_address': 'eASIpAddress',
            'e_esip_address': 'eESIpAddress',
            'e_csip_address': 'eCSIpAddress',
            'edn_identifier': 'ednIdentifier',
            'ecm_connection_type': 'ecmConnectionType',
            '_5_gcnf_conn_ecm_info_list': '5GCNfConnEcmInfoList',
            'u_pf_connection_info': 'uPFConnectionInfo'
        }

        self._e_as_service_area = e_as_service_area
        self._e_es_service_area = e_es_service_area
        self._e_dn_service_area = e_dn_service_area
        self._e_asip_address = e_asip_address
        self._e_esip_address = e_esip_address
        self._e_csip_address = e_csip_address
        self._edn_identifier = edn_identifier
        self._ecm_connection_type = ecm_connection_type
        self.__5_gcnf_conn_ecm_info_list = _5_gcnf_conn_ecm_info_list
        self._u_pf_connection_info = u_pf_connection_info

    @classmethod
    def from_dict(cls, dikt) -> 'EcmConnectionInfoSingleAllOfAttributesAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EcmConnectionInfo_Single_allOf_attributes_allOf of this EcmConnectionInfoSingleAllOfAttributesAllOf.  # noqa: E501
        :rtype: EcmConnectionInfoSingleAllOfAttributesAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def e_as_service_area(self):
        """Gets the e_as_service_area of this EcmConnectionInfoSingleAllOfAttributesAllOf.


        :return: The e_as_service_area of this EcmConnectionInfoSingleAllOfAttributesAllOf.
        :rtype: ServingLocation
        """
        return self._e_as_service_area

    @e_as_service_area.setter
    def e_as_service_area(self, e_as_service_area):
        """Sets the e_as_service_area of this EcmConnectionInfoSingleAllOfAttributesAllOf.


        :param e_as_service_area: The e_as_service_area of this EcmConnectionInfoSingleAllOfAttributesAllOf.
        :type e_as_service_area: ServingLocation
        """

        self._e_as_service_area = e_as_service_area

    @property
    def e_es_service_area(self):
        """Gets the e_es_service_area of this EcmConnectionInfoSingleAllOfAttributesAllOf.


        :return: The e_es_service_area of this EcmConnectionInfoSingleAllOfAttributesAllOf.
        :rtype: ServingLocation
        """
        return self._e_es_service_area

    @e_es_service_area.setter
    def e_es_service_area(self, e_es_service_area):
        """Sets the e_es_service_area of this EcmConnectionInfoSingleAllOfAttributesAllOf.


        :param e_es_service_area: The e_es_service_area of this EcmConnectionInfoSingleAllOfAttributesAllOf.
        :type e_es_service_area: ServingLocation
        """

        self._e_es_service_area = e_es_service_area

    @property
    def e_dn_service_area(self):
        """Gets the e_dn_service_area of this EcmConnectionInfoSingleAllOfAttributesAllOf.


        :return: The e_dn_service_area of this EcmConnectionInfoSingleAllOfAttributesAllOf.
        :rtype: ServingLocation
        """
        return self._e_dn_service_area

    @e_dn_service_area.setter
    def e_dn_service_area(self, e_dn_service_area):
        """Sets the e_dn_service_area of this EcmConnectionInfoSingleAllOfAttributesAllOf.


        :param e_dn_service_area: The e_dn_service_area of this EcmConnectionInfoSingleAllOfAttributesAllOf.
        :type e_dn_service_area: ServingLocation
        """

        self._e_dn_service_area = e_dn_service_area

    @property
    def e_asip_address(self):
        """Gets the e_asip_address of this EcmConnectionInfoSingleAllOfAttributesAllOf.


        :return: The e_asip_address of this EcmConnectionInfoSingleAllOfAttributesAllOf.
        :rtype: str
        """
        return self._e_asip_address

    @e_asip_address.setter
    def e_asip_address(self, e_asip_address):
        """Sets the e_asip_address of this EcmConnectionInfoSingleAllOfAttributesAllOf.


        :param e_asip_address: The e_asip_address of this EcmConnectionInfoSingleAllOfAttributesAllOf.
        :type e_asip_address: str
        """

        self._e_asip_address = e_asip_address

    @property
    def e_esip_address(self):
        """Gets the e_esip_address of this EcmConnectionInfoSingleAllOfAttributesAllOf.


        :return: The e_esip_address of this EcmConnectionInfoSingleAllOfAttributesAllOf.
        :rtype: str
        """
        return self._e_esip_address

    @e_esip_address.setter
    def e_esip_address(self, e_esip_address):
        """Sets the e_esip_address of this EcmConnectionInfoSingleAllOfAttributesAllOf.


        :param e_esip_address: The e_esip_address of this EcmConnectionInfoSingleAllOfAttributesAllOf.
        :type e_esip_address: str
        """

        self._e_esip_address = e_esip_address

    @property
    def e_csip_address(self):
        """Gets the e_csip_address of this EcmConnectionInfoSingleAllOfAttributesAllOf.


        :return: The e_csip_address of this EcmConnectionInfoSingleAllOfAttributesAllOf.
        :rtype: str
        """
        return self._e_csip_address

    @e_csip_address.setter
    def e_csip_address(self, e_csip_address):
        """Sets the e_csip_address of this EcmConnectionInfoSingleAllOfAttributesAllOf.


        :param e_csip_address: The e_csip_address of this EcmConnectionInfoSingleAllOfAttributesAllOf.
        :type e_csip_address: str
        """

        self._e_csip_address = e_csip_address

    @property
    def edn_identifier(self):
        """Gets the edn_identifier of this EcmConnectionInfoSingleAllOfAttributesAllOf.


        :return: The edn_identifier of this EcmConnectionInfoSingleAllOfAttributesAllOf.
        :rtype: str
        """
        return self._edn_identifier

    @edn_identifier.setter
    def edn_identifier(self, edn_identifier):
        """Sets the edn_identifier of this EcmConnectionInfoSingleAllOfAttributesAllOf.


        :param edn_identifier: The edn_identifier of this EcmConnectionInfoSingleAllOfAttributesAllOf.
        :type edn_identifier: str
        """

        self._edn_identifier = edn_identifier

    @property
    def ecm_connection_type(self):
        """Gets the ecm_connection_type of this EcmConnectionInfoSingleAllOfAttributesAllOf.


        :return: The ecm_connection_type of this EcmConnectionInfoSingleAllOfAttributesAllOf.
        :rtype: str
        """
        return self._ecm_connection_type

    @ecm_connection_type.setter
    def ecm_connection_type(self, ecm_connection_type):
        """Sets the ecm_connection_type of this EcmConnectionInfoSingleAllOfAttributesAllOf.


        :param ecm_connection_type: The ecm_connection_type of this EcmConnectionInfoSingleAllOfAttributesAllOf.
        :type ecm_connection_type: str
        """
        allowed_values = ["USERPLANE", "CONTROLPLANE", "BOTH"]  # noqa: E501
        if ecm_connection_type not in allowed_values:
            raise ValueError(
                "Invalid value for `ecm_connection_type` ({0}), must be one of {1}"
                .format(ecm_connection_type, allowed_values)
            )

        self._ecm_connection_type = ecm_connection_type

    @property
    def _5_gcnf_conn_ecm_info_list(self):
        """Gets the _5_gcnf_conn_ecm_info_list of this EcmConnectionInfoSingleAllOfAttributesAllOf.


        :return: The _5_gcnf_conn_ecm_info_list of this EcmConnectionInfoSingleAllOfAttributesAllOf.
        :rtype: List[Model5GCNfConnEcmInfo]
        """
        return self.__5_gcnf_conn_ecm_info_list

    @_5_gcnf_conn_ecm_info_list.setter
    def _5_gcnf_conn_ecm_info_list(self, _5_gcnf_conn_ecm_info_list):
        """Sets the _5_gcnf_conn_ecm_info_list of this EcmConnectionInfoSingleAllOfAttributesAllOf.


        :param _5_gcnf_conn_ecm_info_list: The _5_gcnf_conn_ecm_info_list of this EcmConnectionInfoSingleAllOfAttributesAllOf.
        :type _5_gcnf_conn_ecm_info_list: List[Model5GCNfConnEcmInfo]
        """

        self.__5_gcnf_conn_ecm_info_list = _5_gcnf_conn_ecm_info_list

    @property
    def u_pf_connection_info(self):
        """Gets the u_pf_connection_info of this EcmConnectionInfoSingleAllOfAttributesAllOf.


        :return: The u_pf_connection_info of this EcmConnectionInfoSingleAllOfAttributesAllOf.
        :rtype: UPFConnectionInfo
        """
        return self._u_pf_connection_info

    @u_pf_connection_info.setter
    def u_pf_connection_info(self, u_pf_connection_info):
        """Sets the u_pf_connection_info of this EcmConnectionInfoSingleAllOfAttributesAllOf.


        :param u_pf_connection_info: The u_pf_connection_info of this EcmConnectionInfoSingleAllOfAttributesAllOf.
        :type u_pf_connection_info: UPFConnectionInfo
        """

        self._u_pf_connection_info = u_pf_connection_info
