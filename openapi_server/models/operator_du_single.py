# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.epf1_c_single import EPF1CSingle
from openapi_server.models.epf1_u_single import EPF1USingle
from openapi_server.models.vs_data_container_single import VsDataContainerSingle
from openapi_server import util

from openapi_server.models.epf1_c_single import EPF1CSingle  # noqa: E501
from openapi_server.models.epf1_u_single import EPF1USingle  # noqa: E501
from openapi_server.models.vs_data_container_single import VsDataContainerSingle  # noqa: E501

class OperatorDuSingle(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, object_class=None, object_instance=None, vs_data_container=None, gnb_id=None, gnb_id_length=None, ep_f1_c=None, ep_f1_u=None):  # noqa: E501
        """OperatorDuSingle - a model defined in OpenAPI

        :param id: The id of this OperatorDuSingle.  # noqa: E501
        :type id: str
        :param object_class: The object_class of this OperatorDuSingle.  # noqa: E501
        :type object_class: str
        :param object_instance: The object_instance of this OperatorDuSingle.  # noqa: E501
        :type object_instance: str
        :param vs_data_container: The vs_data_container of this OperatorDuSingle.  # noqa: E501
        :type vs_data_container: List[VsDataContainerSingle]
        :param gnb_id: The gnb_id of this OperatorDuSingle.  # noqa: E501
        :type gnb_id: str
        :param gnb_id_length: The gnb_id_length of this OperatorDuSingle.  # noqa: E501
        :type gnb_id_length: int
        :param ep_f1_c: The ep_f1_c of this OperatorDuSingle.  # noqa: E501
        :type ep_f1_c: EPF1CSingle
        :param ep_f1_u: The ep_f1_u of this OperatorDuSingle.  # noqa: E501
        :type ep_f1_u: List[EPF1USingle]
        """
        self.openapi_types = {
            'id': str,
            'object_class': str,
            'object_instance': str,
            'vs_data_container': List[VsDataContainerSingle],
            'gnb_id': str,
            'gnb_id_length': int,
            'ep_f1_c': EPF1CSingle,
            'ep_f1_u': List[EPF1USingle]
        }

        self.attribute_map = {
            'id': 'id',
            'object_class': 'objectClass',
            'object_instance': 'objectInstance',
            'vs_data_container': 'VsDataContainer',
            'gnb_id': 'gnbId',
            'gnb_id_length': 'gnbIdLength',
            'ep_f1_c': 'EP_F1C',
            'ep_f1_u': 'EP_F1U'
        }

        self._id = id
        self._object_class = object_class
        self._object_instance = object_instance
        self._vs_data_container = vs_data_container
        self._gnb_id = gnb_id
        self._gnb_id_length = gnb_id_length
        self._ep_f1_c = ep_f1_c
        self._ep_f1_u = ep_f1_u

    @classmethod
    def from_dict(cls, dikt) -> 'OperatorDuSingle':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OperatorDu-Single of this OperatorDuSingle.  # noqa: E501
        :rtype: OperatorDuSingle
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this OperatorDuSingle.


        :return: The id of this OperatorDuSingle.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OperatorDuSingle.


        :param id: The id of this OperatorDuSingle.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def object_class(self):
        """Gets the object_class of this OperatorDuSingle.


        :return: The object_class of this OperatorDuSingle.
        :rtype: str
        """
        return self._object_class

    @object_class.setter
    def object_class(self, object_class):
        """Sets the object_class of this OperatorDuSingle.


        :param object_class: The object_class of this OperatorDuSingle.
        :type object_class: str
        """

        self._object_class = object_class

    @property
    def object_instance(self):
        """Gets the object_instance of this OperatorDuSingle.


        :return: The object_instance of this OperatorDuSingle.
        :rtype: str
        """
        return self._object_instance

    @object_instance.setter
    def object_instance(self, object_instance):
        """Sets the object_instance of this OperatorDuSingle.


        :param object_instance: The object_instance of this OperatorDuSingle.
        :type object_instance: str
        """

        self._object_instance = object_instance

    @property
    def vs_data_container(self):
        """Gets the vs_data_container of this OperatorDuSingle.


        :return: The vs_data_container of this OperatorDuSingle.
        :rtype: List[VsDataContainerSingle]
        """
        return self._vs_data_container

    @vs_data_container.setter
    def vs_data_container(self, vs_data_container):
        """Sets the vs_data_container of this OperatorDuSingle.


        :param vs_data_container: The vs_data_container of this OperatorDuSingle.
        :type vs_data_container: List[VsDataContainerSingle]
        """

        self._vs_data_container = vs_data_container

    @property
    def gnb_id(self):
        """Gets the gnb_id of this OperatorDuSingle.


        :return: The gnb_id of this OperatorDuSingle.
        :rtype: str
        """
        return self._gnb_id

    @gnb_id.setter
    def gnb_id(self, gnb_id):
        """Sets the gnb_id of this OperatorDuSingle.


        :param gnb_id: The gnb_id of this OperatorDuSingle.
        :type gnb_id: str
        """

        self._gnb_id = gnb_id

    @property
    def gnb_id_length(self):
        """Gets the gnb_id_length of this OperatorDuSingle.


        :return: The gnb_id_length of this OperatorDuSingle.
        :rtype: int
        """
        return self._gnb_id_length

    @gnb_id_length.setter
    def gnb_id_length(self, gnb_id_length):
        """Sets the gnb_id_length of this OperatorDuSingle.


        :param gnb_id_length: The gnb_id_length of this OperatorDuSingle.
        :type gnb_id_length: int
        """
        if gnb_id_length is not None and gnb_id_length > 32:  # noqa: E501
            raise ValueError("Invalid value for `gnb_id_length`, must be a value less than or equal to `32`")  # noqa: E501
        if gnb_id_length is not None and gnb_id_length < 22:  # noqa: E501
            raise ValueError("Invalid value for `gnb_id_length`, must be a value greater than or equal to `22`")  # noqa: E501

        self._gnb_id_length = gnb_id_length

    @property
    def ep_f1_c(self):
        """Gets the ep_f1_c of this OperatorDuSingle.


        :return: The ep_f1_c of this OperatorDuSingle.
        :rtype: EPF1CSingle
        """
        return self._ep_f1_c

    @ep_f1_c.setter
    def ep_f1_c(self, ep_f1_c):
        """Sets the ep_f1_c of this OperatorDuSingle.


        :param ep_f1_c: The ep_f1_c of this OperatorDuSingle.
        :type ep_f1_c: EPF1CSingle
        """

        self._ep_f1_c = ep_f1_c

    @property
    def ep_f1_u(self):
        """Gets the ep_f1_u of this OperatorDuSingle.


        :return: The ep_f1_u of this OperatorDuSingle.
        :rtype: List[EPF1USingle]
        """
        return self._ep_f1_u

    @ep_f1_u.setter
    def ep_f1_u(self, ep_f1_u):
        """Sets the ep_f1_u of this OperatorDuSingle.


        :param ep_f1_u: The ep_f1_u of this OperatorDuSingle.
        :type ep_f1_u: List[EPF1USingle]
        """

        self._ep_f1_u = ep_f1_u
