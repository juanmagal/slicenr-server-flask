# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.amf_identifier import AmfIdentifier
from openapi_server.models.comm_model import CommModel
from openapi_server.models.guam_info import GUAMInfo
from openapi_server.models.managed_nf_profile import ManagedNFProfile
from openapi_server.models.plmn_info import PlmnInfo
from openapi_server.models.tai import Tai
from openapi_server.models.tai_range import TaiRange
from openapi_server import util

from openapi_server.models.amf_identifier import AmfIdentifier  # noqa: E501
from openapi_server.models.comm_model import CommModel  # noqa: E501
from openapi_server.models.guam_info import GUAMInfo  # noqa: E501
from openapi_server.models.managed_nf_profile import ManagedNFProfile  # noqa: E501
from openapi_server.models.plmn_info import PlmnInfo  # noqa: E501
from openapi_server.models.tai import Tai  # noqa: E501
from openapi_server.models.tai_range import TaiRange  # noqa: E501

class AmfFunctionSingleAllOfAttributesAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, p_lmn_info_list=None, amf_identifier=None, s_bi_fqdn=None, inter_plmn_fqdn=None, tai_list=None, tai_range_list=None, weight_factor=None, c_nsiid_list=None, g_uamid_list=None, backup_info_amf_failure=None, backup_info_amf_removal=None, amf_set_ref=None, managed_nf_profile=None, comm_model_list=None):  # noqa: E501
        """AmfFunctionSingleAllOfAttributesAllOf - a model defined in OpenAPI

        :param p_lmn_info_list: The p_lmn_info_list of this AmfFunctionSingleAllOfAttributesAllOf.  # noqa: E501
        :type p_lmn_info_list: List[PlmnInfo]
        :param amf_identifier: The amf_identifier of this AmfFunctionSingleAllOfAttributesAllOf.  # noqa: E501
        :type amf_identifier: AmfIdentifier
        :param s_bi_fqdn: The s_bi_fqdn of this AmfFunctionSingleAllOfAttributesAllOf.  # noqa: E501
        :type s_bi_fqdn: str
        :param inter_plmn_fqdn: The inter_plmn_fqdn of this AmfFunctionSingleAllOfAttributesAllOf.  # noqa: E501
        :type inter_plmn_fqdn: str
        :param tai_list: The tai_list of this AmfFunctionSingleAllOfAttributesAllOf.  # noqa: E501
        :type tai_list: List[Tai]
        :param tai_range_list: The tai_range_list of this AmfFunctionSingleAllOfAttributesAllOf.  # noqa: E501
        :type tai_range_list: List[TaiRange]
        :param weight_factor: The weight_factor of this AmfFunctionSingleAllOfAttributesAllOf.  # noqa: E501
        :type weight_factor: int
        :param c_nsiid_list: The c_nsiid_list of this AmfFunctionSingleAllOfAttributesAllOf.  # noqa: E501
        :type c_nsiid_list: List[str]
        :param g_uamid_list: The g_uamid_list of this AmfFunctionSingleAllOfAttributesAllOf.  # noqa: E501
        :type g_uamid_list: List[GUAMInfo]
        :param backup_info_amf_failure: The backup_info_amf_failure of this AmfFunctionSingleAllOfAttributesAllOf.  # noqa: E501
        :type backup_info_amf_failure: List[GUAMInfo]
        :param backup_info_amf_removal: The backup_info_amf_removal of this AmfFunctionSingleAllOfAttributesAllOf.  # noqa: E501
        :type backup_info_amf_removal: List[GUAMInfo]
        :param amf_set_ref: The amf_set_ref of this AmfFunctionSingleAllOfAttributesAllOf.  # noqa: E501
        :type amf_set_ref: str
        :param managed_nf_profile: The managed_nf_profile of this AmfFunctionSingleAllOfAttributesAllOf.  # noqa: E501
        :type managed_nf_profile: ManagedNFProfile
        :param comm_model_list: The comm_model_list of this AmfFunctionSingleAllOfAttributesAllOf.  # noqa: E501
        :type comm_model_list: List[CommModel]
        """
        self.openapi_types = {
            'p_lmn_info_list': List[PlmnInfo],
            'amf_identifier': AmfIdentifier,
            's_bi_fqdn': str,
            'inter_plmn_fqdn': str,
            'tai_list': List[Tai],
            'tai_range_list': List[TaiRange],
            'weight_factor': int,
            'c_nsiid_list': List[str],
            'g_uamid_list': List[GUAMInfo],
            'backup_info_amf_failure': List[GUAMInfo],
            'backup_info_amf_removal': List[GUAMInfo],
            'amf_set_ref': str,
            'managed_nf_profile': ManagedNFProfile,
            'comm_model_list': List[CommModel]
        }

        self.attribute_map = {
            'p_lmn_info_list': 'pLMNInfoList',
            'amf_identifier': 'amfIdentifier',
            's_bi_fqdn': 'sBIFqdn',
            'inter_plmn_fqdn': 'interPlmnFQDN',
            'tai_list': 'taiList',
            'tai_range_list': 'taiRangeList',
            'weight_factor': 'weightFactor',
            'c_nsiid_list': 'cNSIIdList',
            'g_uamid_list': 'gUAMIdList',
            'backup_info_amf_failure': 'backupInfoAmfFailure',
            'backup_info_amf_removal': 'backupInfoAmfRemoval',
            'amf_set_ref': 'amfSetRef',
            'managed_nf_profile': 'managedNFProfile',
            'comm_model_list': 'commModelList'
        }

        self._p_lmn_info_list = p_lmn_info_list
        self._amf_identifier = amf_identifier
        self._s_bi_fqdn = s_bi_fqdn
        self._inter_plmn_fqdn = inter_plmn_fqdn
        self._tai_list = tai_list
        self._tai_range_list = tai_range_list
        self._weight_factor = weight_factor
        self._c_nsiid_list = c_nsiid_list
        self._g_uamid_list = g_uamid_list
        self._backup_info_amf_failure = backup_info_amf_failure
        self._backup_info_amf_removal = backup_info_amf_removal
        self._amf_set_ref = amf_set_ref
        self._managed_nf_profile = managed_nf_profile
        self._comm_model_list = comm_model_list

    @classmethod
    def from_dict(cls, dikt) -> 'AmfFunctionSingleAllOfAttributesAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AmfFunction_Single_allOf_attributes_allOf of this AmfFunctionSingleAllOfAttributesAllOf.  # noqa: E501
        :rtype: AmfFunctionSingleAllOfAttributesAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def p_lmn_info_list(self):
        """Gets the p_lmn_info_list of this AmfFunctionSingleAllOfAttributesAllOf.


        :return: The p_lmn_info_list of this AmfFunctionSingleAllOfAttributesAllOf.
        :rtype: List[PlmnInfo]
        """
        return self._p_lmn_info_list

    @p_lmn_info_list.setter
    def p_lmn_info_list(self, p_lmn_info_list):
        """Sets the p_lmn_info_list of this AmfFunctionSingleAllOfAttributesAllOf.


        :param p_lmn_info_list: The p_lmn_info_list of this AmfFunctionSingleAllOfAttributesAllOf.
        :type p_lmn_info_list: List[PlmnInfo]
        """

        self._p_lmn_info_list = p_lmn_info_list

    @property
    def amf_identifier(self):
        """Gets the amf_identifier of this AmfFunctionSingleAllOfAttributesAllOf.


        :return: The amf_identifier of this AmfFunctionSingleAllOfAttributesAllOf.
        :rtype: AmfIdentifier
        """
        return self._amf_identifier

    @amf_identifier.setter
    def amf_identifier(self, amf_identifier):
        """Sets the amf_identifier of this AmfFunctionSingleAllOfAttributesAllOf.


        :param amf_identifier: The amf_identifier of this AmfFunctionSingleAllOfAttributesAllOf.
        :type amf_identifier: AmfIdentifier
        """

        self._amf_identifier = amf_identifier

    @property
    def s_bi_fqdn(self):
        """Gets the s_bi_fqdn of this AmfFunctionSingleAllOfAttributesAllOf.


        :return: The s_bi_fqdn of this AmfFunctionSingleAllOfAttributesAllOf.
        :rtype: str
        """
        return self._s_bi_fqdn

    @s_bi_fqdn.setter
    def s_bi_fqdn(self, s_bi_fqdn):
        """Sets the s_bi_fqdn of this AmfFunctionSingleAllOfAttributesAllOf.


        :param s_bi_fqdn: The s_bi_fqdn of this AmfFunctionSingleAllOfAttributesAllOf.
        :type s_bi_fqdn: str
        """

        self._s_bi_fqdn = s_bi_fqdn

    @property
    def inter_plmn_fqdn(self):
        """Gets the inter_plmn_fqdn of this AmfFunctionSingleAllOfAttributesAllOf.


        :return: The inter_plmn_fqdn of this AmfFunctionSingleAllOfAttributesAllOf.
        :rtype: str
        """
        return self._inter_plmn_fqdn

    @inter_plmn_fqdn.setter
    def inter_plmn_fqdn(self, inter_plmn_fqdn):
        """Sets the inter_plmn_fqdn of this AmfFunctionSingleAllOfAttributesAllOf.


        :param inter_plmn_fqdn: The inter_plmn_fqdn of this AmfFunctionSingleAllOfAttributesAllOf.
        :type inter_plmn_fqdn: str
        """

        self._inter_plmn_fqdn = inter_plmn_fqdn

    @property
    def tai_list(self):
        """Gets the tai_list of this AmfFunctionSingleAllOfAttributesAllOf.


        :return: The tai_list of this AmfFunctionSingleAllOfAttributesAllOf.
        :rtype: List[Tai]
        """
        return self._tai_list

    @tai_list.setter
    def tai_list(self, tai_list):
        """Sets the tai_list of this AmfFunctionSingleAllOfAttributesAllOf.


        :param tai_list: The tai_list of this AmfFunctionSingleAllOfAttributesAllOf.
        :type tai_list: List[Tai]
        """

        self._tai_list = tai_list

    @property
    def tai_range_list(self):
        """Gets the tai_range_list of this AmfFunctionSingleAllOfAttributesAllOf.


        :return: The tai_range_list of this AmfFunctionSingleAllOfAttributesAllOf.
        :rtype: List[TaiRange]
        """
        return self._tai_range_list

    @tai_range_list.setter
    def tai_range_list(self, tai_range_list):
        """Sets the tai_range_list of this AmfFunctionSingleAllOfAttributesAllOf.


        :param tai_range_list: The tai_range_list of this AmfFunctionSingleAllOfAttributesAllOf.
        :type tai_range_list: List[TaiRange]
        """

        self._tai_range_list = tai_range_list

    @property
    def weight_factor(self):
        """Gets the weight_factor of this AmfFunctionSingleAllOfAttributesAllOf.


        :return: The weight_factor of this AmfFunctionSingleAllOfAttributesAllOf.
        :rtype: int
        """
        return self._weight_factor

    @weight_factor.setter
    def weight_factor(self, weight_factor):
        """Sets the weight_factor of this AmfFunctionSingleAllOfAttributesAllOf.


        :param weight_factor: The weight_factor of this AmfFunctionSingleAllOfAttributesAllOf.
        :type weight_factor: int
        """

        self._weight_factor = weight_factor

    @property
    def c_nsiid_list(self):
        """Gets the c_nsiid_list of this AmfFunctionSingleAllOfAttributesAllOf.


        :return: The c_nsiid_list of this AmfFunctionSingleAllOfAttributesAllOf.
        :rtype: List[str]
        """
        return self._c_nsiid_list

    @c_nsiid_list.setter
    def c_nsiid_list(self, c_nsiid_list):
        """Sets the c_nsiid_list of this AmfFunctionSingleAllOfAttributesAllOf.


        :param c_nsiid_list: The c_nsiid_list of this AmfFunctionSingleAllOfAttributesAllOf.
        :type c_nsiid_list: List[str]
        """

        self._c_nsiid_list = c_nsiid_list

    @property
    def g_uamid_list(self):
        """Gets the g_uamid_list of this AmfFunctionSingleAllOfAttributesAllOf.


        :return: The g_uamid_list of this AmfFunctionSingleAllOfAttributesAllOf.
        :rtype: List[GUAMInfo]
        """
        return self._g_uamid_list

    @g_uamid_list.setter
    def g_uamid_list(self, g_uamid_list):
        """Sets the g_uamid_list of this AmfFunctionSingleAllOfAttributesAllOf.


        :param g_uamid_list: The g_uamid_list of this AmfFunctionSingleAllOfAttributesAllOf.
        :type g_uamid_list: List[GUAMInfo]
        """

        self._g_uamid_list = g_uamid_list

    @property
    def backup_info_amf_failure(self):
        """Gets the backup_info_amf_failure of this AmfFunctionSingleAllOfAttributesAllOf.


        :return: The backup_info_amf_failure of this AmfFunctionSingleAllOfAttributesAllOf.
        :rtype: List[GUAMInfo]
        """
        return self._backup_info_amf_failure

    @backup_info_amf_failure.setter
    def backup_info_amf_failure(self, backup_info_amf_failure):
        """Sets the backup_info_amf_failure of this AmfFunctionSingleAllOfAttributesAllOf.


        :param backup_info_amf_failure: The backup_info_amf_failure of this AmfFunctionSingleAllOfAttributesAllOf.
        :type backup_info_amf_failure: List[GUAMInfo]
        """

        self._backup_info_amf_failure = backup_info_amf_failure

    @property
    def backup_info_amf_removal(self):
        """Gets the backup_info_amf_removal of this AmfFunctionSingleAllOfAttributesAllOf.


        :return: The backup_info_amf_removal of this AmfFunctionSingleAllOfAttributesAllOf.
        :rtype: List[GUAMInfo]
        """
        return self._backup_info_amf_removal

    @backup_info_amf_removal.setter
    def backup_info_amf_removal(self, backup_info_amf_removal):
        """Sets the backup_info_amf_removal of this AmfFunctionSingleAllOfAttributesAllOf.


        :param backup_info_amf_removal: The backup_info_amf_removal of this AmfFunctionSingleAllOfAttributesAllOf.
        :type backup_info_amf_removal: List[GUAMInfo]
        """

        self._backup_info_amf_removal = backup_info_amf_removal

    @property
    def amf_set_ref(self):
        """Gets the amf_set_ref of this AmfFunctionSingleAllOfAttributesAllOf.


        :return: The amf_set_ref of this AmfFunctionSingleAllOfAttributesAllOf.
        :rtype: str
        """
        return self._amf_set_ref

    @amf_set_ref.setter
    def amf_set_ref(self, amf_set_ref):
        """Sets the amf_set_ref of this AmfFunctionSingleAllOfAttributesAllOf.


        :param amf_set_ref: The amf_set_ref of this AmfFunctionSingleAllOfAttributesAllOf.
        :type amf_set_ref: str
        """

        self._amf_set_ref = amf_set_ref

    @property
    def managed_nf_profile(self):
        """Gets the managed_nf_profile of this AmfFunctionSingleAllOfAttributesAllOf.


        :return: The managed_nf_profile of this AmfFunctionSingleAllOfAttributesAllOf.
        :rtype: ManagedNFProfile
        """
        return self._managed_nf_profile

    @managed_nf_profile.setter
    def managed_nf_profile(self, managed_nf_profile):
        """Sets the managed_nf_profile of this AmfFunctionSingleAllOfAttributesAllOf.


        :param managed_nf_profile: The managed_nf_profile of this AmfFunctionSingleAllOfAttributesAllOf.
        :type managed_nf_profile: ManagedNFProfile
        """

        self._managed_nf_profile = managed_nf_profile

    @property
    def comm_model_list(self):
        """Gets the comm_model_list of this AmfFunctionSingleAllOfAttributesAllOf.


        :return: The comm_model_list of this AmfFunctionSingleAllOfAttributesAllOf.
        :rtype: List[CommModel]
        """
        return self._comm_model_list

    @comm_model_list.setter
    def comm_model_list(self, comm_model_list):
        """Sets the comm_model_list of this AmfFunctionSingleAllOfAttributesAllOf.


        :param comm_model_list: The comm_model_list of this AmfFunctionSingleAllOfAttributesAllOf.
        :type comm_model_list: List[CommModel]
        """

        self._comm_model_list = comm_model_list
