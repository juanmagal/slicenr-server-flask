# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.comm_model_type import CommModelType
from openapi_server import util

from openapi_server.models.comm_model_type import CommModelType  # noqa: E501

class CommModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, group_id=None, comm_model_type=None, target_nf_service_list=None, comm_model_configuration=None):  # noqa: E501
        """CommModel - a model defined in OpenAPI

        :param group_id: The group_id of this CommModel.  # noqa: E501
        :type group_id: int
        :param comm_model_type: The comm_model_type of this CommModel.  # noqa: E501
        :type comm_model_type: CommModelType
        :param target_nf_service_list: The target_nf_service_list of this CommModel.  # noqa: E501
        :type target_nf_service_list: List[str]
        :param comm_model_configuration: The comm_model_configuration of this CommModel.  # noqa: E501
        :type comm_model_configuration: str
        """
        self.openapi_types = {
            'group_id': int,
            'comm_model_type': CommModelType,
            'target_nf_service_list': List[str],
            'comm_model_configuration': str
        }

        self.attribute_map = {
            'group_id': 'groupId',
            'comm_model_type': 'commModelType',
            'target_nf_service_list': 'targetNFServiceList',
            'comm_model_configuration': 'commModelConfiguration'
        }

        self._group_id = group_id
        self._comm_model_type = comm_model_type
        self._target_nf_service_list = target_nf_service_list
        self._comm_model_configuration = comm_model_configuration

    @classmethod
    def from_dict(cls, dikt) -> 'CommModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CommModel of this CommModel.  # noqa: E501
        :rtype: CommModel
        """
        return util.deserialize_model(dikt, cls)

    @property
    def group_id(self):
        """Gets the group_id of this CommModel.


        :return: The group_id of this CommModel.
        :rtype: int
        """
        return self._group_id

    @group_id.setter
    def group_id(self, group_id):
        """Sets the group_id of this CommModel.


        :param group_id: The group_id of this CommModel.
        :type group_id: int
        """

        self._group_id = group_id

    @property
    def comm_model_type(self):
        """Gets the comm_model_type of this CommModel.


        :return: The comm_model_type of this CommModel.
        :rtype: CommModelType
        """
        return self._comm_model_type

    @comm_model_type.setter
    def comm_model_type(self, comm_model_type):
        """Sets the comm_model_type of this CommModel.


        :param comm_model_type: The comm_model_type of this CommModel.
        :type comm_model_type: CommModelType
        """

        self._comm_model_type = comm_model_type

    @property
    def target_nf_service_list(self):
        """Gets the target_nf_service_list of this CommModel.


        :return: The target_nf_service_list of this CommModel.
        :rtype: List[str]
        """
        return self._target_nf_service_list

    @target_nf_service_list.setter
    def target_nf_service_list(self, target_nf_service_list):
        """Sets the target_nf_service_list of this CommModel.


        :param target_nf_service_list: The target_nf_service_list of this CommModel.
        :type target_nf_service_list: List[str]
        """

        self._target_nf_service_list = target_nf_service_list

    @property
    def comm_model_configuration(self):
        """Gets the comm_model_configuration of this CommModel.


        :return: The comm_model_configuration of this CommModel.
        :rtype: str
        """
        return self._comm_model_configuration

    @comm_model_configuration.setter
    def comm_model_configuration(self, comm_model_configuration):
        """Sets the comm_model_configuration of this CommModel.


        :param comm_model_configuration: The comm_model_configuration of this CommModel.
        :type comm_model_configuration: str
        """

        self._comm_model_configuration = comm_model_configuration
