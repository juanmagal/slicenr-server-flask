# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class FrequencyDomainPara(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rim_rs_subcarrier_spacing=None, r_imrs_bandwidth=None, nrof_global_rimrs_frequency_candidates=None, rim_rs_common_carrier_reference_point=None, rim_rs_starting_frequency_offset_id_list=None):  # noqa: E501
        """FrequencyDomainPara - a model defined in OpenAPI

        :param rim_rs_subcarrier_spacing: The rim_rs_subcarrier_spacing of this FrequencyDomainPara.  # noqa: E501
        :type rim_rs_subcarrier_spacing: int
        :param r_imrs_bandwidth: The r_imrs_bandwidth of this FrequencyDomainPara.  # noqa: E501
        :type r_imrs_bandwidth: int
        :param nrof_global_rimrs_frequency_candidates: The nrof_global_rimrs_frequency_candidates of this FrequencyDomainPara.  # noqa: E501
        :type nrof_global_rimrs_frequency_candidates: int
        :param rim_rs_common_carrier_reference_point: The rim_rs_common_carrier_reference_point of this FrequencyDomainPara.  # noqa: E501
        :type rim_rs_common_carrier_reference_point: int
        :param rim_rs_starting_frequency_offset_id_list: The rim_rs_starting_frequency_offset_id_list of this FrequencyDomainPara.  # noqa: E501
        :type rim_rs_starting_frequency_offset_id_list: List[int]
        """
        self.openapi_types = {
            'rim_rs_subcarrier_spacing': int,
            'r_imrs_bandwidth': int,
            'nrof_global_rimrs_frequency_candidates': int,
            'rim_rs_common_carrier_reference_point': int,
            'rim_rs_starting_frequency_offset_id_list': List[int]
        }

        self.attribute_map = {
            'rim_rs_subcarrier_spacing': 'rimRSSubcarrierSpacing',
            'r_imrs_bandwidth': 'rIMRSBandwidth',
            'nrof_global_rimrs_frequency_candidates': 'nrofGlobalRIMRSFrequencyCandidates',
            'rim_rs_common_carrier_reference_point': 'rimRSCommonCarrierReferencePoint',
            'rim_rs_starting_frequency_offset_id_list': 'rimRSStartingFrequencyOffsetIdList'
        }

        self._rim_rs_subcarrier_spacing = rim_rs_subcarrier_spacing
        self._r_imrs_bandwidth = r_imrs_bandwidth
        self._nrof_global_rimrs_frequency_candidates = nrof_global_rimrs_frequency_candidates
        self._rim_rs_common_carrier_reference_point = rim_rs_common_carrier_reference_point
        self._rim_rs_starting_frequency_offset_id_list = rim_rs_starting_frequency_offset_id_list

    @classmethod
    def from_dict(cls, dikt) -> 'FrequencyDomainPara':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FrequencyDomainPara of this FrequencyDomainPara.  # noqa: E501
        :rtype: FrequencyDomainPara
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rim_rs_subcarrier_spacing(self):
        """Gets the rim_rs_subcarrier_spacing of this FrequencyDomainPara.


        :return: The rim_rs_subcarrier_spacing of this FrequencyDomainPara.
        :rtype: int
        """
        return self._rim_rs_subcarrier_spacing

    @rim_rs_subcarrier_spacing.setter
    def rim_rs_subcarrier_spacing(self, rim_rs_subcarrier_spacing):
        """Sets the rim_rs_subcarrier_spacing of this FrequencyDomainPara.


        :param rim_rs_subcarrier_spacing: The rim_rs_subcarrier_spacing of this FrequencyDomainPara.
        :type rim_rs_subcarrier_spacing: int
        """

        self._rim_rs_subcarrier_spacing = rim_rs_subcarrier_spacing

    @property
    def r_imrs_bandwidth(self):
        """Gets the r_imrs_bandwidth of this FrequencyDomainPara.


        :return: The r_imrs_bandwidth of this FrequencyDomainPara.
        :rtype: int
        """
        return self._r_imrs_bandwidth

    @r_imrs_bandwidth.setter
    def r_imrs_bandwidth(self, r_imrs_bandwidth):
        """Sets the r_imrs_bandwidth of this FrequencyDomainPara.


        :param r_imrs_bandwidth: The r_imrs_bandwidth of this FrequencyDomainPara.
        :type r_imrs_bandwidth: int
        """

        self._r_imrs_bandwidth = r_imrs_bandwidth

    @property
    def nrof_global_rimrs_frequency_candidates(self):
        """Gets the nrof_global_rimrs_frequency_candidates of this FrequencyDomainPara.


        :return: The nrof_global_rimrs_frequency_candidates of this FrequencyDomainPara.
        :rtype: int
        """
        return self._nrof_global_rimrs_frequency_candidates

    @nrof_global_rimrs_frequency_candidates.setter
    def nrof_global_rimrs_frequency_candidates(self, nrof_global_rimrs_frequency_candidates):
        """Sets the nrof_global_rimrs_frequency_candidates of this FrequencyDomainPara.


        :param nrof_global_rimrs_frequency_candidates: The nrof_global_rimrs_frequency_candidates of this FrequencyDomainPara.
        :type nrof_global_rimrs_frequency_candidates: int
        """

        self._nrof_global_rimrs_frequency_candidates = nrof_global_rimrs_frequency_candidates

    @property
    def rim_rs_common_carrier_reference_point(self):
        """Gets the rim_rs_common_carrier_reference_point of this FrequencyDomainPara.


        :return: The rim_rs_common_carrier_reference_point of this FrequencyDomainPara.
        :rtype: int
        """
        return self._rim_rs_common_carrier_reference_point

    @rim_rs_common_carrier_reference_point.setter
    def rim_rs_common_carrier_reference_point(self, rim_rs_common_carrier_reference_point):
        """Sets the rim_rs_common_carrier_reference_point of this FrequencyDomainPara.


        :param rim_rs_common_carrier_reference_point: The rim_rs_common_carrier_reference_point of this FrequencyDomainPara.
        :type rim_rs_common_carrier_reference_point: int
        """

        self._rim_rs_common_carrier_reference_point = rim_rs_common_carrier_reference_point

    @property
    def rim_rs_starting_frequency_offset_id_list(self):
        """Gets the rim_rs_starting_frequency_offset_id_list of this FrequencyDomainPara.


        :return: The rim_rs_starting_frequency_offset_id_list of this FrequencyDomainPara.
        :rtype: List[int]
        """
        return self._rim_rs_starting_frequency_offset_id_list

    @rim_rs_starting_frequency_offset_id_list.setter
    def rim_rs_starting_frequency_offset_id_list(self, rim_rs_starting_frequency_offset_id_list):
        """Sets the rim_rs_starting_frequency_offset_id_list of this FrequencyDomainPara.


        :param rim_rs_starting_frequency_offset_id_list: The rim_rs_starting_frequency_offset_id_list of this FrequencyDomainPara.
        :type rim_rs_starting_frequency_offset_id_list: List[int]
        """

        self._rim_rs_starting_frequency_offset_id_list = rim_rs_starting_frequency_offset_id_list
