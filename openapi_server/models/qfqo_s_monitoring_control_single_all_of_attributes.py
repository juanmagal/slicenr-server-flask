# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.qf_packet_delay_thresholds_type import QFPacketDelayThresholdsType
from openapi_server.models.snssai import Snssai
from openapi_server import util

from openapi_server.models.qf_packet_delay_thresholds_type import QFPacketDelayThresholdsType  # noqa: E501
from openapi_server.models.snssai import Snssai  # noqa: E501

class QFQoSMonitoringControlSingleAllOfAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, q_fqo_s_monitoring_state=None, q_f_monitored_snssais=None, q_f_monitored5_qis=None, is_event_triggered_qf_monitoring_supported=None, is_periodic_qf_monitoring_supported=None, is_session_released_qf_monitoring_supported=None, q_f_packet_delay_thresholds=None, q_f_minimum_wait_time=None, q_f_measurement_period=None):  # noqa: E501
        """QFQoSMonitoringControlSingleAllOfAttributes - a model defined in OpenAPI

        :param q_fqo_s_monitoring_state: The q_fqo_s_monitoring_state of this QFQoSMonitoringControlSingleAllOfAttributes.  # noqa: E501
        :type q_fqo_s_monitoring_state: str
        :param q_f_monitored_snssais: The q_f_monitored_snssais of this QFQoSMonitoringControlSingleAllOfAttributes.  # noqa: E501
        :type q_f_monitored_snssais: List[Snssai]
        :param q_f_monitored5_qis: The q_f_monitored5_qis of this QFQoSMonitoringControlSingleAllOfAttributes.  # noqa: E501
        :type q_f_monitored5_qis: List[int]
        :param is_event_triggered_qf_monitoring_supported: The is_event_triggered_qf_monitoring_supported of this QFQoSMonitoringControlSingleAllOfAttributes.  # noqa: E501
        :type is_event_triggered_qf_monitoring_supported: bool
        :param is_periodic_qf_monitoring_supported: The is_periodic_qf_monitoring_supported of this QFQoSMonitoringControlSingleAllOfAttributes.  # noqa: E501
        :type is_periodic_qf_monitoring_supported: bool
        :param is_session_released_qf_monitoring_supported: The is_session_released_qf_monitoring_supported of this QFQoSMonitoringControlSingleAllOfAttributes.  # noqa: E501
        :type is_session_released_qf_monitoring_supported: bool
        :param q_f_packet_delay_thresholds: The q_f_packet_delay_thresholds of this QFQoSMonitoringControlSingleAllOfAttributes.  # noqa: E501
        :type q_f_packet_delay_thresholds: QFPacketDelayThresholdsType
        :param q_f_minimum_wait_time: The q_f_minimum_wait_time of this QFQoSMonitoringControlSingleAllOfAttributes.  # noqa: E501
        :type q_f_minimum_wait_time: int
        :param q_f_measurement_period: The q_f_measurement_period of this QFQoSMonitoringControlSingleAllOfAttributes.  # noqa: E501
        :type q_f_measurement_period: int
        """
        self.openapi_types = {
            'q_fqo_s_monitoring_state': str,
            'q_f_monitored_snssais': List[Snssai],
            'q_f_monitored5_qis': List[int],
            'is_event_triggered_qf_monitoring_supported': bool,
            'is_periodic_qf_monitoring_supported': bool,
            'is_session_released_qf_monitoring_supported': bool,
            'q_f_packet_delay_thresholds': QFPacketDelayThresholdsType,
            'q_f_minimum_wait_time': int,
            'q_f_measurement_period': int
        }

        self.attribute_map = {
            'q_fqo_s_monitoring_state': 'qFQoSMonitoringState',
            'q_f_monitored_snssais': 'qFMonitoredSNSSAIs',
            'q_f_monitored5_qis': 'qFMonitored5QIs',
            'is_event_triggered_qf_monitoring_supported': 'isEventTriggeredQFMonitoringSupported',
            'is_periodic_qf_monitoring_supported': 'isPeriodicQFMonitoringSupported',
            'is_session_released_qf_monitoring_supported': 'isSessionReleasedQFMonitoringSupported',
            'q_f_packet_delay_thresholds': 'qFPacketDelayThresholds',
            'q_f_minimum_wait_time': 'qFMinimumWaitTime',
            'q_f_measurement_period': 'qFMeasurementPeriod'
        }

        self._q_fqo_s_monitoring_state = q_fqo_s_monitoring_state
        self._q_f_monitored_snssais = q_f_monitored_snssais
        self._q_f_monitored5_qis = q_f_monitored5_qis
        self._is_event_triggered_qf_monitoring_supported = is_event_triggered_qf_monitoring_supported
        self._is_periodic_qf_monitoring_supported = is_periodic_qf_monitoring_supported
        self._is_session_released_qf_monitoring_supported = is_session_released_qf_monitoring_supported
        self._q_f_packet_delay_thresholds = q_f_packet_delay_thresholds
        self._q_f_minimum_wait_time = q_f_minimum_wait_time
        self._q_f_measurement_period = q_f_measurement_period

    @classmethod
    def from_dict(cls, dikt) -> 'QFQoSMonitoringControlSingleAllOfAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The QFQoSMonitoringControl_Single_allOf_attributes of this QFQoSMonitoringControlSingleAllOfAttributes.  # noqa: E501
        :rtype: QFQoSMonitoringControlSingleAllOfAttributes
        """
        return util.deserialize_model(dikt, cls)

    @property
    def q_fqo_s_monitoring_state(self):
        """Gets the q_fqo_s_monitoring_state of this QFQoSMonitoringControlSingleAllOfAttributes.


        :return: The q_fqo_s_monitoring_state of this QFQoSMonitoringControlSingleAllOfAttributes.
        :rtype: str
        """
        return self._q_fqo_s_monitoring_state

    @q_fqo_s_monitoring_state.setter
    def q_fqo_s_monitoring_state(self, q_fqo_s_monitoring_state):
        """Sets the q_fqo_s_monitoring_state of this QFQoSMonitoringControlSingleAllOfAttributes.


        :param q_fqo_s_monitoring_state: The q_fqo_s_monitoring_state of this QFQoSMonitoringControlSingleAllOfAttributes.
        :type q_fqo_s_monitoring_state: str
        """
        allowed_values = ["ENABLED", "DISABLED"]  # noqa: E501
        if q_fqo_s_monitoring_state not in allowed_values:
            raise ValueError(
                "Invalid value for `q_fqo_s_monitoring_state` ({0}), must be one of {1}"
                .format(q_fqo_s_monitoring_state, allowed_values)
            )

        self._q_fqo_s_monitoring_state = q_fqo_s_monitoring_state

    @property
    def q_f_monitored_snssais(self):
        """Gets the q_f_monitored_snssais of this QFQoSMonitoringControlSingleAllOfAttributes.


        :return: The q_f_monitored_snssais of this QFQoSMonitoringControlSingleAllOfAttributes.
        :rtype: List[Snssai]
        """
        return self._q_f_monitored_snssais

    @q_f_monitored_snssais.setter
    def q_f_monitored_snssais(self, q_f_monitored_snssais):
        """Sets the q_f_monitored_snssais of this QFQoSMonitoringControlSingleAllOfAttributes.


        :param q_f_monitored_snssais: The q_f_monitored_snssais of this QFQoSMonitoringControlSingleAllOfAttributes.
        :type q_f_monitored_snssais: List[Snssai]
        """

        self._q_f_monitored_snssais = q_f_monitored_snssais

    @property
    def q_f_monitored5_qis(self):
        """Gets the q_f_monitored5_qis of this QFQoSMonitoringControlSingleAllOfAttributes.


        :return: The q_f_monitored5_qis of this QFQoSMonitoringControlSingleAllOfAttributes.
        :rtype: List[int]
        """
        return self._q_f_monitored5_qis

    @q_f_monitored5_qis.setter
    def q_f_monitored5_qis(self, q_f_monitored5_qis):
        """Sets the q_f_monitored5_qis of this QFQoSMonitoringControlSingleAllOfAttributes.


        :param q_f_monitored5_qis: The q_f_monitored5_qis of this QFQoSMonitoringControlSingleAllOfAttributes.
        :type q_f_monitored5_qis: List[int]
        """

        self._q_f_monitored5_qis = q_f_monitored5_qis

    @property
    def is_event_triggered_qf_monitoring_supported(self):
        """Gets the is_event_triggered_qf_monitoring_supported of this QFQoSMonitoringControlSingleAllOfAttributes.


        :return: The is_event_triggered_qf_monitoring_supported of this QFQoSMonitoringControlSingleAllOfAttributes.
        :rtype: bool
        """
        return self._is_event_triggered_qf_monitoring_supported

    @is_event_triggered_qf_monitoring_supported.setter
    def is_event_triggered_qf_monitoring_supported(self, is_event_triggered_qf_monitoring_supported):
        """Sets the is_event_triggered_qf_monitoring_supported of this QFQoSMonitoringControlSingleAllOfAttributes.


        :param is_event_triggered_qf_monitoring_supported: The is_event_triggered_qf_monitoring_supported of this QFQoSMonitoringControlSingleAllOfAttributes.
        :type is_event_triggered_qf_monitoring_supported: bool
        """

        self._is_event_triggered_qf_monitoring_supported = is_event_triggered_qf_monitoring_supported

    @property
    def is_periodic_qf_monitoring_supported(self):
        """Gets the is_periodic_qf_monitoring_supported of this QFQoSMonitoringControlSingleAllOfAttributes.


        :return: The is_periodic_qf_monitoring_supported of this QFQoSMonitoringControlSingleAllOfAttributes.
        :rtype: bool
        """
        return self._is_periodic_qf_monitoring_supported

    @is_periodic_qf_monitoring_supported.setter
    def is_periodic_qf_monitoring_supported(self, is_periodic_qf_monitoring_supported):
        """Sets the is_periodic_qf_monitoring_supported of this QFQoSMonitoringControlSingleAllOfAttributes.


        :param is_periodic_qf_monitoring_supported: The is_periodic_qf_monitoring_supported of this QFQoSMonitoringControlSingleAllOfAttributes.
        :type is_periodic_qf_monitoring_supported: bool
        """

        self._is_periodic_qf_monitoring_supported = is_periodic_qf_monitoring_supported

    @property
    def is_session_released_qf_monitoring_supported(self):
        """Gets the is_session_released_qf_monitoring_supported of this QFQoSMonitoringControlSingleAllOfAttributes.


        :return: The is_session_released_qf_monitoring_supported of this QFQoSMonitoringControlSingleAllOfAttributes.
        :rtype: bool
        """
        return self._is_session_released_qf_monitoring_supported

    @is_session_released_qf_monitoring_supported.setter
    def is_session_released_qf_monitoring_supported(self, is_session_released_qf_monitoring_supported):
        """Sets the is_session_released_qf_monitoring_supported of this QFQoSMonitoringControlSingleAllOfAttributes.


        :param is_session_released_qf_monitoring_supported: The is_session_released_qf_monitoring_supported of this QFQoSMonitoringControlSingleAllOfAttributes.
        :type is_session_released_qf_monitoring_supported: bool
        """

        self._is_session_released_qf_monitoring_supported = is_session_released_qf_monitoring_supported

    @property
    def q_f_packet_delay_thresholds(self):
        """Gets the q_f_packet_delay_thresholds of this QFQoSMonitoringControlSingleAllOfAttributes.


        :return: The q_f_packet_delay_thresholds of this QFQoSMonitoringControlSingleAllOfAttributes.
        :rtype: QFPacketDelayThresholdsType
        """
        return self._q_f_packet_delay_thresholds

    @q_f_packet_delay_thresholds.setter
    def q_f_packet_delay_thresholds(self, q_f_packet_delay_thresholds):
        """Sets the q_f_packet_delay_thresholds of this QFQoSMonitoringControlSingleAllOfAttributes.


        :param q_f_packet_delay_thresholds: The q_f_packet_delay_thresholds of this QFQoSMonitoringControlSingleAllOfAttributes.
        :type q_f_packet_delay_thresholds: QFPacketDelayThresholdsType
        """

        self._q_f_packet_delay_thresholds = q_f_packet_delay_thresholds

    @property
    def q_f_minimum_wait_time(self):
        """Gets the q_f_minimum_wait_time of this QFQoSMonitoringControlSingleAllOfAttributes.


        :return: The q_f_minimum_wait_time of this QFQoSMonitoringControlSingleAllOfAttributes.
        :rtype: int
        """
        return self._q_f_minimum_wait_time

    @q_f_minimum_wait_time.setter
    def q_f_minimum_wait_time(self, q_f_minimum_wait_time):
        """Sets the q_f_minimum_wait_time of this QFQoSMonitoringControlSingleAllOfAttributes.


        :param q_f_minimum_wait_time: The q_f_minimum_wait_time of this QFQoSMonitoringControlSingleAllOfAttributes.
        :type q_f_minimum_wait_time: int
        """

        self._q_f_minimum_wait_time = q_f_minimum_wait_time

    @property
    def q_f_measurement_period(self):
        """Gets the q_f_measurement_period of this QFQoSMonitoringControlSingleAllOfAttributes.


        :return: The q_f_measurement_period of this QFQoSMonitoringControlSingleAllOfAttributes.
        :rtype: int
        """
        return self._q_f_measurement_period

    @q_f_measurement_period.setter
    def q_f_measurement_period(self, q_f_measurement_period):
        """Sets the q_f_measurement_period of this QFQoSMonitoringControlSingleAllOfAttributes.


        :param q_f_measurement_period: The q_f_measurement_period of this QFQoSMonitoringControlSingleAllOfAttributes.
        :type q_f_measurement_period: int
        """

        self._q_f_measurement_period = q_f_measurement_period
