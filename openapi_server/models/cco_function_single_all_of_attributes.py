# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.cco_overshoot_coverage_parameters_single import CCOOvershootCoverageParametersSingle
from openapi_server.models.cco_pilot_pollution_parameters_single import CCOPilotPollutionParametersSingle
from openapi_server.models.cco_weak_coverage_parameters_single import CCOWeakCoverageParametersSingle
from openapi_server import util

from openapi_server.models.cco_overshoot_coverage_parameters_single import CCOOvershootCoverageParametersSingle  # noqa: E501
from openapi_server.models.cco_pilot_pollution_parameters_single import CCOPilotPollutionParametersSingle  # noqa: E501
from openapi_server.models.cco_weak_coverage_parameters_single import CCOWeakCoverageParametersSingle  # noqa: E501

class CCOFunctionSingleAllOfAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, c_co_control=None, c_co_weak_coverage_parameters=None, c_co_pilot_pollution_parameters=None, c_co_overshoot_coverage_parameters_single=None):  # noqa: E501
        """CCOFunctionSingleAllOfAttributes - a model defined in OpenAPI

        :param c_co_control: The c_co_control of this CCOFunctionSingleAllOfAttributes.  # noqa: E501
        :type c_co_control: bool
        :param c_co_weak_coverage_parameters: The c_co_weak_coverage_parameters of this CCOFunctionSingleAllOfAttributes.  # noqa: E501
        :type c_co_weak_coverage_parameters: CCOWeakCoverageParametersSingle
        :param c_co_pilot_pollution_parameters: The c_co_pilot_pollution_parameters of this CCOFunctionSingleAllOfAttributes.  # noqa: E501
        :type c_co_pilot_pollution_parameters: CCOPilotPollutionParametersSingle
        :param c_co_overshoot_coverage_parameters_single: The c_co_overshoot_coverage_parameters_single of this CCOFunctionSingleAllOfAttributes.  # noqa: E501
        :type c_co_overshoot_coverage_parameters_single: CCOOvershootCoverageParametersSingle
        """
        self.openapi_types = {
            'c_co_control': bool,
            'c_co_weak_coverage_parameters': CCOWeakCoverageParametersSingle,
            'c_co_pilot_pollution_parameters': CCOPilotPollutionParametersSingle,
            'c_co_overshoot_coverage_parameters_single': CCOOvershootCoverageParametersSingle
        }

        self.attribute_map = {
            'c_co_control': 'cCOControl',
            'c_co_weak_coverage_parameters': 'cCOWeakCoverageParameters',
            'c_co_pilot_pollution_parameters': 'cCOPilotPollutionParameters',
            'c_co_overshoot_coverage_parameters_single': 'cCOOvershootCoverageParameters-Single'
        }

        self._c_co_control = c_co_control
        self._c_co_weak_coverage_parameters = c_co_weak_coverage_parameters
        self._c_co_pilot_pollution_parameters = c_co_pilot_pollution_parameters
        self._c_co_overshoot_coverage_parameters_single = c_co_overshoot_coverage_parameters_single

    @classmethod
    def from_dict(cls, dikt) -> 'CCOFunctionSingleAllOfAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CCOFunction_Single_allOf_attributes of this CCOFunctionSingleAllOfAttributes.  # noqa: E501
        :rtype: CCOFunctionSingleAllOfAttributes
        """
        return util.deserialize_model(dikt, cls)

    @property
    def c_co_control(self):
        """Gets the c_co_control of this CCOFunctionSingleAllOfAttributes.


        :return: The c_co_control of this CCOFunctionSingleAllOfAttributes.
        :rtype: bool
        """
        return self._c_co_control

    @c_co_control.setter
    def c_co_control(self, c_co_control):
        """Sets the c_co_control of this CCOFunctionSingleAllOfAttributes.


        :param c_co_control: The c_co_control of this CCOFunctionSingleAllOfAttributes.
        :type c_co_control: bool
        """

        self._c_co_control = c_co_control

    @property
    def c_co_weak_coverage_parameters(self):
        """Gets the c_co_weak_coverage_parameters of this CCOFunctionSingleAllOfAttributes.


        :return: The c_co_weak_coverage_parameters of this CCOFunctionSingleAllOfAttributes.
        :rtype: CCOWeakCoverageParametersSingle
        """
        return self._c_co_weak_coverage_parameters

    @c_co_weak_coverage_parameters.setter
    def c_co_weak_coverage_parameters(self, c_co_weak_coverage_parameters):
        """Sets the c_co_weak_coverage_parameters of this CCOFunctionSingleAllOfAttributes.


        :param c_co_weak_coverage_parameters: The c_co_weak_coverage_parameters of this CCOFunctionSingleAllOfAttributes.
        :type c_co_weak_coverage_parameters: CCOWeakCoverageParametersSingle
        """

        self._c_co_weak_coverage_parameters = c_co_weak_coverage_parameters

    @property
    def c_co_pilot_pollution_parameters(self):
        """Gets the c_co_pilot_pollution_parameters of this CCOFunctionSingleAllOfAttributes.


        :return: The c_co_pilot_pollution_parameters of this CCOFunctionSingleAllOfAttributes.
        :rtype: CCOPilotPollutionParametersSingle
        """
        return self._c_co_pilot_pollution_parameters

    @c_co_pilot_pollution_parameters.setter
    def c_co_pilot_pollution_parameters(self, c_co_pilot_pollution_parameters):
        """Sets the c_co_pilot_pollution_parameters of this CCOFunctionSingleAllOfAttributes.


        :param c_co_pilot_pollution_parameters: The c_co_pilot_pollution_parameters of this CCOFunctionSingleAllOfAttributes.
        :type c_co_pilot_pollution_parameters: CCOPilotPollutionParametersSingle
        """

        self._c_co_pilot_pollution_parameters = c_co_pilot_pollution_parameters

    @property
    def c_co_overshoot_coverage_parameters_single(self):
        """Gets the c_co_overshoot_coverage_parameters_single of this CCOFunctionSingleAllOfAttributes.


        :return: The c_co_overshoot_coverage_parameters_single of this CCOFunctionSingleAllOfAttributes.
        :rtype: CCOOvershootCoverageParametersSingle
        """
        return self._c_co_overshoot_coverage_parameters_single

    @c_co_overshoot_coverage_parameters_single.setter
    def c_co_overshoot_coverage_parameters_single(self, c_co_overshoot_coverage_parameters_single):
        """Sets the c_co_overshoot_coverage_parameters_single of this CCOFunctionSingleAllOfAttributes.


        :param c_co_overshoot_coverage_parameters_single: The c_co_overshoot_coverage_parameters_single of this CCOFunctionSingleAllOfAttributes.
        :type c_co_overshoot_coverage_parameters_single: CCOOvershootCoverageParametersSingle
        """

        self._c_co_overshoot_coverage_parameters_single = c_co_overshoot_coverage_parameters_single
