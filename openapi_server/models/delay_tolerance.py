# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.serv_attr_com import ServAttrCom
from openapi_server.models.support import Support
from openapi_server import util

from openapi_server.models.serv_attr_com import ServAttrCom  # noqa: E501
from openapi_server.models.support import Support  # noqa: E501

class DelayTolerance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, serv_attr_com=None, support=None):  # noqa: E501
        """DelayTolerance - a model defined in OpenAPI

        :param serv_attr_com: The serv_attr_com of this DelayTolerance.  # noqa: E501
        :type serv_attr_com: ServAttrCom
        :param support: The support of this DelayTolerance.  # noqa: E501
        :type support: Support
        """
        self.openapi_types = {
            'serv_attr_com': ServAttrCom,
            'support': Support
        }

        self.attribute_map = {
            'serv_attr_com': 'servAttrCom',
            'support': 'support'
        }

        self._serv_attr_com = serv_attr_com
        self._support = support

    @classmethod
    def from_dict(cls, dikt) -> 'DelayTolerance':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DelayTolerance of this DelayTolerance.  # noqa: E501
        :rtype: DelayTolerance
        """
        return util.deserialize_model(dikt, cls)

    @property
    def serv_attr_com(self):
        """Gets the serv_attr_com of this DelayTolerance.


        :return: The serv_attr_com of this DelayTolerance.
        :rtype: ServAttrCom
        """
        return self._serv_attr_com

    @serv_attr_com.setter
    def serv_attr_com(self, serv_attr_com):
        """Sets the serv_attr_com of this DelayTolerance.


        :param serv_attr_com: The serv_attr_com of this DelayTolerance.
        :type serv_attr_com: ServAttrCom
        """

        self._serv_attr_com = serv_attr_com

    @property
    def support(self):
        """Gets the support of this DelayTolerance.


        :return: The support of this DelayTolerance.
        :rtype: Support
        """
        return self._support

    @support.setter
    def support(self, support):
        """Sets the support of this DelayTolerance.


        :param support: The support of this DelayTolerance.
        :type support: Support
        """

        self._support = support
