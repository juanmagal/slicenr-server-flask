# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class FileSingleAllOfAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_location=None, file_compression=None, file_size=None, file_data_type=None, file_format=None, file_ready_time=None, file_expiration_time=None, file_content=None, job_ref=None, job_id=None):  # noqa: E501
        """FileSingleAllOfAttributes - a model defined in OpenAPI

        :param file_location: The file_location of this FileSingleAllOfAttributes.  # noqa: E501
        :type file_location: str
        :param file_compression: The file_compression of this FileSingleAllOfAttributes.  # noqa: E501
        :type file_compression: str
        :param file_size: The file_size of this FileSingleAllOfAttributes.  # noqa: E501
        :type file_size: int
        :param file_data_type: The file_data_type of this FileSingleAllOfAttributes.  # noqa: E501
        :type file_data_type: str
        :param file_format: The file_format of this FileSingleAllOfAttributes.  # noqa: E501
        :type file_format: str
        :param file_ready_time: The file_ready_time of this FileSingleAllOfAttributes.  # noqa: E501
        :type file_ready_time: datetime
        :param file_expiration_time: The file_expiration_time of this FileSingleAllOfAttributes.  # noqa: E501
        :type file_expiration_time: datetime
        :param file_content: The file_content of this FileSingleAllOfAttributes.  # noqa: E501
        :type file_content: str
        :param job_ref: The job_ref of this FileSingleAllOfAttributes.  # noqa: E501
        :type job_ref: str
        :param job_id: The job_id of this FileSingleAllOfAttributes.  # noqa: E501
        :type job_id: str
        """
        self.openapi_types = {
            'file_location': str,
            'file_compression': str,
            'file_size': int,
            'file_data_type': str,
            'file_format': str,
            'file_ready_time': datetime,
            'file_expiration_time': datetime,
            'file_content': str,
            'job_ref': str,
            'job_id': str
        }

        self.attribute_map = {
            'file_location': 'fileLocation',
            'file_compression': 'fileCompression',
            'file_size': 'fileSize',
            'file_data_type': 'fileDataType',
            'file_format': 'fileFormat',
            'file_ready_time': 'fileReadyTime',
            'file_expiration_time': 'fileExpirationTime',
            'file_content': 'fileContent',
            'job_ref': 'jobRef',
            'job_id': 'jobId'
        }

        self._file_location = file_location
        self._file_compression = file_compression
        self._file_size = file_size
        self._file_data_type = file_data_type
        self._file_format = file_format
        self._file_ready_time = file_ready_time
        self._file_expiration_time = file_expiration_time
        self._file_content = file_content
        self._job_ref = job_ref
        self._job_id = job_id

    @classmethod
    def from_dict(cls, dikt) -> 'FileSingleAllOfAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The File_Single_allOf_attributes of this FileSingleAllOfAttributes.  # noqa: E501
        :rtype: FileSingleAllOfAttributes
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_location(self):
        """Gets the file_location of this FileSingleAllOfAttributes.


        :return: The file_location of this FileSingleAllOfAttributes.
        :rtype: str
        """
        return self._file_location

    @file_location.setter
    def file_location(self, file_location):
        """Sets the file_location of this FileSingleAllOfAttributes.


        :param file_location: The file_location of this FileSingleAllOfAttributes.
        :type file_location: str
        """

        self._file_location = file_location

    @property
    def file_compression(self):
        """Gets the file_compression of this FileSingleAllOfAttributes.


        :return: The file_compression of this FileSingleAllOfAttributes.
        :rtype: str
        """
        return self._file_compression

    @file_compression.setter
    def file_compression(self, file_compression):
        """Sets the file_compression of this FileSingleAllOfAttributes.


        :param file_compression: The file_compression of this FileSingleAllOfAttributes.
        :type file_compression: str
        """

        self._file_compression = file_compression

    @property
    def file_size(self):
        """Gets the file_size of this FileSingleAllOfAttributes.


        :return: The file_size of this FileSingleAllOfAttributes.
        :rtype: int
        """
        return self._file_size

    @file_size.setter
    def file_size(self, file_size):
        """Sets the file_size of this FileSingleAllOfAttributes.


        :param file_size: The file_size of this FileSingleAllOfAttributes.
        :type file_size: int
        """

        self._file_size = file_size

    @property
    def file_data_type(self):
        """Gets the file_data_type of this FileSingleAllOfAttributes.


        :return: The file_data_type of this FileSingleAllOfAttributes.
        :rtype: str
        """
        return self._file_data_type

    @file_data_type.setter
    def file_data_type(self, file_data_type):
        """Sets the file_data_type of this FileSingleAllOfAttributes.


        :param file_data_type: The file_data_type of this FileSingleAllOfAttributes.
        :type file_data_type: str
        """
        allowed_values = ["PERFORMANCE", "TRACE", "ANALYTICS", "PROPRIETARY"]  # noqa: E501
        if file_data_type not in allowed_values:
            raise ValueError(
                "Invalid value for `file_data_type` ({0}), must be one of {1}"
                .format(file_data_type, allowed_values)
            )

        self._file_data_type = file_data_type

    @property
    def file_format(self):
        """Gets the file_format of this FileSingleAllOfAttributes.


        :return: The file_format of this FileSingleAllOfAttributes.
        :rtype: str
        """
        return self._file_format

    @file_format.setter
    def file_format(self, file_format):
        """Sets the file_format of this FileSingleAllOfAttributes.


        :param file_format: The file_format of this FileSingleAllOfAttributes.
        :type file_format: str
        """

        self._file_format = file_format

    @property
    def file_ready_time(self):
        """Gets the file_ready_time of this FileSingleAllOfAttributes.


        :return: The file_ready_time of this FileSingleAllOfAttributes.
        :rtype: datetime
        """
        return self._file_ready_time

    @file_ready_time.setter
    def file_ready_time(self, file_ready_time):
        """Sets the file_ready_time of this FileSingleAllOfAttributes.


        :param file_ready_time: The file_ready_time of this FileSingleAllOfAttributes.
        :type file_ready_time: datetime
        """

        self._file_ready_time = file_ready_time

    @property
    def file_expiration_time(self):
        """Gets the file_expiration_time of this FileSingleAllOfAttributes.


        :return: The file_expiration_time of this FileSingleAllOfAttributes.
        :rtype: datetime
        """
        return self._file_expiration_time

    @file_expiration_time.setter
    def file_expiration_time(self, file_expiration_time):
        """Sets the file_expiration_time of this FileSingleAllOfAttributes.


        :param file_expiration_time: The file_expiration_time of this FileSingleAllOfAttributes.
        :type file_expiration_time: datetime
        """

        self._file_expiration_time = file_expiration_time

    @property
    def file_content(self):
        """Gets the file_content of this FileSingleAllOfAttributes.


        :return: The file_content of this FileSingleAllOfAttributes.
        :rtype: str
        """
        return self._file_content

    @file_content.setter
    def file_content(self, file_content):
        """Sets the file_content of this FileSingleAllOfAttributes.


        :param file_content: The file_content of this FileSingleAllOfAttributes.
        :type file_content: str
        """

        self._file_content = file_content

    @property
    def job_ref(self):
        """Gets the job_ref of this FileSingleAllOfAttributes.


        :return: The job_ref of this FileSingleAllOfAttributes.
        :rtype: str
        """
        return self._job_ref

    @job_ref.setter
    def job_ref(self, job_ref):
        """Sets the job_ref of this FileSingleAllOfAttributes.


        :param job_ref: The job_ref of this FileSingleAllOfAttributes.
        :type job_ref: str
        """

        self._job_ref = job_ref

    @property
    def job_id(self):
        """Gets the job_id of this FileSingleAllOfAttributes.


        :return: The job_id of this FileSingleAllOfAttributes.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this FileSingleAllOfAttributes.


        :param job_id: The job_id of this FileSingleAllOfAttributes.
        :type job_id: str
        """

        self._job_id = job_id
