# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.xl_thpt import XLThpt
from openapi_server import util

from openapi_server.models.xl_thpt import XLThpt  # noqa: E501

class NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, d_llatency=None, u_llatency=None, d_l_thpt_per_slice_subnet=None, u_l_thpt_per_slice_subnet=None, coverage_area_ta_list=None):  # noqa: E501
        """NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes - a model defined in OpenAPI

        :param d_llatency: The d_llatency of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.  # noqa: E501
        :type d_llatency: int
        :param u_llatency: The u_llatency of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.  # noqa: E501
        :type u_llatency: int
        :param d_l_thpt_per_slice_subnet: The d_l_thpt_per_slice_subnet of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.  # noqa: E501
        :type d_l_thpt_per_slice_subnet: XLThpt
        :param u_l_thpt_per_slice_subnet: The u_l_thpt_per_slice_subnet of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.  # noqa: E501
        :type u_l_thpt_per_slice_subnet: XLThpt
        :param coverage_area_ta_list: The coverage_area_ta_list of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.  # noqa: E501
        :type coverage_area_ta_list: List[int]
        """
        self.openapi_types = {
            'd_llatency': int,
            'u_llatency': int,
            'd_l_thpt_per_slice_subnet': XLThpt,
            'u_l_thpt_per_slice_subnet': XLThpt,
            'coverage_area_ta_list': List[int]
        }

        self.attribute_map = {
            'd_llatency': 'dLlatency',
            'u_llatency': 'uLlatency',
            'd_l_thpt_per_slice_subnet': 'dLThptPerSliceSubnet',
            'u_l_thpt_per_slice_subnet': 'uLThptPerSliceSubnet',
            'coverage_area_ta_list': 'coverageAreaTAList'
        }

        self._d_llatency = d_llatency
        self._u_llatency = u_llatency
        self._d_l_thpt_per_slice_subnet = d_l_thpt_per_slice_subnet
        self._u_l_thpt_per_slice_subnet = u_l_thpt_per_slice_subnet
        self._coverage_area_ta_list = coverage_area_ta_list

    @classmethod
    def from_dict(cls, dikt) -> 'NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NetworkSliceSubnetProviderCapabilities_Single_allOf_attributes of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.  # noqa: E501
        :rtype: NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes
        """
        return util.deserialize_model(dikt, cls)

    @property
    def d_llatency(self):
        """Gets the d_llatency of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.


        :return: The d_llatency of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.
        :rtype: int
        """
        return self._d_llatency

    @d_llatency.setter
    def d_llatency(self, d_llatency):
        """Sets the d_llatency of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.


        :param d_llatency: The d_llatency of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.
        :type d_llatency: int
        """

        self._d_llatency = d_llatency

    @property
    def u_llatency(self):
        """Gets the u_llatency of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.


        :return: The u_llatency of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.
        :rtype: int
        """
        return self._u_llatency

    @u_llatency.setter
    def u_llatency(self, u_llatency):
        """Sets the u_llatency of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.


        :param u_llatency: The u_llatency of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.
        :type u_llatency: int
        """

        self._u_llatency = u_llatency

    @property
    def d_l_thpt_per_slice_subnet(self):
        """Gets the d_l_thpt_per_slice_subnet of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.


        :return: The d_l_thpt_per_slice_subnet of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.
        :rtype: XLThpt
        """
        return self._d_l_thpt_per_slice_subnet

    @d_l_thpt_per_slice_subnet.setter
    def d_l_thpt_per_slice_subnet(self, d_l_thpt_per_slice_subnet):
        """Sets the d_l_thpt_per_slice_subnet of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.


        :param d_l_thpt_per_slice_subnet: The d_l_thpt_per_slice_subnet of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.
        :type d_l_thpt_per_slice_subnet: XLThpt
        """

        self._d_l_thpt_per_slice_subnet = d_l_thpt_per_slice_subnet

    @property
    def u_l_thpt_per_slice_subnet(self):
        """Gets the u_l_thpt_per_slice_subnet of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.


        :return: The u_l_thpt_per_slice_subnet of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.
        :rtype: XLThpt
        """
        return self._u_l_thpt_per_slice_subnet

    @u_l_thpt_per_slice_subnet.setter
    def u_l_thpt_per_slice_subnet(self, u_l_thpt_per_slice_subnet):
        """Sets the u_l_thpt_per_slice_subnet of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.


        :param u_l_thpt_per_slice_subnet: The u_l_thpt_per_slice_subnet of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.
        :type u_l_thpt_per_slice_subnet: XLThpt
        """

        self._u_l_thpt_per_slice_subnet = u_l_thpt_per_slice_subnet

    @property
    def coverage_area_ta_list(self):
        """Gets the coverage_area_ta_list of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.


        :return: The coverage_area_ta_list of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.
        :rtype: List[int]
        """
        return self._coverage_area_ta_list

    @coverage_area_ta_list.setter
    def coverage_area_ta_list(self, coverage_area_ta_list):
        """Sets the coverage_area_ta_list of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.


        :param coverage_area_ta_list: The coverage_area_ta_list of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.
        :type coverage_area_ta_list: List[int]
        """

        self._coverage_area_ta_list = coverage_area_ta_list
