# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.amf_region_single import AmfRegionSingle
from openapi_server.models.amf_set_single import AmfSetSingle
from openapi_server.models.configurable5_qi_set_single import Configurable5QISetSingle
from openapi_server.models.dynamic5_qi_set_single import Dynamic5QISetSingle
from openapi_server.models.ecm_connection_info_single import EcmConnectionInfoSingle
from openapi_server.models.external_amf_function_single import ExternalAmfFunctionSingle
from openapi_server.models.external_nrf_function_single import ExternalNrfFunctionSingle
from openapi_server.models.external_nssf_function_single import ExternalNssfFunctionSingle
from openapi_server.models.managed_element_single import ManagedElementSingle
from openapi_server.models.sub_network_single import SubNetworkSingle
from openapi_server import util

from openapi_server.models.amf_region_single import AmfRegionSingle  # noqa: E501
from openapi_server.models.amf_set_single import AmfSetSingle  # noqa: E501
from openapi_server.models.configurable5_qi_set_single import Configurable5QISetSingle  # noqa: E501
from openapi_server.models.dynamic5_qi_set_single import Dynamic5QISetSingle  # noqa: E501
from openapi_server.models.ecm_connection_info_single import EcmConnectionInfoSingle  # noqa: E501
from openapi_server.models.external_amf_function_single import ExternalAmfFunctionSingle  # noqa: E501
from openapi_server.models.external_nrf_function_single import ExternalNrfFunctionSingle  # noqa: E501
from openapi_server.models.external_nssf_function_single import ExternalNssfFunctionSingle  # noqa: E501
from openapi_server.models.managed_element_single import ManagedElementSingle  # noqa: E501
from openapi_server.models.sub_network_single import SubNetworkSingle  # noqa: E501

class SubNetworkSingle1AllOf1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sub_network=None, managed_element=None, external_amf_function=None, external_nrf_function=None, external_nssf_function=None, amf_set=None, amf_region=None, configurable5_qi_set=None, dynamic5_qi_set=None, ecm_connection_info=None):  # noqa: E501
        """SubNetworkSingle1AllOf1 - a model defined in OpenAPI

        :param sub_network: The sub_network of this SubNetworkSingle1AllOf1.  # noqa: E501
        :type sub_network: List[SubNetworkSingle]
        :param managed_element: The managed_element of this SubNetworkSingle1AllOf1.  # noqa: E501
        :type managed_element: List[ManagedElementSingle]
        :param external_amf_function: The external_amf_function of this SubNetworkSingle1AllOf1.  # noqa: E501
        :type external_amf_function: List[ExternalAmfFunctionSingle]
        :param external_nrf_function: The external_nrf_function of this SubNetworkSingle1AllOf1.  # noqa: E501
        :type external_nrf_function: List[ExternalNrfFunctionSingle]
        :param external_nssf_function: The external_nssf_function of this SubNetworkSingle1AllOf1.  # noqa: E501
        :type external_nssf_function: List[ExternalNssfFunctionSingle]
        :param amf_set: The amf_set of this SubNetworkSingle1AllOf1.  # noqa: E501
        :type amf_set: List[AmfSetSingle]
        :param amf_region: The amf_region of this SubNetworkSingle1AllOf1.  # noqa: E501
        :type amf_region: List[AmfRegionSingle]
        :param configurable5_qi_set: The configurable5_qi_set of this SubNetworkSingle1AllOf1.  # noqa: E501
        :type configurable5_qi_set: List[Configurable5QISetSingle]
        :param dynamic5_qi_set: The dynamic5_qi_set of this SubNetworkSingle1AllOf1.  # noqa: E501
        :type dynamic5_qi_set: List[Dynamic5QISetSingle]
        :param ecm_connection_info: The ecm_connection_info of this SubNetworkSingle1AllOf1.  # noqa: E501
        :type ecm_connection_info: List[EcmConnectionInfoSingle]
        """
        self.openapi_types = {
            'sub_network': List[SubNetworkSingle],
            'managed_element': List[ManagedElementSingle],
            'external_amf_function': List[ExternalAmfFunctionSingle],
            'external_nrf_function': List[ExternalNrfFunctionSingle],
            'external_nssf_function': List[ExternalNssfFunctionSingle],
            'amf_set': List[AmfSetSingle],
            'amf_region': List[AmfRegionSingle],
            'configurable5_qi_set': List[Configurable5QISetSingle],
            'dynamic5_qi_set': List[Dynamic5QISetSingle],
            'ecm_connection_info': List[EcmConnectionInfoSingle]
        }

        self.attribute_map = {
            'sub_network': 'SubNetwork',
            'managed_element': 'ManagedElement',
            'external_amf_function': 'ExternalAmfFunction',
            'external_nrf_function': 'ExternalNrfFunction',
            'external_nssf_function': 'ExternalNssfFunction',
            'amf_set': 'AmfSet',
            'amf_region': 'AmfRegion',
            'configurable5_qi_set': 'Configurable5QISet',
            'dynamic5_qi_set': 'Dynamic5QISet',
            'ecm_connection_info': 'EcmConnectionInfo'
        }

        self._sub_network = sub_network
        self._managed_element = managed_element
        self._external_amf_function = external_amf_function
        self._external_nrf_function = external_nrf_function
        self._external_nssf_function = external_nssf_function
        self._amf_set = amf_set
        self._amf_region = amf_region
        self._configurable5_qi_set = configurable5_qi_set
        self._dynamic5_qi_set = dynamic5_qi_set
        self._ecm_connection_info = ecm_connection_info

    @classmethod
    def from_dict(cls, dikt) -> 'SubNetworkSingle1AllOf1':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SubNetwork_Single_1_allOf_1 of this SubNetworkSingle1AllOf1.  # noqa: E501
        :rtype: SubNetworkSingle1AllOf1
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sub_network(self):
        """Gets the sub_network of this SubNetworkSingle1AllOf1.


        :return: The sub_network of this SubNetworkSingle1AllOf1.
        :rtype: List[SubNetworkSingle]
        """
        return self._sub_network

    @sub_network.setter
    def sub_network(self, sub_network):
        """Sets the sub_network of this SubNetworkSingle1AllOf1.


        :param sub_network: The sub_network of this SubNetworkSingle1AllOf1.
        :type sub_network: List[SubNetworkSingle]
        """

        self._sub_network = sub_network

    @property
    def managed_element(self):
        """Gets the managed_element of this SubNetworkSingle1AllOf1.


        :return: The managed_element of this SubNetworkSingle1AllOf1.
        :rtype: List[ManagedElementSingle]
        """
        return self._managed_element

    @managed_element.setter
    def managed_element(self, managed_element):
        """Sets the managed_element of this SubNetworkSingle1AllOf1.


        :param managed_element: The managed_element of this SubNetworkSingle1AllOf1.
        :type managed_element: List[ManagedElementSingle]
        """

        self._managed_element = managed_element

    @property
    def external_amf_function(self):
        """Gets the external_amf_function of this SubNetworkSingle1AllOf1.


        :return: The external_amf_function of this SubNetworkSingle1AllOf1.
        :rtype: List[ExternalAmfFunctionSingle]
        """
        return self._external_amf_function

    @external_amf_function.setter
    def external_amf_function(self, external_amf_function):
        """Sets the external_amf_function of this SubNetworkSingle1AllOf1.


        :param external_amf_function: The external_amf_function of this SubNetworkSingle1AllOf1.
        :type external_amf_function: List[ExternalAmfFunctionSingle]
        """

        self._external_amf_function = external_amf_function

    @property
    def external_nrf_function(self):
        """Gets the external_nrf_function of this SubNetworkSingle1AllOf1.


        :return: The external_nrf_function of this SubNetworkSingle1AllOf1.
        :rtype: List[ExternalNrfFunctionSingle]
        """
        return self._external_nrf_function

    @external_nrf_function.setter
    def external_nrf_function(self, external_nrf_function):
        """Sets the external_nrf_function of this SubNetworkSingle1AllOf1.


        :param external_nrf_function: The external_nrf_function of this SubNetworkSingle1AllOf1.
        :type external_nrf_function: List[ExternalNrfFunctionSingle]
        """

        self._external_nrf_function = external_nrf_function

    @property
    def external_nssf_function(self):
        """Gets the external_nssf_function of this SubNetworkSingle1AllOf1.


        :return: The external_nssf_function of this SubNetworkSingle1AllOf1.
        :rtype: List[ExternalNssfFunctionSingle]
        """
        return self._external_nssf_function

    @external_nssf_function.setter
    def external_nssf_function(self, external_nssf_function):
        """Sets the external_nssf_function of this SubNetworkSingle1AllOf1.


        :param external_nssf_function: The external_nssf_function of this SubNetworkSingle1AllOf1.
        :type external_nssf_function: List[ExternalNssfFunctionSingle]
        """

        self._external_nssf_function = external_nssf_function

    @property
    def amf_set(self):
        """Gets the amf_set of this SubNetworkSingle1AllOf1.


        :return: The amf_set of this SubNetworkSingle1AllOf1.
        :rtype: List[AmfSetSingle]
        """
        return self._amf_set

    @amf_set.setter
    def amf_set(self, amf_set):
        """Sets the amf_set of this SubNetworkSingle1AllOf1.


        :param amf_set: The amf_set of this SubNetworkSingle1AllOf1.
        :type amf_set: List[AmfSetSingle]
        """

        self._amf_set = amf_set

    @property
    def amf_region(self):
        """Gets the amf_region of this SubNetworkSingle1AllOf1.


        :return: The amf_region of this SubNetworkSingle1AllOf1.
        :rtype: List[AmfRegionSingle]
        """
        return self._amf_region

    @amf_region.setter
    def amf_region(self, amf_region):
        """Sets the amf_region of this SubNetworkSingle1AllOf1.


        :param amf_region: The amf_region of this SubNetworkSingle1AllOf1.
        :type amf_region: List[AmfRegionSingle]
        """

        self._amf_region = amf_region

    @property
    def configurable5_qi_set(self):
        """Gets the configurable5_qi_set of this SubNetworkSingle1AllOf1.


        :return: The configurable5_qi_set of this SubNetworkSingle1AllOf1.
        :rtype: List[Configurable5QISetSingle]
        """
        return self._configurable5_qi_set

    @configurable5_qi_set.setter
    def configurable5_qi_set(self, configurable5_qi_set):
        """Sets the configurable5_qi_set of this SubNetworkSingle1AllOf1.


        :param configurable5_qi_set: The configurable5_qi_set of this SubNetworkSingle1AllOf1.
        :type configurable5_qi_set: List[Configurable5QISetSingle]
        """

        self._configurable5_qi_set = configurable5_qi_set

    @property
    def dynamic5_qi_set(self):
        """Gets the dynamic5_qi_set of this SubNetworkSingle1AllOf1.


        :return: The dynamic5_qi_set of this SubNetworkSingle1AllOf1.
        :rtype: List[Dynamic5QISetSingle]
        """
        return self._dynamic5_qi_set

    @dynamic5_qi_set.setter
    def dynamic5_qi_set(self, dynamic5_qi_set):
        """Sets the dynamic5_qi_set of this SubNetworkSingle1AllOf1.


        :param dynamic5_qi_set: The dynamic5_qi_set of this SubNetworkSingle1AllOf1.
        :type dynamic5_qi_set: List[Dynamic5QISetSingle]
        """

        self._dynamic5_qi_set = dynamic5_qi_set

    @property
    def ecm_connection_info(self):
        """Gets the ecm_connection_info of this SubNetworkSingle1AllOf1.


        :return: The ecm_connection_info of this SubNetworkSingle1AllOf1.
        :rtype: List[EcmConnectionInfoSingle]
        """
        return self._ecm_connection_info

    @ecm_connection_info.setter
    def ecm_connection_info(self, ecm_connection_info):
        """Sets the ecm_connection_info of this SubNetworkSingle1AllOf1.


        :param ecm_connection_info: The ecm_connection_info of this SubNetworkSingle1AllOf1.
        :type ecm_connection_info: List[EcmConnectionInfoSingle]
        """

        self._ecm_connection_info = ecm_connection_info
