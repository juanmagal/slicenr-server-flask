# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.geo_coordinate import GeoCoordinate
from openapi_server import util

from openapi_server.models.geo_coordinate import GeoCoordinate  # noqa: E501

class GeoArea(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, convex_geo_polygon=None):  # noqa: E501
        """GeoArea - a model defined in OpenAPI

        :param convex_geo_polygon: The convex_geo_polygon of this GeoArea.  # noqa: E501
        :type convex_geo_polygon: List[GeoCoordinate]
        """
        self.openapi_types = {
            'convex_geo_polygon': List[GeoCoordinate]
        }

        self.attribute_map = {
            'convex_geo_polygon': 'convexGeoPolygon'
        }

        self._convex_geo_polygon = convex_geo_polygon

    @classmethod
    def from_dict(cls, dikt) -> 'GeoArea':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GeoArea of this GeoArea.  # noqa: E501
        :rtype: GeoArea
        """
        return util.deserialize_model(dikt, cls)

    @property
    def convex_geo_polygon(self):
        """Gets the convex_geo_polygon of this GeoArea.


        :return: The convex_geo_polygon of this GeoArea.
        :rtype: List[GeoCoordinate]
        """
        return self._convex_geo_polygon

    @convex_geo_polygon.setter
    def convex_geo_polygon(self, convex_geo_polygon):
        """Sets the convex_geo_polygon of this GeoArea.


        :param convex_geo_polygon: The convex_geo_polygon of this GeoArea.
        :type convex_geo_polygon: List[GeoCoordinate]
        """
        if convex_geo_polygon is not None and len(convex_geo_polygon) < 3:
            raise ValueError("Invalid value for `convex_geo_polygon`, number of items must be greater than or equal to `3`")  # noqa: E501

        self._convex_geo_polygon = convex_geo_polygon
