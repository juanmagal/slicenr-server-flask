# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.administrative_state import AdministrativeState
from openapi_server.models.plmn_info import PlmnInfo
from openapi_server.models.vs_data_container_single import VsDataContainerSingle
from openapi_server import util

from openapi_server.models.administrative_state import AdministrativeState  # noqa: E501
from openapi_server.models.plmn_info import PlmnInfo  # noqa: E501
from openapi_server.models.vs_data_container_single import VsDataContainerSingle  # noqa: E501

class NrOperatorCellDuSingle(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, object_class=None, object_instance=None, vs_data_container=None, cell_local_id=None, administrative_state=None, plmn_info_list=None, nr_tac=None):  # noqa: E501
        """NrOperatorCellDuSingle - a model defined in OpenAPI

        :param id: The id of this NrOperatorCellDuSingle.  # noqa: E501
        :type id: str
        :param object_class: The object_class of this NrOperatorCellDuSingle.  # noqa: E501
        :type object_class: str
        :param object_instance: The object_instance of this NrOperatorCellDuSingle.  # noqa: E501
        :type object_instance: str
        :param vs_data_container: The vs_data_container of this NrOperatorCellDuSingle.  # noqa: E501
        :type vs_data_container: List[VsDataContainerSingle]
        :param cell_local_id: The cell_local_id of this NrOperatorCellDuSingle.  # noqa: E501
        :type cell_local_id: int
        :param administrative_state: The administrative_state of this NrOperatorCellDuSingle.  # noqa: E501
        :type administrative_state: AdministrativeState
        :param plmn_info_list: The plmn_info_list of this NrOperatorCellDuSingle.  # noqa: E501
        :type plmn_info_list: List[PlmnInfo]
        :param nr_tac: The nr_tac of this NrOperatorCellDuSingle.  # noqa: E501
        :type nr_tac: int
        """
        self.openapi_types = {
            'id': str,
            'object_class': str,
            'object_instance': str,
            'vs_data_container': List[VsDataContainerSingle],
            'cell_local_id': int,
            'administrative_state': AdministrativeState,
            'plmn_info_list': List[PlmnInfo],
            'nr_tac': int
        }

        self.attribute_map = {
            'id': 'id',
            'object_class': 'objectClass',
            'object_instance': 'objectInstance',
            'vs_data_container': 'VsDataContainer',
            'cell_local_id': 'cellLocalId',
            'administrative_state': 'administrativeState',
            'plmn_info_list': 'plmnInfoList',
            'nr_tac': 'nrTac'
        }

        self._id = id
        self._object_class = object_class
        self._object_instance = object_instance
        self._vs_data_container = vs_data_container
        self._cell_local_id = cell_local_id
        self._administrative_state = administrative_state
        self._plmn_info_list = plmn_info_list
        self._nr_tac = nr_tac

    @classmethod
    def from_dict(cls, dikt) -> 'NrOperatorCellDuSingle':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NrOperatorCellDu-Single of this NrOperatorCellDuSingle.  # noqa: E501
        :rtype: NrOperatorCellDuSingle
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this NrOperatorCellDuSingle.


        :return: The id of this NrOperatorCellDuSingle.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this NrOperatorCellDuSingle.


        :param id: The id of this NrOperatorCellDuSingle.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def object_class(self):
        """Gets the object_class of this NrOperatorCellDuSingle.


        :return: The object_class of this NrOperatorCellDuSingle.
        :rtype: str
        """
        return self._object_class

    @object_class.setter
    def object_class(self, object_class):
        """Sets the object_class of this NrOperatorCellDuSingle.


        :param object_class: The object_class of this NrOperatorCellDuSingle.
        :type object_class: str
        """

        self._object_class = object_class

    @property
    def object_instance(self):
        """Gets the object_instance of this NrOperatorCellDuSingle.


        :return: The object_instance of this NrOperatorCellDuSingle.
        :rtype: str
        """
        return self._object_instance

    @object_instance.setter
    def object_instance(self, object_instance):
        """Sets the object_instance of this NrOperatorCellDuSingle.


        :param object_instance: The object_instance of this NrOperatorCellDuSingle.
        :type object_instance: str
        """

        self._object_instance = object_instance

    @property
    def vs_data_container(self):
        """Gets the vs_data_container of this NrOperatorCellDuSingle.


        :return: The vs_data_container of this NrOperatorCellDuSingle.
        :rtype: List[VsDataContainerSingle]
        """
        return self._vs_data_container

    @vs_data_container.setter
    def vs_data_container(self, vs_data_container):
        """Sets the vs_data_container of this NrOperatorCellDuSingle.


        :param vs_data_container: The vs_data_container of this NrOperatorCellDuSingle.
        :type vs_data_container: List[VsDataContainerSingle]
        """

        self._vs_data_container = vs_data_container

    @property
    def cell_local_id(self):
        """Gets the cell_local_id of this NrOperatorCellDuSingle.


        :return: The cell_local_id of this NrOperatorCellDuSingle.
        :rtype: int
        """
        return self._cell_local_id

    @cell_local_id.setter
    def cell_local_id(self, cell_local_id):
        """Sets the cell_local_id of this NrOperatorCellDuSingle.


        :param cell_local_id: The cell_local_id of this NrOperatorCellDuSingle.
        :type cell_local_id: int
        """

        self._cell_local_id = cell_local_id

    @property
    def administrative_state(self):
        """Gets the administrative_state of this NrOperatorCellDuSingle.


        :return: The administrative_state of this NrOperatorCellDuSingle.
        :rtype: AdministrativeState
        """
        return self._administrative_state

    @administrative_state.setter
    def administrative_state(self, administrative_state):
        """Sets the administrative_state of this NrOperatorCellDuSingle.


        :param administrative_state: The administrative_state of this NrOperatorCellDuSingle.
        :type administrative_state: AdministrativeState
        """

        self._administrative_state = administrative_state

    @property
    def plmn_info_list(self):
        """Gets the plmn_info_list of this NrOperatorCellDuSingle.


        :return: The plmn_info_list of this NrOperatorCellDuSingle.
        :rtype: List[PlmnInfo]
        """
        return self._plmn_info_list

    @plmn_info_list.setter
    def plmn_info_list(self, plmn_info_list):
        """Sets the plmn_info_list of this NrOperatorCellDuSingle.


        :param plmn_info_list: The plmn_info_list of this NrOperatorCellDuSingle.
        :type plmn_info_list: List[PlmnInfo]
        """

        self._plmn_info_list = plmn_info_list

    @property
    def nr_tac(self):
        """Gets the nr_tac of this NrOperatorCellDuSingle.


        :return: The nr_tac of this NrOperatorCellDuSingle.
        :rtype: int
        """
        return self._nr_tac

    @nr_tac.setter
    def nr_tac(self, nr_tac):
        """Sets the nr_tac of this NrOperatorCellDuSingle.


        :param nr_tac: The nr_tac of this NrOperatorCellDuSingle.
        :type nr_tac: int
        """
        if nr_tac is not None and nr_tac > 16777215:  # noqa: E501
            raise ValueError("Invalid value for `nr_tac`, must be a value less than or equal to `16777215`")  # noqa: E501

        self._nr_tac = nr_tac
