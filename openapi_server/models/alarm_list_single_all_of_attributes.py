# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.administrative_state import AdministrativeState
from openapi_server.models.alarm_record import AlarmRecord
from openapi_server.models.operational_state import OperationalState
from openapi_server import util

from openapi_server.models.administrative_state import AdministrativeState  # noqa: E501
from openapi_server.models.alarm_record import AlarmRecord  # noqa: E501
from openapi_server.models.operational_state import OperationalState  # noqa: E501

class AlarmListSingleAllOfAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, administrative_state=None, operational_state=None, num_of_alarm_records=None, last_modification=None, alarm_records=None):  # noqa: E501
        """AlarmListSingleAllOfAttributes - a model defined in OpenAPI

        :param administrative_state: The administrative_state of this AlarmListSingleAllOfAttributes.  # noqa: E501
        :type administrative_state: AdministrativeState
        :param operational_state: The operational_state of this AlarmListSingleAllOfAttributes.  # noqa: E501
        :type operational_state: OperationalState
        :param num_of_alarm_records: The num_of_alarm_records of this AlarmListSingleAllOfAttributes.  # noqa: E501
        :type num_of_alarm_records: int
        :param last_modification: The last_modification of this AlarmListSingleAllOfAttributes.  # noqa: E501
        :type last_modification: datetime
        :param alarm_records: The alarm_records of this AlarmListSingleAllOfAttributes.  # noqa: E501
        :type alarm_records: Dict[str, AlarmRecord]
        """
        self.openapi_types = {
            'administrative_state': AdministrativeState,
            'operational_state': OperationalState,
            'num_of_alarm_records': int,
            'last_modification': datetime,
            'alarm_records': Dict[str, AlarmRecord]
        }

        self.attribute_map = {
            'administrative_state': 'administrativeState',
            'operational_state': 'operationalState',
            'num_of_alarm_records': 'numOfAlarmRecords',
            'last_modification': 'lastModification',
            'alarm_records': 'alarmRecords'
        }

        self._administrative_state = administrative_state
        self._operational_state = operational_state
        self._num_of_alarm_records = num_of_alarm_records
        self._last_modification = last_modification
        self._alarm_records = alarm_records

    @classmethod
    def from_dict(cls, dikt) -> 'AlarmListSingleAllOfAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AlarmList_Single_allOf_attributes of this AlarmListSingleAllOfAttributes.  # noqa: E501
        :rtype: AlarmListSingleAllOfAttributes
        """
        return util.deserialize_model(dikt, cls)

    @property
    def administrative_state(self):
        """Gets the administrative_state of this AlarmListSingleAllOfAttributes.


        :return: The administrative_state of this AlarmListSingleAllOfAttributes.
        :rtype: AdministrativeState
        """
        return self._administrative_state

    @administrative_state.setter
    def administrative_state(self, administrative_state):
        """Sets the administrative_state of this AlarmListSingleAllOfAttributes.


        :param administrative_state: The administrative_state of this AlarmListSingleAllOfAttributes.
        :type administrative_state: AdministrativeState
        """

        self._administrative_state = administrative_state

    @property
    def operational_state(self):
        """Gets the operational_state of this AlarmListSingleAllOfAttributes.


        :return: The operational_state of this AlarmListSingleAllOfAttributes.
        :rtype: OperationalState
        """
        return self._operational_state

    @operational_state.setter
    def operational_state(self, operational_state):
        """Sets the operational_state of this AlarmListSingleAllOfAttributes.


        :param operational_state: The operational_state of this AlarmListSingleAllOfAttributes.
        :type operational_state: OperationalState
        """

        self._operational_state = operational_state

    @property
    def num_of_alarm_records(self):
        """Gets the num_of_alarm_records of this AlarmListSingleAllOfAttributes.


        :return: The num_of_alarm_records of this AlarmListSingleAllOfAttributes.
        :rtype: int
        """
        return self._num_of_alarm_records

    @num_of_alarm_records.setter
    def num_of_alarm_records(self, num_of_alarm_records):
        """Sets the num_of_alarm_records of this AlarmListSingleAllOfAttributes.


        :param num_of_alarm_records: The num_of_alarm_records of this AlarmListSingleAllOfAttributes.
        :type num_of_alarm_records: int
        """

        self._num_of_alarm_records = num_of_alarm_records

    @property
    def last_modification(self):
        """Gets the last_modification of this AlarmListSingleAllOfAttributes.


        :return: The last_modification of this AlarmListSingleAllOfAttributes.
        :rtype: datetime
        """
        return self._last_modification

    @last_modification.setter
    def last_modification(self, last_modification):
        """Sets the last_modification of this AlarmListSingleAllOfAttributes.


        :param last_modification: The last_modification of this AlarmListSingleAllOfAttributes.
        :type last_modification: datetime
        """

        self._last_modification = last_modification

    @property
    def alarm_records(self):
        """Gets the alarm_records of this AlarmListSingleAllOfAttributes.

        This resource represents a map of alarm records. The alarmIds are used as keys in the map.  # noqa: E501

        :return: The alarm_records of this AlarmListSingleAllOfAttributes.
        :rtype: Dict[str, AlarmRecord]
        """
        return self._alarm_records

    @alarm_records.setter
    def alarm_records(self, alarm_records):
        """Sets the alarm_records of this AlarmListSingleAllOfAttributes.

        This resource represents a map of alarm records. The alarmIds are used as keys in the map.  # noqa: E501

        :param alarm_records: The alarm_records of this AlarmListSingleAllOfAttributes.
        :type alarm_records: Dict[str, AlarmRecord]
        """

        self._alarm_records = alarm_records
