# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.threshold_hysteresis import ThresholdHysteresis
from openapi_server import util

from openapi_server.models.threshold_hysteresis import ThresholdHysteresis  # noqa: E501

class ThresholdLevelIndOneOf1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, down=None):  # noqa: E501
        """ThresholdLevelIndOneOf1 - a model defined in OpenAPI

        :param down: The down of this ThresholdLevelIndOneOf1.  # noqa: E501
        :type down: ThresholdHysteresis
        """
        self.openapi_types = {
            'down': ThresholdHysteresis
        }

        self.attribute_map = {
            'down': 'down'
        }

        self._down = down

    @classmethod
    def from_dict(cls, dikt) -> 'ThresholdLevelIndOneOf1':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ThresholdLevelInd_oneOf_1 of this ThresholdLevelIndOneOf1.  # noqa: E501
        :rtype: ThresholdLevelIndOneOf1
        """
        return util.deserialize_model(dikt, cls)

    @property
    def down(self):
        """Gets the down of this ThresholdLevelIndOneOf1.


        :return: The down of this ThresholdLevelIndOneOf1.
        :rtype: ThresholdHysteresis
        """
        return self._down

    @down.setter
    def down(self, down):
        """Sets the down of this ThresholdLevelIndOneOf1.


        :param down: The down of this ThresholdLevelIndOneOf1.
        :type down: ThresholdHysteresis
        """

        self._down = down
