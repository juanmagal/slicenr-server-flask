# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.moi_change import MoiChange
from openapi_server import util

from openapi_server.models.moi_change import MoiChange  # noqa: E501

class NotifyMoiChangesAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, moi_changes=None):  # noqa: E501
        """NotifyMoiChangesAllOf - a model defined in OpenAPI

        :param moi_changes: The moi_changes of this NotifyMoiChangesAllOf.  # noqa: E501
        :type moi_changes: List[MoiChange]
        """
        self.openapi_types = {
            'moi_changes': List[MoiChange]
        }

        self.attribute_map = {
            'moi_changes': 'moiChanges'
        }

        self._moi_changes = moi_changes

    @classmethod
    def from_dict(cls, dikt) -> 'NotifyMoiChangesAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NotifyMoiChanges_allOf of this NotifyMoiChangesAllOf.  # noqa: E501
        :rtype: NotifyMoiChangesAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def moi_changes(self):
        """Gets the moi_changes of this NotifyMoiChangesAllOf.


        :return: The moi_changes of this NotifyMoiChangesAllOf.
        :rtype: List[MoiChange]
        """
        return self._moi_changes

    @moi_changes.setter
    def moi_changes(self, moi_changes):
        """Sets the moi_changes of this NotifyMoiChangesAllOf.


        :param moi_changes: The moi_changes of this NotifyMoiChangesAllOf.
        :type moi_changes: List[MoiChange]
        """
        if moi_changes is None:
            raise ValueError("Invalid value for `moi_changes`, must not be `None`")  # noqa: E501

        self._moi_changes = moi_changes
