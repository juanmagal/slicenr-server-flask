# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.ces_management_function_single import CESManagementFunctionSingle
from openapi_server.models.des_management_function_single import DESManagementFunctionSingle
from openapi_server.models.dlbo_function_single import DLBOFunctionSingle
from openapi_server.models.dmro_function_single import DMROFunctionSingle
from openapi_server.models.dpci_configuration_function_single import DPCIConfigurationFunctionSingle
from openapi_server.models.e_utran_cell_relation_single import EUtranCellRelationSingle
from openapi_server.models.e_utran_freq_relation_single import EUtranFreqRelationSingle
from openapi_server.models.managed_nf_service_single import ManagedNFServiceSingle
from openapi_server.models.nr_cell_relation_single import NRCellRelationSingle
from openapi_server.models.nr_freq_relation_single import NRFreqRelationSingle
from openapi_server.models.nr_cell_cu_single_all_of_attributes import NrCellCuSingleAllOfAttributes
from openapi_server.models.perf_metric_job_single import PerfMetricJobSingle
from openapi_server.models.rrm_policy_ratio_single import RRMPolicyRatioSingle
from openapi_server.models.threshold_monitor_single import ThresholdMonitorSingle
from openapi_server.models.trace_job_single import TraceJobSingle
from openapi_server.models.vs_data_container_single import VsDataContainerSingle
from openapi_server import util

from openapi_server.models.ces_management_function_single import CESManagementFunctionSingle  # noqa: E501
from openapi_server.models.des_management_function_single import DESManagementFunctionSingle  # noqa: E501
from openapi_server.models.dlbo_function_single import DLBOFunctionSingle  # noqa: E501
from openapi_server.models.dmro_function_single import DMROFunctionSingle  # noqa: E501
from openapi_server.models.dpci_configuration_function_single import DPCIConfigurationFunctionSingle  # noqa: E501
from openapi_server.models.e_utran_cell_relation_single import EUtranCellRelationSingle  # noqa: E501
from openapi_server.models.e_utran_freq_relation_single import EUtranFreqRelationSingle  # noqa: E501
from openapi_server.models.managed_nf_service_single import ManagedNFServiceSingle  # noqa: E501
from openapi_server.models.nr_cell_cu_single_all_of_attributes import NrCellCuSingleAllOfAttributes  # noqa: E501
from openapi_server.models.nr_cell_relation_single import NRCellRelationSingle  # noqa: E501
from openapi_server.models.nr_freq_relation_single import NRFreqRelationSingle  # noqa: E501
from openapi_server.models.perf_metric_job_single import PerfMetricJobSingle  # noqa: E501
from openapi_server.models.rrm_policy_ratio_single import RRMPolicyRatioSingle  # noqa: E501
from openapi_server.models.threshold_monitor_single import ThresholdMonitorSingle  # noqa: E501
from openapi_server.models.trace_job_single import TraceJobSingle  # noqa: E501
from openapi_server.models.vs_data_container_single import VsDataContainerSingle  # noqa: E501

class NrCellCuSingle(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, object_class=None, object_instance=None, vs_data_container=None, attributes=None, perf_metric_job=None, threshold_monitor=None, managed_nf_service=None, trace_job=None, rrm_policy_ratio=None, nr_cell_relation=None, e_utran_cell_relation=None, nr_freq_relation=None, e_utran_freq_relation=None, des_management_function=None, dmro_function=None, dlbo_function=None, ces_management_function=None, dpci_configuration_function=None):  # noqa: E501
        """NrCellCuSingle - a model defined in OpenAPI

        :param id: The id of this NrCellCuSingle.  # noqa: E501
        :type id: str
        :param object_class: The object_class of this NrCellCuSingle.  # noqa: E501
        :type object_class: str
        :param object_instance: The object_instance of this NrCellCuSingle.  # noqa: E501
        :type object_instance: str
        :param vs_data_container: The vs_data_container of this NrCellCuSingle.  # noqa: E501
        :type vs_data_container: List[VsDataContainerSingle]
        :param attributes: The attributes of this NrCellCuSingle.  # noqa: E501
        :type attributes: NrCellCuSingleAllOfAttributes
        :param perf_metric_job: The perf_metric_job of this NrCellCuSingle.  # noqa: E501
        :type perf_metric_job: List[PerfMetricJobSingle]
        :param threshold_monitor: The threshold_monitor of this NrCellCuSingle.  # noqa: E501
        :type threshold_monitor: List[ThresholdMonitorSingle]
        :param managed_nf_service: The managed_nf_service of this NrCellCuSingle.  # noqa: E501
        :type managed_nf_service: List[ManagedNFServiceSingle]
        :param trace_job: The trace_job of this NrCellCuSingle.  # noqa: E501
        :type trace_job: List[TraceJobSingle]
        :param rrm_policy_ratio: The rrm_policy_ratio of this NrCellCuSingle.  # noqa: E501
        :type rrm_policy_ratio: List[RRMPolicyRatioSingle]
        :param nr_cell_relation: The nr_cell_relation of this NrCellCuSingle.  # noqa: E501
        :type nr_cell_relation: List[NRCellRelationSingle]
        :param e_utran_cell_relation: The e_utran_cell_relation of this NrCellCuSingle.  # noqa: E501
        :type e_utran_cell_relation: List[EUtranCellRelationSingle]
        :param nr_freq_relation: The nr_freq_relation of this NrCellCuSingle.  # noqa: E501
        :type nr_freq_relation: List[NRFreqRelationSingle]
        :param e_utran_freq_relation: The e_utran_freq_relation of this NrCellCuSingle.  # noqa: E501
        :type e_utran_freq_relation: List[EUtranFreqRelationSingle]
        :param des_management_function: The des_management_function of this NrCellCuSingle.  # noqa: E501
        :type des_management_function: DESManagementFunctionSingle
        :param dmro_function: The dmro_function of this NrCellCuSingle.  # noqa: E501
        :type dmro_function: DMROFunctionSingle
        :param dlbo_function: The dlbo_function of this NrCellCuSingle.  # noqa: E501
        :type dlbo_function: DLBOFunctionSingle
        :param ces_management_function: The ces_management_function of this NrCellCuSingle.  # noqa: E501
        :type ces_management_function: CESManagementFunctionSingle
        :param dpci_configuration_function: The dpci_configuration_function of this NrCellCuSingle.  # noqa: E501
        :type dpci_configuration_function: DPCIConfigurationFunctionSingle
        """
        self.openapi_types = {
            'id': str,
            'object_class': str,
            'object_instance': str,
            'vs_data_container': List[VsDataContainerSingle],
            'attributes': NrCellCuSingleAllOfAttributes,
            'perf_metric_job': List[PerfMetricJobSingle],
            'threshold_monitor': List[ThresholdMonitorSingle],
            'managed_nf_service': List[ManagedNFServiceSingle],
            'trace_job': List[TraceJobSingle],
            'rrm_policy_ratio': List[RRMPolicyRatioSingle],
            'nr_cell_relation': List[NRCellRelationSingle],
            'e_utran_cell_relation': List[EUtranCellRelationSingle],
            'nr_freq_relation': List[NRFreqRelationSingle],
            'e_utran_freq_relation': List[EUtranFreqRelationSingle],
            'des_management_function': DESManagementFunctionSingle,
            'dmro_function': DMROFunctionSingle,
            'dlbo_function': DLBOFunctionSingle,
            'ces_management_function': CESManagementFunctionSingle,
            'dpci_configuration_function': DPCIConfigurationFunctionSingle
        }

        self.attribute_map = {
            'id': 'id',
            'object_class': 'objectClass',
            'object_instance': 'objectInstance',
            'vs_data_container': 'VsDataContainer',
            'attributes': 'attributes',
            'perf_metric_job': 'PerfMetricJob',
            'threshold_monitor': 'ThresholdMonitor',
            'managed_nf_service': 'ManagedNFService',
            'trace_job': 'TraceJob',
            'rrm_policy_ratio': 'RRMPolicyRatio',
            'nr_cell_relation': 'NRCellRelation',
            'e_utran_cell_relation': 'EUtranCellRelation',
            'nr_freq_relation': 'NRFreqRelation',
            'e_utran_freq_relation': 'EUtranFreqRelation',
            'des_management_function': 'DESManagementFunction',
            'dmro_function': 'DMROFunction',
            'dlbo_function': 'DLBOFunction',
            'ces_management_function': 'CESManagementFunction',
            'dpci_configuration_function': 'DPCIConfigurationFunction'
        }

        self._id = id
        self._object_class = object_class
        self._object_instance = object_instance
        self._vs_data_container = vs_data_container
        self._attributes = attributes
        self._perf_metric_job = perf_metric_job
        self._threshold_monitor = threshold_monitor
        self._managed_nf_service = managed_nf_service
        self._trace_job = trace_job
        self._rrm_policy_ratio = rrm_policy_ratio
        self._nr_cell_relation = nr_cell_relation
        self._e_utran_cell_relation = e_utran_cell_relation
        self._nr_freq_relation = nr_freq_relation
        self._e_utran_freq_relation = e_utran_freq_relation
        self._des_management_function = des_management_function
        self._dmro_function = dmro_function
        self._dlbo_function = dlbo_function
        self._ces_management_function = ces_management_function
        self._dpci_configuration_function = dpci_configuration_function

    @classmethod
    def from_dict(cls, dikt) -> 'NrCellCuSingle':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NrCellCu-Single of this NrCellCuSingle.  # noqa: E501
        :rtype: NrCellCuSingle
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this NrCellCuSingle.


        :return: The id of this NrCellCuSingle.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this NrCellCuSingle.


        :param id: The id of this NrCellCuSingle.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def object_class(self):
        """Gets the object_class of this NrCellCuSingle.


        :return: The object_class of this NrCellCuSingle.
        :rtype: str
        """
        return self._object_class

    @object_class.setter
    def object_class(self, object_class):
        """Sets the object_class of this NrCellCuSingle.


        :param object_class: The object_class of this NrCellCuSingle.
        :type object_class: str
        """

        self._object_class = object_class

    @property
    def object_instance(self):
        """Gets the object_instance of this NrCellCuSingle.


        :return: The object_instance of this NrCellCuSingle.
        :rtype: str
        """
        return self._object_instance

    @object_instance.setter
    def object_instance(self, object_instance):
        """Sets the object_instance of this NrCellCuSingle.


        :param object_instance: The object_instance of this NrCellCuSingle.
        :type object_instance: str
        """

        self._object_instance = object_instance

    @property
    def vs_data_container(self):
        """Gets the vs_data_container of this NrCellCuSingle.


        :return: The vs_data_container of this NrCellCuSingle.
        :rtype: List[VsDataContainerSingle]
        """
        return self._vs_data_container

    @vs_data_container.setter
    def vs_data_container(self, vs_data_container):
        """Sets the vs_data_container of this NrCellCuSingle.


        :param vs_data_container: The vs_data_container of this NrCellCuSingle.
        :type vs_data_container: List[VsDataContainerSingle]
        """

        self._vs_data_container = vs_data_container

    @property
    def attributes(self):
        """Gets the attributes of this NrCellCuSingle.


        :return: The attributes of this NrCellCuSingle.
        :rtype: NrCellCuSingleAllOfAttributes
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this NrCellCuSingle.


        :param attributes: The attributes of this NrCellCuSingle.
        :type attributes: NrCellCuSingleAllOfAttributes
        """

        self._attributes = attributes

    @property
    def perf_metric_job(self):
        """Gets the perf_metric_job of this NrCellCuSingle.


        :return: The perf_metric_job of this NrCellCuSingle.
        :rtype: List[PerfMetricJobSingle]
        """
        return self._perf_metric_job

    @perf_metric_job.setter
    def perf_metric_job(self, perf_metric_job):
        """Sets the perf_metric_job of this NrCellCuSingle.


        :param perf_metric_job: The perf_metric_job of this NrCellCuSingle.
        :type perf_metric_job: List[PerfMetricJobSingle]
        """

        self._perf_metric_job = perf_metric_job

    @property
    def threshold_monitor(self):
        """Gets the threshold_monitor of this NrCellCuSingle.


        :return: The threshold_monitor of this NrCellCuSingle.
        :rtype: List[ThresholdMonitorSingle]
        """
        return self._threshold_monitor

    @threshold_monitor.setter
    def threshold_monitor(self, threshold_monitor):
        """Sets the threshold_monitor of this NrCellCuSingle.


        :param threshold_monitor: The threshold_monitor of this NrCellCuSingle.
        :type threshold_monitor: List[ThresholdMonitorSingle]
        """

        self._threshold_monitor = threshold_monitor

    @property
    def managed_nf_service(self):
        """Gets the managed_nf_service of this NrCellCuSingle.


        :return: The managed_nf_service of this NrCellCuSingle.
        :rtype: List[ManagedNFServiceSingle]
        """
        return self._managed_nf_service

    @managed_nf_service.setter
    def managed_nf_service(self, managed_nf_service):
        """Sets the managed_nf_service of this NrCellCuSingle.


        :param managed_nf_service: The managed_nf_service of this NrCellCuSingle.
        :type managed_nf_service: List[ManagedNFServiceSingle]
        """

        self._managed_nf_service = managed_nf_service

    @property
    def trace_job(self):
        """Gets the trace_job of this NrCellCuSingle.


        :return: The trace_job of this NrCellCuSingle.
        :rtype: List[TraceJobSingle]
        """
        return self._trace_job

    @trace_job.setter
    def trace_job(self, trace_job):
        """Sets the trace_job of this NrCellCuSingle.


        :param trace_job: The trace_job of this NrCellCuSingle.
        :type trace_job: List[TraceJobSingle]
        """

        self._trace_job = trace_job

    @property
    def rrm_policy_ratio(self):
        """Gets the rrm_policy_ratio of this NrCellCuSingle.


        :return: The rrm_policy_ratio of this NrCellCuSingle.
        :rtype: List[RRMPolicyRatioSingle]
        """
        return self._rrm_policy_ratio

    @rrm_policy_ratio.setter
    def rrm_policy_ratio(self, rrm_policy_ratio):
        """Sets the rrm_policy_ratio of this NrCellCuSingle.


        :param rrm_policy_ratio: The rrm_policy_ratio of this NrCellCuSingle.
        :type rrm_policy_ratio: List[RRMPolicyRatioSingle]
        """

        self._rrm_policy_ratio = rrm_policy_ratio

    @property
    def nr_cell_relation(self):
        """Gets the nr_cell_relation of this NrCellCuSingle.


        :return: The nr_cell_relation of this NrCellCuSingle.
        :rtype: List[NRCellRelationSingle]
        """
        return self._nr_cell_relation

    @nr_cell_relation.setter
    def nr_cell_relation(self, nr_cell_relation):
        """Sets the nr_cell_relation of this NrCellCuSingle.


        :param nr_cell_relation: The nr_cell_relation of this NrCellCuSingle.
        :type nr_cell_relation: List[NRCellRelationSingle]
        """

        self._nr_cell_relation = nr_cell_relation

    @property
    def e_utran_cell_relation(self):
        """Gets the e_utran_cell_relation of this NrCellCuSingle.


        :return: The e_utran_cell_relation of this NrCellCuSingle.
        :rtype: List[EUtranCellRelationSingle]
        """
        return self._e_utran_cell_relation

    @e_utran_cell_relation.setter
    def e_utran_cell_relation(self, e_utran_cell_relation):
        """Sets the e_utran_cell_relation of this NrCellCuSingle.


        :param e_utran_cell_relation: The e_utran_cell_relation of this NrCellCuSingle.
        :type e_utran_cell_relation: List[EUtranCellRelationSingle]
        """

        self._e_utran_cell_relation = e_utran_cell_relation

    @property
    def nr_freq_relation(self):
        """Gets the nr_freq_relation of this NrCellCuSingle.


        :return: The nr_freq_relation of this NrCellCuSingle.
        :rtype: List[NRFreqRelationSingle]
        """
        return self._nr_freq_relation

    @nr_freq_relation.setter
    def nr_freq_relation(self, nr_freq_relation):
        """Sets the nr_freq_relation of this NrCellCuSingle.


        :param nr_freq_relation: The nr_freq_relation of this NrCellCuSingle.
        :type nr_freq_relation: List[NRFreqRelationSingle]
        """

        self._nr_freq_relation = nr_freq_relation

    @property
    def e_utran_freq_relation(self):
        """Gets the e_utran_freq_relation of this NrCellCuSingle.


        :return: The e_utran_freq_relation of this NrCellCuSingle.
        :rtype: List[EUtranFreqRelationSingle]
        """
        return self._e_utran_freq_relation

    @e_utran_freq_relation.setter
    def e_utran_freq_relation(self, e_utran_freq_relation):
        """Sets the e_utran_freq_relation of this NrCellCuSingle.


        :param e_utran_freq_relation: The e_utran_freq_relation of this NrCellCuSingle.
        :type e_utran_freq_relation: List[EUtranFreqRelationSingle]
        """

        self._e_utran_freq_relation = e_utran_freq_relation

    @property
    def des_management_function(self):
        """Gets the des_management_function of this NrCellCuSingle.


        :return: The des_management_function of this NrCellCuSingle.
        :rtype: DESManagementFunctionSingle
        """
        return self._des_management_function

    @des_management_function.setter
    def des_management_function(self, des_management_function):
        """Sets the des_management_function of this NrCellCuSingle.


        :param des_management_function: The des_management_function of this NrCellCuSingle.
        :type des_management_function: DESManagementFunctionSingle
        """

        self._des_management_function = des_management_function

    @property
    def dmro_function(self):
        """Gets the dmro_function of this NrCellCuSingle.


        :return: The dmro_function of this NrCellCuSingle.
        :rtype: DMROFunctionSingle
        """
        return self._dmro_function

    @dmro_function.setter
    def dmro_function(self, dmro_function):
        """Sets the dmro_function of this NrCellCuSingle.


        :param dmro_function: The dmro_function of this NrCellCuSingle.
        :type dmro_function: DMROFunctionSingle
        """

        self._dmro_function = dmro_function

    @property
    def dlbo_function(self):
        """Gets the dlbo_function of this NrCellCuSingle.


        :return: The dlbo_function of this NrCellCuSingle.
        :rtype: DLBOFunctionSingle
        """
        return self._dlbo_function

    @dlbo_function.setter
    def dlbo_function(self, dlbo_function):
        """Sets the dlbo_function of this NrCellCuSingle.


        :param dlbo_function: The dlbo_function of this NrCellCuSingle.
        :type dlbo_function: DLBOFunctionSingle
        """

        self._dlbo_function = dlbo_function

    @property
    def ces_management_function(self):
        """Gets the ces_management_function of this NrCellCuSingle.


        :return: The ces_management_function of this NrCellCuSingle.
        :rtype: CESManagementFunctionSingle
        """
        return self._ces_management_function

    @ces_management_function.setter
    def ces_management_function(self, ces_management_function):
        """Sets the ces_management_function of this NrCellCuSingle.


        :param ces_management_function: The ces_management_function of this NrCellCuSingle.
        :type ces_management_function: CESManagementFunctionSingle
        """

        self._ces_management_function = ces_management_function

    @property
    def dpci_configuration_function(self):
        """Gets the dpci_configuration_function of this NrCellCuSingle.


        :return: The dpci_configuration_function of this NrCellCuSingle.
        :rtype: DPCIConfigurationFunctionSingle
        """
        return self._dpci_configuration_function

    @dpci_configuration_function.setter
    def dpci_configuration_function(self, dpci_configuration_function):
        """Sets the dpci_configuration_function of this NrCellCuSingle.


        :param dpci_configuration_function: The dpci_configuration_function of this NrCellCuSingle.
        :type dpci_configuration_function: DPCIConfigurationFunctionSingle
        """

        self._dpci_configuration_function = dpci_configuration_function
