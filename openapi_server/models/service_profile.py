# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.delay_tolerance import DelayTolerance
from openapi_server.models.deterministic_comm import DeterministicComm
from openapi_server.models.energy_efficiency import EnergyEfficiency
from openapi_server.models.kpi_monitoring import KPIMonitoring
from openapi_server.models.max_numberof_pdu_sessions import MaxNumberofPDUSessions
from openapi_server.models.max_pkt_size import MaxPktSize
from openapi_server.models.mobility_level import MobilityLevel
from openapi_server.models.n6_protection import N6Protection
from openapi_server.models.nbio_t import NBIoT
from openapi_server.models.nssaa_support import NSSAASupport
from openapi_server.models.network_slice_sharing_indicator import NetworkSliceSharingIndicator
from openapi_server.models.plmn_info import PlmnInfo
from openapi_server.models.positioning import Positioning
from openapi_server.models.radio_spectrum import RadioSpectrum
from openapi_server.models.slice_simultaneous_use import SliceSimultaneousUse
from openapi_server.models.synchronicity import Synchronicity
from openapi_server.models.term_density import TermDensity
from openapi_server.models.user_mgmt_open import UserMgmtOpen
from openapi_server.models.v2_x_comm_models import V2XCommModels
from openapi_server.models.xl_thpt import XLThpt
from openapi_server import util

from openapi_server.models.delay_tolerance import DelayTolerance  # noqa: E501
from openapi_server.models.deterministic_comm import DeterministicComm  # noqa: E501
from openapi_server.models.energy_efficiency import EnergyEfficiency  # noqa: E501
from openapi_server.models.kpi_monitoring import KPIMonitoring  # noqa: E501
from openapi_server.models.max_numberof_pdu_sessions import MaxNumberofPDUSessions  # noqa: E501
from openapi_server.models.max_pkt_size import MaxPktSize  # noqa: E501
from openapi_server.models.mobility_level import MobilityLevel  # noqa: E501
from openapi_server.models.n6_protection import N6Protection  # noqa: E501
from openapi_server.models.nbio_t import NBIoT  # noqa: E501
from openapi_server.models.network_slice_sharing_indicator import NetworkSliceSharingIndicator  # noqa: E501
from openapi_server.models.nssaa_support import NSSAASupport  # noqa: E501
from openapi_server.models.plmn_info import PlmnInfo  # noqa: E501
from openapi_server.models.positioning import Positioning  # noqa: E501
from openapi_server.models.radio_spectrum import RadioSpectrum  # noqa: E501
from openapi_server.models.slice_simultaneous_use import SliceSimultaneousUse  # noqa: E501
from openapi_server.models.synchronicity import Synchronicity  # noqa: E501
from openapi_server.models.term_density import TermDensity  # noqa: E501
from openapi_server.models.user_mgmt_open import UserMgmtOpen  # noqa: E501
from openapi_server.models.v2_x_comm_models import V2XCommModels  # noqa: E501
from openapi_server.models.xl_thpt import XLThpt  # noqa: E501

class ServiceProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_profile_id=None, plmn_info_list=None, max_numberof_ues=None, d_l_latency=None, u_l_latency=None, u_e_mobility_level=None, sst=None, network_slice_sharing_indicator=None, availability=None, delay_tolerance=None, d_l_deterministic_comm=None, u_l_deterministic_comm=None, d_l_thpt_per_slice=None, d_l_thpt_per_ue=None, u_l_thpt_per_slice=None, u_l_thpt_per_ue=None, d_l_max_pkt_size=None, u_l_max_pkt_size=None, max_numberof_pdu_sessions=None, k_pi_monitoring=None, n_bio_t=None, radio_spectrum=None, synchronicity=None, positioning=None, user_mgmt_open=None, v2_x_comm_models=None, coverage_area=None, term_density=None, activity_factor=None, u_e_speed=None, jitter=None, survival_time=None, reliability=None, max_dl_data_volume=None, max_ul_data_volume=None, slice_simultaneous_use=None, energy_efficiency=None, nssaa_support=None, n6_protection=None):  # noqa: E501
        """ServiceProfile - a model defined in OpenAPI

        :param service_profile_id: The service_profile_id of this ServiceProfile.  # noqa: E501
        :type service_profile_id: str
        :param plmn_info_list: The plmn_info_list of this ServiceProfile.  # noqa: E501
        :type plmn_info_list: List[PlmnInfo]
        :param max_numberof_ues: The max_numberof_ues of this ServiceProfile.  # noqa: E501
        :type max_numberof_ues: float
        :param d_l_latency: The d_l_latency of this ServiceProfile.  # noqa: E501
        :type d_l_latency: float
        :param u_l_latency: The u_l_latency of this ServiceProfile.  # noqa: E501
        :type u_l_latency: float
        :param u_e_mobility_level: The u_e_mobility_level of this ServiceProfile.  # noqa: E501
        :type u_e_mobility_level: MobilityLevel
        :param sst: The sst of this ServiceProfile.  # noqa: E501
        :type sst: int
        :param network_slice_sharing_indicator: The network_slice_sharing_indicator of this ServiceProfile.  # noqa: E501
        :type network_slice_sharing_indicator: NetworkSliceSharingIndicator
        :param availability: The availability of this ServiceProfile.  # noqa: E501
        :type availability: float
        :param delay_tolerance: The delay_tolerance of this ServiceProfile.  # noqa: E501
        :type delay_tolerance: DelayTolerance
        :param d_l_deterministic_comm: The d_l_deterministic_comm of this ServiceProfile.  # noqa: E501
        :type d_l_deterministic_comm: DeterministicComm
        :param u_l_deterministic_comm: The u_l_deterministic_comm of this ServiceProfile.  # noqa: E501
        :type u_l_deterministic_comm: DeterministicComm
        :param d_l_thpt_per_slice: The d_l_thpt_per_slice of this ServiceProfile.  # noqa: E501
        :type d_l_thpt_per_slice: XLThpt
        :param d_l_thpt_per_ue: The d_l_thpt_per_ue of this ServiceProfile.  # noqa: E501
        :type d_l_thpt_per_ue: XLThpt
        :param u_l_thpt_per_slice: The u_l_thpt_per_slice of this ServiceProfile.  # noqa: E501
        :type u_l_thpt_per_slice: XLThpt
        :param u_l_thpt_per_ue: The u_l_thpt_per_ue of this ServiceProfile.  # noqa: E501
        :type u_l_thpt_per_ue: XLThpt
        :param d_l_max_pkt_size: The d_l_max_pkt_size of this ServiceProfile.  # noqa: E501
        :type d_l_max_pkt_size: MaxPktSize
        :param u_l_max_pkt_size: The u_l_max_pkt_size of this ServiceProfile.  # noqa: E501
        :type u_l_max_pkt_size: MaxPktSize
        :param max_numberof_pdu_sessions: The max_numberof_pdu_sessions of this ServiceProfile.  # noqa: E501
        :type max_numberof_pdu_sessions: MaxNumberofPDUSessions
        :param k_pi_monitoring: The k_pi_monitoring of this ServiceProfile.  # noqa: E501
        :type k_pi_monitoring: KPIMonitoring
        :param n_bio_t: The n_bio_t of this ServiceProfile.  # noqa: E501
        :type n_bio_t: NBIoT
        :param radio_spectrum: The radio_spectrum of this ServiceProfile.  # noqa: E501
        :type radio_spectrum: RadioSpectrum
        :param synchronicity: The synchronicity of this ServiceProfile.  # noqa: E501
        :type synchronicity: Synchronicity
        :param positioning: The positioning of this ServiceProfile.  # noqa: E501
        :type positioning: Positioning
        :param user_mgmt_open: The user_mgmt_open of this ServiceProfile.  # noqa: E501
        :type user_mgmt_open: UserMgmtOpen
        :param v2_x_comm_models: The v2_x_comm_models of this ServiceProfile.  # noqa: E501
        :type v2_x_comm_models: V2XCommModels
        :param coverage_area: The coverage_area of this ServiceProfile.  # noqa: E501
        :type coverage_area: str
        :param term_density: The term_density of this ServiceProfile.  # noqa: E501
        :type term_density: TermDensity
        :param activity_factor: The activity_factor of this ServiceProfile.  # noqa: E501
        :type activity_factor: float
        :param u_e_speed: The u_e_speed of this ServiceProfile.  # noqa: E501
        :type u_e_speed: int
        :param jitter: The jitter of this ServiceProfile.  # noqa: E501
        :type jitter: int
        :param survival_time: The survival_time of this ServiceProfile.  # noqa: E501
        :type survival_time: float
        :param reliability: The reliability of this ServiceProfile.  # noqa: E501
        :type reliability: float
        :param max_dl_data_volume: The max_dl_data_volume of this ServiceProfile.  # noqa: E501
        :type max_dl_data_volume: float
        :param max_ul_data_volume: The max_ul_data_volume of this ServiceProfile.  # noqa: E501
        :type max_ul_data_volume: float
        :param slice_simultaneous_use: The slice_simultaneous_use of this ServiceProfile.  # noqa: E501
        :type slice_simultaneous_use: SliceSimultaneousUse
        :param energy_efficiency: The energy_efficiency of this ServiceProfile.  # noqa: E501
        :type energy_efficiency: EnergyEfficiency
        :param nssaa_support: The nssaa_support of this ServiceProfile.  # noqa: E501
        :type nssaa_support: NSSAASupport
        :param n6_protection: The n6_protection of this ServiceProfile.  # noqa: E501
        :type n6_protection: N6Protection
        """
        self.openapi_types = {
            'service_profile_id': str,
            'plmn_info_list': List[PlmnInfo],
            'max_numberof_ues': float,
            'd_l_latency': float,
            'u_l_latency': float,
            'u_e_mobility_level': MobilityLevel,
            'sst': int,
            'network_slice_sharing_indicator': NetworkSliceSharingIndicator,
            'availability': float,
            'delay_tolerance': DelayTolerance,
            'd_l_deterministic_comm': DeterministicComm,
            'u_l_deterministic_comm': DeterministicComm,
            'd_l_thpt_per_slice': XLThpt,
            'd_l_thpt_per_ue': XLThpt,
            'u_l_thpt_per_slice': XLThpt,
            'u_l_thpt_per_ue': XLThpt,
            'd_l_max_pkt_size': MaxPktSize,
            'u_l_max_pkt_size': MaxPktSize,
            'max_numberof_pdu_sessions': MaxNumberofPDUSessions,
            'k_pi_monitoring': KPIMonitoring,
            'n_bio_t': NBIoT,
            'radio_spectrum': RadioSpectrum,
            'synchronicity': Synchronicity,
            'positioning': Positioning,
            'user_mgmt_open': UserMgmtOpen,
            'v2_x_comm_models': V2XCommModels,
            'coverage_area': str,
            'term_density': TermDensity,
            'activity_factor': float,
            'u_e_speed': int,
            'jitter': int,
            'survival_time': float,
            'reliability': float,
            'max_dl_data_volume': float,
            'max_ul_data_volume': float,
            'slice_simultaneous_use': SliceSimultaneousUse,
            'energy_efficiency': EnergyEfficiency,
            'nssaa_support': NSSAASupport,
            'n6_protection': N6Protection
        }

        self.attribute_map = {
            'service_profile_id': 'serviceProfileId',
            'plmn_info_list': 'plmnInfoList',
            'max_numberof_ues': 'maxNumberofUEs',
            'd_l_latency': 'dLLatency',
            'u_l_latency': 'uLLatency',
            'u_e_mobility_level': 'uEMobilityLevel',
            'sst': 'sst',
            'network_slice_sharing_indicator': 'networkSliceSharingIndicator',
            'availability': 'availability',
            'delay_tolerance': 'delayTolerance',
            'd_l_deterministic_comm': 'dLDeterministicComm',
            'u_l_deterministic_comm': 'uLDeterministicComm',
            'd_l_thpt_per_slice': 'dLThptPerSlice',
            'd_l_thpt_per_ue': 'dLThptPerUE',
            'u_l_thpt_per_slice': 'uLThptPerSlice',
            'u_l_thpt_per_ue': 'uLThptPerUE',
            'd_l_max_pkt_size': 'dLMaxPktSize',
            'u_l_max_pkt_size': 'uLMaxPktSize',
            'max_numberof_pdu_sessions': 'maxNumberofPDUSessions',
            'k_pi_monitoring': 'kPIMonitoring',
            'n_bio_t': 'nBIoT',
            'radio_spectrum': 'radioSpectrum',
            'synchronicity': 'synchronicity',
            'positioning': 'positioning',
            'user_mgmt_open': 'userMgmtOpen',
            'v2_x_comm_models': 'v2XCommModels',
            'coverage_area': 'coverageArea',
            'term_density': 'termDensity',
            'activity_factor': 'activityFactor',
            'u_e_speed': 'uESpeed',
            'jitter': 'jitter',
            'survival_time': 'survivalTime',
            'reliability': 'reliability',
            'max_dl_data_volume': 'maxDLDataVolume',
            'max_ul_data_volume': 'maxULDataVolume',
            'slice_simultaneous_use': 'sliceSimultaneousUse',
            'energy_efficiency': 'energyEfficiency',
            'nssaa_support': 'nssaaSupport',
            'n6_protection': 'n6Protection'
        }

        self._service_profile_id = service_profile_id
        self._plmn_info_list = plmn_info_list
        self._max_numberof_ues = max_numberof_ues
        self._d_l_latency = d_l_latency
        self._u_l_latency = u_l_latency
        self._u_e_mobility_level = u_e_mobility_level
        self._sst = sst
        self._network_slice_sharing_indicator = network_slice_sharing_indicator
        self._availability = availability
        self._delay_tolerance = delay_tolerance
        self._d_l_deterministic_comm = d_l_deterministic_comm
        self._u_l_deterministic_comm = u_l_deterministic_comm
        self._d_l_thpt_per_slice = d_l_thpt_per_slice
        self._d_l_thpt_per_ue = d_l_thpt_per_ue
        self._u_l_thpt_per_slice = u_l_thpt_per_slice
        self._u_l_thpt_per_ue = u_l_thpt_per_ue
        self._d_l_max_pkt_size = d_l_max_pkt_size
        self._u_l_max_pkt_size = u_l_max_pkt_size
        self._max_numberof_pdu_sessions = max_numberof_pdu_sessions
        self._k_pi_monitoring = k_pi_monitoring
        self._n_bio_t = n_bio_t
        self._radio_spectrum = radio_spectrum
        self._synchronicity = synchronicity
        self._positioning = positioning
        self._user_mgmt_open = user_mgmt_open
        self._v2_x_comm_models = v2_x_comm_models
        self._coverage_area = coverage_area
        self._term_density = term_density
        self._activity_factor = activity_factor
        self._u_e_speed = u_e_speed
        self._jitter = jitter
        self._survival_time = survival_time
        self._reliability = reliability
        self._max_dl_data_volume = max_dl_data_volume
        self._max_ul_data_volume = max_ul_data_volume
        self._slice_simultaneous_use = slice_simultaneous_use
        self._energy_efficiency = energy_efficiency
        self._nssaa_support = nssaa_support
        self._n6_protection = n6_protection

    @classmethod
    def from_dict(cls, dikt) -> 'ServiceProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ServiceProfile of this ServiceProfile.  # noqa: E501
        :rtype: ServiceProfile
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_profile_id(self):
        """Gets the service_profile_id of this ServiceProfile.


        :return: The service_profile_id of this ServiceProfile.
        :rtype: str
        """
        return self._service_profile_id

    @service_profile_id.setter
    def service_profile_id(self, service_profile_id):
        """Sets the service_profile_id of this ServiceProfile.


        :param service_profile_id: The service_profile_id of this ServiceProfile.
        :type service_profile_id: str
        """

        self._service_profile_id = service_profile_id

    @property
    def plmn_info_list(self):
        """Gets the plmn_info_list of this ServiceProfile.


        :return: The plmn_info_list of this ServiceProfile.
        :rtype: List[PlmnInfo]
        """
        return self._plmn_info_list

    @plmn_info_list.setter
    def plmn_info_list(self, plmn_info_list):
        """Sets the plmn_info_list of this ServiceProfile.


        :param plmn_info_list: The plmn_info_list of this ServiceProfile.
        :type plmn_info_list: List[PlmnInfo]
        """

        self._plmn_info_list = plmn_info_list

    @property
    def max_numberof_ues(self):
        """Gets the max_numberof_ues of this ServiceProfile.


        :return: The max_numberof_ues of this ServiceProfile.
        :rtype: float
        """
        return self._max_numberof_ues

    @max_numberof_ues.setter
    def max_numberof_ues(self, max_numberof_ues):
        """Sets the max_numberof_ues of this ServiceProfile.


        :param max_numberof_ues: The max_numberof_ues of this ServiceProfile.
        :type max_numberof_ues: float
        """

        self._max_numberof_ues = max_numberof_ues

    @property
    def d_l_latency(self):
        """Gets the d_l_latency of this ServiceProfile.


        :return: The d_l_latency of this ServiceProfile.
        :rtype: float
        """
        return self._d_l_latency

    @d_l_latency.setter
    def d_l_latency(self, d_l_latency):
        """Sets the d_l_latency of this ServiceProfile.


        :param d_l_latency: The d_l_latency of this ServiceProfile.
        :type d_l_latency: float
        """

        self._d_l_latency = d_l_latency

    @property
    def u_l_latency(self):
        """Gets the u_l_latency of this ServiceProfile.


        :return: The u_l_latency of this ServiceProfile.
        :rtype: float
        """
        return self._u_l_latency

    @u_l_latency.setter
    def u_l_latency(self, u_l_latency):
        """Sets the u_l_latency of this ServiceProfile.


        :param u_l_latency: The u_l_latency of this ServiceProfile.
        :type u_l_latency: float
        """

        self._u_l_latency = u_l_latency

    @property
    def u_e_mobility_level(self):
        """Gets the u_e_mobility_level of this ServiceProfile.


        :return: The u_e_mobility_level of this ServiceProfile.
        :rtype: MobilityLevel
        """
        return self._u_e_mobility_level

    @u_e_mobility_level.setter
    def u_e_mobility_level(self, u_e_mobility_level):
        """Sets the u_e_mobility_level of this ServiceProfile.


        :param u_e_mobility_level: The u_e_mobility_level of this ServiceProfile.
        :type u_e_mobility_level: MobilityLevel
        """

        self._u_e_mobility_level = u_e_mobility_level

    @property
    def sst(self):
        """Gets the sst of this ServiceProfile.


        :return: The sst of this ServiceProfile.
        :rtype: int
        """
        return self._sst

    @sst.setter
    def sst(self, sst):
        """Sets the sst of this ServiceProfile.


        :param sst: The sst of this ServiceProfile.
        :type sst: int
        """
        if sst is not None and sst > 255:  # noqa: E501
            raise ValueError("Invalid value for `sst`, must be a value less than or equal to `255`")  # noqa: E501

        self._sst = sst

    @property
    def network_slice_sharing_indicator(self):
        """Gets the network_slice_sharing_indicator of this ServiceProfile.


        :return: The network_slice_sharing_indicator of this ServiceProfile.
        :rtype: NetworkSliceSharingIndicator
        """
        return self._network_slice_sharing_indicator

    @network_slice_sharing_indicator.setter
    def network_slice_sharing_indicator(self, network_slice_sharing_indicator):
        """Sets the network_slice_sharing_indicator of this ServiceProfile.


        :param network_slice_sharing_indicator: The network_slice_sharing_indicator of this ServiceProfile.
        :type network_slice_sharing_indicator: NetworkSliceSharingIndicator
        """

        self._network_slice_sharing_indicator = network_slice_sharing_indicator

    @property
    def availability(self):
        """Gets the availability of this ServiceProfile.


        :return: The availability of this ServiceProfile.
        :rtype: float
        """
        return self._availability

    @availability.setter
    def availability(self, availability):
        """Sets the availability of this ServiceProfile.


        :param availability: The availability of this ServiceProfile.
        :type availability: float
        """

        self._availability = availability

    @property
    def delay_tolerance(self):
        """Gets the delay_tolerance of this ServiceProfile.


        :return: The delay_tolerance of this ServiceProfile.
        :rtype: DelayTolerance
        """
        return self._delay_tolerance

    @delay_tolerance.setter
    def delay_tolerance(self, delay_tolerance):
        """Sets the delay_tolerance of this ServiceProfile.


        :param delay_tolerance: The delay_tolerance of this ServiceProfile.
        :type delay_tolerance: DelayTolerance
        """

        self._delay_tolerance = delay_tolerance

    @property
    def d_l_deterministic_comm(self):
        """Gets the d_l_deterministic_comm of this ServiceProfile.


        :return: The d_l_deterministic_comm of this ServiceProfile.
        :rtype: DeterministicComm
        """
        return self._d_l_deterministic_comm

    @d_l_deterministic_comm.setter
    def d_l_deterministic_comm(self, d_l_deterministic_comm):
        """Sets the d_l_deterministic_comm of this ServiceProfile.


        :param d_l_deterministic_comm: The d_l_deterministic_comm of this ServiceProfile.
        :type d_l_deterministic_comm: DeterministicComm
        """

        self._d_l_deterministic_comm = d_l_deterministic_comm

    @property
    def u_l_deterministic_comm(self):
        """Gets the u_l_deterministic_comm of this ServiceProfile.


        :return: The u_l_deterministic_comm of this ServiceProfile.
        :rtype: DeterministicComm
        """
        return self._u_l_deterministic_comm

    @u_l_deterministic_comm.setter
    def u_l_deterministic_comm(self, u_l_deterministic_comm):
        """Sets the u_l_deterministic_comm of this ServiceProfile.


        :param u_l_deterministic_comm: The u_l_deterministic_comm of this ServiceProfile.
        :type u_l_deterministic_comm: DeterministicComm
        """

        self._u_l_deterministic_comm = u_l_deterministic_comm

    @property
    def d_l_thpt_per_slice(self):
        """Gets the d_l_thpt_per_slice of this ServiceProfile.


        :return: The d_l_thpt_per_slice of this ServiceProfile.
        :rtype: XLThpt
        """
        return self._d_l_thpt_per_slice

    @d_l_thpt_per_slice.setter
    def d_l_thpt_per_slice(self, d_l_thpt_per_slice):
        """Sets the d_l_thpt_per_slice of this ServiceProfile.


        :param d_l_thpt_per_slice: The d_l_thpt_per_slice of this ServiceProfile.
        :type d_l_thpt_per_slice: XLThpt
        """

        self._d_l_thpt_per_slice = d_l_thpt_per_slice

    @property
    def d_l_thpt_per_ue(self):
        """Gets the d_l_thpt_per_ue of this ServiceProfile.


        :return: The d_l_thpt_per_ue of this ServiceProfile.
        :rtype: XLThpt
        """
        return self._d_l_thpt_per_ue

    @d_l_thpt_per_ue.setter
    def d_l_thpt_per_ue(self, d_l_thpt_per_ue):
        """Sets the d_l_thpt_per_ue of this ServiceProfile.


        :param d_l_thpt_per_ue: The d_l_thpt_per_ue of this ServiceProfile.
        :type d_l_thpt_per_ue: XLThpt
        """

        self._d_l_thpt_per_ue = d_l_thpt_per_ue

    @property
    def u_l_thpt_per_slice(self):
        """Gets the u_l_thpt_per_slice of this ServiceProfile.


        :return: The u_l_thpt_per_slice of this ServiceProfile.
        :rtype: XLThpt
        """
        return self._u_l_thpt_per_slice

    @u_l_thpt_per_slice.setter
    def u_l_thpt_per_slice(self, u_l_thpt_per_slice):
        """Sets the u_l_thpt_per_slice of this ServiceProfile.


        :param u_l_thpt_per_slice: The u_l_thpt_per_slice of this ServiceProfile.
        :type u_l_thpt_per_slice: XLThpt
        """

        self._u_l_thpt_per_slice = u_l_thpt_per_slice

    @property
    def u_l_thpt_per_ue(self):
        """Gets the u_l_thpt_per_ue of this ServiceProfile.


        :return: The u_l_thpt_per_ue of this ServiceProfile.
        :rtype: XLThpt
        """
        return self._u_l_thpt_per_ue

    @u_l_thpt_per_ue.setter
    def u_l_thpt_per_ue(self, u_l_thpt_per_ue):
        """Sets the u_l_thpt_per_ue of this ServiceProfile.


        :param u_l_thpt_per_ue: The u_l_thpt_per_ue of this ServiceProfile.
        :type u_l_thpt_per_ue: XLThpt
        """

        self._u_l_thpt_per_ue = u_l_thpt_per_ue

    @property
    def d_l_max_pkt_size(self):
        """Gets the d_l_max_pkt_size of this ServiceProfile.


        :return: The d_l_max_pkt_size of this ServiceProfile.
        :rtype: MaxPktSize
        """
        return self._d_l_max_pkt_size

    @d_l_max_pkt_size.setter
    def d_l_max_pkt_size(self, d_l_max_pkt_size):
        """Sets the d_l_max_pkt_size of this ServiceProfile.


        :param d_l_max_pkt_size: The d_l_max_pkt_size of this ServiceProfile.
        :type d_l_max_pkt_size: MaxPktSize
        """

        self._d_l_max_pkt_size = d_l_max_pkt_size

    @property
    def u_l_max_pkt_size(self):
        """Gets the u_l_max_pkt_size of this ServiceProfile.


        :return: The u_l_max_pkt_size of this ServiceProfile.
        :rtype: MaxPktSize
        """
        return self._u_l_max_pkt_size

    @u_l_max_pkt_size.setter
    def u_l_max_pkt_size(self, u_l_max_pkt_size):
        """Sets the u_l_max_pkt_size of this ServiceProfile.


        :param u_l_max_pkt_size: The u_l_max_pkt_size of this ServiceProfile.
        :type u_l_max_pkt_size: MaxPktSize
        """

        self._u_l_max_pkt_size = u_l_max_pkt_size

    @property
    def max_numberof_pdu_sessions(self):
        """Gets the max_numberof_pdu_sessions of this ServiceProfile.


        :return: The max_numberof_pdu_sessions of this ServiceProfile.
        :rtype: MaxNumberofPDUSessions
        """
        return self._max_numberof_pdu_sessions

    @max_numberof_pdu_sessions.setter
    def max_numberof_pdu_sessions(self, max_numberof_pdu_sessions):
        """Sets the max_numberof_pdu_sessions of this ServiceProfile.


        :param max_numberof_pdu_sessions: The max_numberof_pdu_sessions of this ServiceProfile.
        :type max_numberof_pdu_sessions: MaxNumberofPDUSessions
        """

        self._max_numberof_pdu_sessions = max_numberof_pdu_sessions

    @property
    def k_pi_monitoring(self):
        """Gets the k_pi_monitoring of this ServiceProfile.


        :return: The k_pi_monitoring of this ServiceProfile.
        :rtype: KPIMonitoring
        """
        return self._k_pi_monitoring

    @k_pi_monitoring.setter
    def k_pi_monitoring(self, k_pi_monitoring):
        """Sets the k_pi_monitoring of this ServiceProfile.


        :param k_pi_monitoring: The k_pi_monitoring of this ServiceProfile.
        :type k_pi_monitoring: KPIMonitoring
        """

        self._k_pi_monitoring = k_pi_monitoring

    @property
    def n_bio_t(self):
        """Gets the n_bio_t of this ServiceProfile.


        :return: The n_bio_t of this ServiceProfile.
        :rtype: NBIoT
        """
        return self._n_bio_t

    @n_bio_t.setter
    def n_bio_t(self, n_bio_t):
        """Sets the n_bio_t of this ServiceProfile.


        :param n_bio_t: The n_bio_t of this ServiceProfile.
        :type n_bio_t: NBIoT
        """

        self._n_bio_t = n_bio_t

    @property
    def radio_spectrum(self):
        """Gets the radio_spectrum of this ServiceProfile.


        :return: The radio_spectrum of this ServiceProfile.
        :rtype: RadioSpectrum
        """
        return self._radio_spectrum

    @radio_spectrum.setter
    def radio_spectrum(self, radio_spectrum):
        """Sets the radio_spectrum of this ServiceProfile.


        :param radio_spectrum: The radio_spectrum of this ServiceProfile.
        :type radio_spectrum: RadioSpectrum
        """

        self._radio_spectrum = radio_spectrum

    @property
    def synchronicity(self):
        """Gets the synchronicity of this ServiceProfile.


        :return: The synchronicity of this ServiceProfile.
        :rtype: Synchronicity
        """
        return self._synchronicity

    @synchronicity.setter
    def synchronicity(self, synchronicity):
        """Sets the synchronicity of this ServiceProfile.


        :param synchronicity: The synchronicity of this ServiceProfile.
        :type synchronicity: Synchronicity
        """

        self._synchronicity = synchronicity

    @property
    def positioning(self):
        """Gets the positioning of this ServiceProfile.


        :return: The positioning of this ServiceProfile.
        :rtype: Positioning
        """
        return self._positioning

    @positioning.setter
    def positioning(self, positioning):
        """Sets the positioning of this ServiceProfile.


        :param positioning: The positioning of this ServiceProfile.
        :type positioning: Positioning
        """

        self._positioning = positioning

    @property
    def user_mgmt_open(self):
        """Gets the user_mgmt_open of this ServiceProfile.


        :return: The user_mgmt_open of this ServiceProfile.
        :rtype: UserMgmtOpen
        """
        return self._user_mgmt_open

    @user_mgmt_open.setter
    def user_mgmt_open(self, user_mgmt_open):
        """Sets the user_mgmt_open of this ServiceProfile.


        :param user_mgmt_open: The user_mgmt_open of this ServiceProfile.
        :type user_mgmt_open: UserMgmtOpen
        """

        self._user_mgmt_open = user_mgmt_open

    @property
    def v2_x_comm_models(self):
        """Gets the v2_x_comm_models of this ServiceProfile.


        :return: The v2_x_comm_models of this ServiceProfile.
        :rtype: V2XCommModels
        """
        return self._v2_x_comm_models

    @v2_x_comm_models.setter
    def v2_x_comm_models(self, v2_x_comm_models):
        """Sets the v2_x_comm_models of this ServiceProfile.


        :param v2_x_comm_models: The v2_x_comm_models of this ServiceProfile.
        :type v2_x_comm_models: V2XCommModels
        """

        self._v2_x_comm_models = v2_x_comm_models

    @property
    def coverage_area(self):
        """Gets the coverage_area of this ServiceProfile.


        :return: The coverage_area of this ServiceProfile.
        :rtype: str
        """
        return self._coverage_area

    @coverage_area.setter
    def coverage_area(self, coverage_area):
        """Sets the coverage_area of this ServiceProfile.


        :param coverage_area: The coverage_area of this ServiceProfile.
        :type coverage_area: str
        """

        self._coverage_area = coverage_area

    @property
    def term_density(self):
        """Gets the term_density of this ServiceProfile.


        :return: The term_density of this ServiceProfile.
        :rtype: TermDensity
        """
        return self._term_density

    @term_density.setter
    def term_density(self, term_density):
        """Sets the term_density of this ServiceProfile.


        :param term_density: The term_density of this ServiceProfile.
        :type term_density: TermDensity
        """

        self._term_density = term_density

    @property
    def activity_factor(self):
        """Gets the activity_factor of this ServiceProfile.


        :return: The activity_factor of this ServiceProfile.
        :rtype: float
        """
        return self._activity_factor

    @activity_factor.setter
    def activity_factor(self, activity_factor):
        """Sets the activity_factor of this ServiceProfile.


        :param activity_factor: The activity_factor of this ServiceProfile.
        :type activity_factor: float
        """

        self._activity_factor = activity_factor

    @property
    def u_e_speed(self):
        """Gets the u_e_speed of this ServiceProfile.


        :return: The u_e_speed of this ServiceProfile.
        :rtype: int
        """
        return self._u_e_speed

    @u_e_speed.setter
    def u_e_speed(self, u_e_speed):
        """Sets the u_e_speed of this ServiceProfile.


        :param u_e_speed: The u_e_speed of this ServiceProfile.
        :type u_e_speed: int
        """

        self._u_e_speed = u_e_speed

    @property
    def jitter(self):
        """Gets the jitter of this ServiceProfile.


        :return: The jitter of this ServiceProfile.
        :rtype: int
        """
        return self._jitter

    @jitter.setter
    def jitter(self, jitter):
        """Sets the jitter of this ServiceProfile.


        :param jitter: The jitter of this ServiceProfile.
        :type jitter: int
        """

        self._jitter = jitter

    @property
    def survival_time(self):
        """Gets the survival_time of this ServiceProfile.


        :return: The survival_time of this ServiceProfile.
        :rtype: float
        """
        return self._survival_time

    @survival_time.setter
    def survival_time(self, survival_time):
        """Sets the survival_time of this ServiceProfile.


        :param survival_time: The survival_time of this ServiceProfile.
        :type survival_time: float
        """

        self._survival_time = survival_time

    @property
    def reliability(self):
        """Gets the reliability of this ServiceProfile.


        :return: The reliability of this ServiceProfile.
        :rtype: float
        """
        return self._reliability

    @reliability.setter
    def reliability(self, reliability):
        """Sets the reliability of this ServiceProfile.


        :param reliability: The reliability of this ServiceProfile.
        :type reliability: float
        """

        self._reliability = reliability

    @property
    def max_dl_data_volume(self):
        """Gets the max_dl_data_volume of this ServiceProfile.


        :return: The max_dl_data_volume of this ServiceProfile.
        :rtype: float
        """
        return self._max_dl_data_volume

    @max_dl_data_volume.setter
    def max_dl_data_volume(self, max_dl_data_volume):
        """Sets the max_dl_data_volume of this ServiceProfile.


        :param max_dl_data_volume: The max_dl_data_volume of this ServiceProfile.
        :type max_dl_data_volume: float
        """

        self._max_dl_data_volume = max_dl_data_volume

    @property
    def max_ul_data_volume(self):
        """Gets the max_ul_data_volume of this ServiceProfile.


        :return: The max_ul_data_volume of this ServiceProfile.
        :rtype: float
        """
        return self._max_ul_data_volume

    @max_ul_data_volume.setter
    def max_ul_data_volume(self, max_ul_data_volume):
        """Sets the max_ul_data_volume of this ServiceProfile.


        :param max_ul_data_volume: The max_ul_data_volume of this ServiceProfile.
        :type max_ul_data_volume: float
        """

        self._max_ul_data_volume = max_ul_data_volume

    @property
    def slice_simultaneous_use(self):
        """Gets the slice_simultaneous_use of this ServiceProfile.


        :return: The slice_simultaneous_use of this ServiceProfile.
        :rtype: SliceSimultaneousUse
        """
        return self._slice_simultaneous_use

    @slice_simultaneous_use.setter
    def slice_simultaneous_use(self, slice_simultaneous_use):
        """Sets the slice_simultaneous_use of this ServiceProfile.


        :param slice_simultaneous_use: The slice_simultaneous_use of this ServiceProfile.
        :type slice_simultaneous_use: SliceSimultaneousUse
        """

        self._slice_simultaneous_use = slice_simultaneous_use

    @property
    def energy_efficiency(self):
        """Gets the energy_efficiency of this ServiceProfile.


        :return: The energy_efficiency of this ServiceProfile.
        :rtype: EnergyEfficiency
        """
        return self._energy_efficiency

    @energy_efficiency.setter
    def energy_efficiency(self, energy_efficiency):
        """Sets the energy_efficiency of this ServiceProfile.


        :param energy_efficiency: The energy_efficiency of this ServiceProfile.
        :type energy_efficiency: EnergyEfficiency
        """

        self._energy_efficiency = energy_efficiency

    @property
    def nssaa_support(self):
        """Gets the nssaa_support of this ServiceProfile.


        :return: The nssaa_support of this ServiceProfile.
        :rtype: NSSAASupport
        """
        return self._nssaa_support

    @nssaa_support.setter
    def nssaa_support(self, nssaa_support):
        """Sets the nssaa_support of this ServiceProfile.


        :param nssaa_support: The nssaa_support of this ServiceProfile.
        :type nssaa_support: NSSAASupport
        """

        self._nssaa_support = nssaa_support

    @property
    def n6_protection(self):
        """Gets the n6_protection of this ServiceProfile.


        :return: The n6_protection of this ServiceProfile.
        :rtype: N6Protection
        """
        return self._n6_protection

    @n6_protection.setter
    def n6_protection(self, n6_protection):
        """Sets the n6_protection of this ServiceProfile.


        :param n6_protection: The n6_protection of this ServiceProfile.
        :type n6_protection: N6Protection
        """

        self._n6_protection = n6_protection
