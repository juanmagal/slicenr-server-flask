# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class ExternalGnbDuFunctionSingleAllOfAttributesAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gnb_id=None, gnb_id_length=None):  # noqa: E501
        """ExternalGnbDuFunctionSingleAllOfAttributesAllOf - a model defined in OpenAPI

        :param gnb_id: The gnb_id of this ExternalGnbDuFunctionSingleAllOfAttributesAllOf.  # noqa: E501
        :type gnb_id: str
        :param gnb_id_length: The gnb_id_length of this ExternalGnbDuFunctionSingleAllOfAttributesAllOf.  # noqa: E501
        :type gnb_id_length: int
        """
        self.openapi_types = {
            'gnb_id': str,
            'gnb_id_length': int
        }

        self.attribute_map = {
            'gnb_id': 'gnbId',
            'gnb_id_length': 'gnbIdLength'
        }

        self._gnb_id = gnb_id
        self._gnb_id_length = gnb_id_length

    @classmethod
    def from_dict(cls, dikt) -> 'ExternalGnbDuFunctionSingleAllOfAttributesAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ExternalGnbDuFunction_Single_allOf_attributes_allOf of this ExternalGnbDuFunctionSingleAllOfAttributesAllOf.  # noqa: E501
        :rtype: ExternalGnbDuFunctionSingleAllOfAttributesAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gnb_id(self):
        """Gets the gnb_id of this ExternalGnbDuFunctionSingleAllOfAttributesAllOf.


        :return: The gnb_id of this ExternalGnbDuFunctionSingleAllOfAttributesAllOf.
        :rtype: str
        """
        return self._gnb_id

    @gnb_id.setter
    def gnb_id(self, gnb_id):
        """Sets the gnb_id of this ExternalGnbDuFunctionSingleAllOfAttributesAllOf.


        :param gnb_id: The gnb_id of this ExternalGnbDuFunctionSingleAllOfAttributesAllOf.
        :type gnb_id: str
        """

        self._gnb_id = gnb_id

    @property
    def gnb_id_length(self):
        """Gets the gnb_id_length of this ExternalGnbDuFunctionSingleAllOfAttributesAllOf.


        :return: The gnb_id_length of this ExternalGnbDuFunctionSingleAllOfAttributesAllOf.
        :rtype: int
        """
        return self._gnb_id_length

    @gnb_id_length.setter
    def gnb_id_length(self, gnb_id_length):
        """Sets the gnb_id_length of this ExternalGnbDuFunctionSingleAllOfAttributesAllOf.


        :param gnb_id_length: The gnb_id_length of this ExternalGnbDuFunctionSingleAllOfAttributesAllOf.
        :type gnb_id_length: int
        """
        if gnb_id_length is not None and gnb_id_length > 32:  # noqa: E501
            raise ValueError("Invalid value for `gnb_id_length`, must be a value less than or equal to `32`")  # noqa: E501
        if gnb_id_length is not None and gnb_id_length < 22:  # noqa: E501
            raise ValueError("Invalid value for `gnb_id_length`, must be a value greater than or equal to `22`")  # noqa: E501

        self._gnb_id_length = gnb_id_length
