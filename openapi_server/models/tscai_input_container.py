# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class TscaiInputContainer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, periodicity=None, burst_arrival_time=None, sur_time_in_num_msg=None, sur_time_in_time=None):  # noqa: E501
        """TscaiInputContainer - a model defined in OpenAPI

        :param periodicity: The periodicity of this TscaiInputContainer.  # noqa: E501
        :type periodicity: int
        :param burst_arrival_time: The burst_arrival_time of this TscaiInputContainer.  # noqa: E501
        :type burst_arrival_time: datetime
        :param sur_time_in_num_msg: The sur_time_in_num_msg of this TscaiInputContainer.  # noqa: E501
        :type sur_time_in_num_msg: int
        :param sur_time_in_time: The sur_time_in_time of this TscaiInputContainer.  # noqa: E501
        :type sur_time_in_time: int
        """
        self.openapi_types = {
            'periodicity': int,
            'burst_arrival_time': datetime,
            'sur_time_in_num_msg': int,
            'sur_time_in_time': int
        }

        self.attribute_map = {
            'periodicity': 'periodicity',
            'burst_arrival_time': 'burstArrivalTime',
            'sur_time_in_num_msg': 'surTimeInNumMsg',
            'sur_time_in_time': 'surTimeInTime'
        }

        self._periodicity = periodicity
        self._burst_arrival_time = burst_arrival_time
        self._sur_time_in_num_msg = sur_time_in_num_msg
        self._sur_time_in_time = sur_time_in_time

    @classmethod
    def from_dict(cls, dikt) -> 'TscaiInputContainer':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TscaiInputContainer of this TscaiInputContainer.  # noqa: E501
        :rtype: TscaiInputContainer
        """
        return util.deserialize_model(dikt, cls)

    @property
    def periodicity(self):
        """Gets the periodicity of this TscaiInputContainer.

        Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.  # noqa: E501

        :return: The periodicity of this TscaiInputContainer.
        :rtype: int
        """
        return self._periodicity

    @periodicity.setter
    def periodicity(self, periodicity):
        """Sets the periodicity of this TscaiInputContainer.

        Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.  # noqa: E501

        :param periodicity: The periodicity of this TscaiInputContainer.
        :type periodicity: int
        """
        if periodicity is not None and periodicity < 0:  # noqa: E501
            raise ValueError("Invalid value for `periodicity`, must be a value greater than or equal to `0`")  # noqa: E501

        self._periodicity = periodicity

    @property
    def burst_arrival_time(self):
        """Gets the burst_arrival_time of this TscaiInputContainer.

        string with format 'date-time' as defined in OpenAPI.  # noqa: E501

        :return: The burst_arrival_time of this TscaiInputContainer.
        :rtype: datetime
        """
        return self._burst_arrival_time

    @burst_arrival_time.setter
    def burst_arrival_time(self, burst_arrival_time):
        """Sets the burst_arrival_time of this TscaiInputContainer.

        string with format 'date-time' as defined in OpenAPI.  # noqa: E501

        :param burst_arrival_time: The burst_arrival_time of this TscaiInputContainer.
        :type burst_arrival_time: datetime
        """

        self._burst_arrival_time = burst_arrival_time

    @property
    def sur_time_in_num_msg(self):
        """Gets the sur_time_in_num_msg of this TscaiInputContainer.

        Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.  # noqa: E501

        :return: The sur_time_in_num_msg of this TscaiInputContainer.
        :rtype: int
        """
        return self._sur_time_in_num_msg

    @sur_time_in_num_msg.setter
    def sur_time_in_num_msg(self, sur_time_in_num_msg):
        """Sets the sur_time_in_num_msg of this TscaiInputContainer.

        Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.  # noqa: E501

        :param sur_time_in_num_msg: The sur_time_in_num_msg of this TscaiInputContainer.
        :type sur_time_in_num_msg: int
        """
        if sur_time_in_num_msg is not None and sur_time_in_num_msg < 0:  # noqa: E501
            raise ValueError("Invalid value for `sur_time_in_num_msg`, must be a value greater than or equal to `0`")  # noqa: E501

        self._sur_time_in_num_msg = sur_time_in_num_msg

    @property
    def sur_time_in_time(self):
        """Gets the sur_time_in_time of this TscaiInputContainer.

        Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.  # noqa: E501

        :return: The sur_time_in_time of this TscaiInputContainer.
        :rtype: int
        """
        return self._sur_time_in_time

    @sur_time_in_time.setter
    def sur_time_in_time(self, sur_time_in_time):
        """Sets the sur_time_in_time of this TscaiInputContainer.

        Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.  # noqa: E501

        :param sur_time_in_time: The sur_time_in_time of this TscaiInputContainer.
        :type sur_time_in_time: int
        """
        if sur_time_in_time is not None and sur_time_in_time < 0:  # noqa: E501
            raise ValueError("Invalid value for `sur_time_in_time`, must be a value greater than or equal to `0`")  # noqa: E501

        self._sur_time_in_time = sur_time_in_time
