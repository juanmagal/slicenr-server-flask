# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class QFPacketDelayThresholdsType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, threshold_dl=None, threshold_ul=None, threshold_rtt=None):  # noqa: E501
        """QFPacketDelayThresholdsType - a model defined in OpenAPI

        :param threshold_dl: The threshold_dl of this QFPacketDelayThresholdsType.  # noqa: E501
        :type threshold_dl: int
        :param threshold_ul: The threshold_ul of this QFPacketDelayThresholdsType.  # noqa: E501
        :type threshold_ul: int
        :param threshold_rtt: The threshold_rtt of this QFPacketDelayThresholdsType.  # noqa: E501
        :type threshold_rtt: int
        """
        self.openapi_types = {
            'threshold_dl': int,
            'threshold_ul': int,
            'threshold_rtt': int
        }

        self.attribute_map = {
            'threshold_dl': 'thresholdDl',
            'threshold_ul': 'thresholdUl',
            'threshold_rtt': 'thresholdRtt'
        }

        self._threshold_dl = threshold_dl
        self._threshold_ul = threshold_ul
        self._threshold_rtt = threshold_rtt

    @classmethod
    def from_dict(cls, dikt) -> 'QFPacketDelayThresholdsType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The QFPacketDelayThresholdsType of this QFPacketDelayThresholdsType.  # noqa: E501
        :rtype: QFPacketDelayThresholdsType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def threshold_dl(self):
        """Gets the threshold_dl of this QFPacketDelayThresholdsType.


        :return: The threshold_dl of this QFPacketDelayThresholdsType.
        :rtype: int
        """
        return self._threshold_dl

    @threshold_dl.setter
    def threshold_dl(self, threshold_dl):
        """Sets the threshold_dl of this QFPacketDelayThresholdsType.


        :param threshold_dl: The threshold_dl of this QFPacketDelayThresholdsType.
        :type threshold_dl: int
        """

        self._threshold_dl = threshold_dl

    @property
    def threshold_ul(self):
        """Gets the threshold_ul of this QFPacketDelayThresholdsType.


        :return: The threshold_ul of this QFPacketDelayThresholdsType.
        :rtype: int
        """
        return self._threshold_ul

    @threshold_ul.setter
    def threshold_ul(self, threshold_ul):
        """Sets the threshold_ul of this QFPacketDelayThresholdsType.


        :param threshold_ul: The threshold_ul of this QFPacketDelayThresholdsType.
        :type threshold_ul: int
        """

        self._threshold_ul = threshold_ul

    @property
    def threshold_rtt(self):
        """Gets the threshold_rtt of this QFPacketDelayThresholdsType.


        :return: The threshold_rtt of this QFPacketDelayThresholdsType.
        :rtype: int
        """
        return self._threshold_rtt

    @threshold_rtt.setter
    def threshold_rtt(self, threshold_rtt):
        """Sets the threshold_rtt of this QFPacketDelayThresholdsType.


        :param threshold_rtt: The threshold_rtt of this QFPacketDelayThresholdsType.
        :type threshold_rtt: int
        """

        self._threshold_rtt = threshold_rtt
