# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class ReportingCtrlOneOf2(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stream_target=None):  # noqa: E501
        """ReportingCtrlOneOf2 - a model defined in OpenAPI

        :param stream_target: The stream_target of this ReportingCtrlOneOf2.  # noqa: E501
        :type stream_target: str
        """
        self.openapi_types = {
            'stream_target': str
        }

        self.attribute_map = {
            'stream_target': 'streamTarget'
        }

        self._stream_target = stream_target

    @classmethod
    def from_dict(cls, dikt) -> 'ReportingCtrlOneOf2':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ReportingCtrl_oneOf_2 of this ReportingCtrlOneOf2.  # noqa: E501
        :rtype: ReportingCtrlOneOf2
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stream_target(self):
        """Gets the stream_target of this ReportingCtrlOneOf2.


        :return: The stream_target of this ReportingCtrlOneOf2.
        :rtype: str
        """
        return self._stream_target

    @stream_target.setter
    def stream_target(self, stream_target):
        """Sets the stream_target of this ReportingCtrlOneOf2.


        :param stream_target: The stream_target of this ReportingCtrlOneOf2.
        :type stream_target: str
        """

        self._stream_target = stream_target
