# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.snssai import Snssai
from openapi_server import util

from openapi_server.models.snssai import Snssai  # noqa: E501

class NetworkSliceInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, s_nssai=None, c_nsiid=None, network_slice_ref=None):  # noqa: E501
        """NetworkSliceInfo - a model defined in OpenAPI

        :param s_nssai: The s_nssai of this NetworkSliceInfo.  # noqa: E501
        :type s_nssai: Snssai
        :param c_nsiid: The c_nsiid of this NetworkSliceInfo.  # noqa: E501
        :type c_nsiid: str
        :param network_slice_ref: The network_slice_ref of this NetworkSliceInfo.  # noqa: E501
        :type network_slice_ref: List[str]
        """
        self.openapi_types = {
            's_nssai': Snssai,
            'c_nsiid': str,
            'network_slice_ref': List[str]
        }

        self.attribute_map = {
            's_nssai': 'sNSSAI',
            'c_nsiid': 'cNSIId',
            'network_slice_ref': 'networkSliceRef'
        }

        self._s_nssai = s_nssai
        self._c_nsiid = c_nsiid
        self._network_slice_ref = network_slice_ref

    @classmethod
    def from_dict(cls, dikt) -> 'NetworkSliceInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NetworkSliceInfo of this NetworkSliceInfo.  # noqa: E501
        :rtype: NetworkSliceInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def s_nssai(self):
        """Gets the s_nssai of this NetworkSliceInfo.


        :return: The s_nssai of this NetworkSliceInfo.
        :rtype: Snssai
        """
        return self._s_nssai

    @s_nssai.setter
    def s_nssai(self, s_nssai):
        """Sets the s_nssai of this NetworkSliceInfo.


        :param s_nssai: The s_nssai of this NetworkSliceInfo.
        :type s_nssai: Snssai
        """

        self._s_nssai = s_nssai

    @property
    def c_nsiid(self):
        """Gets the c_nsiid of this NetworkSliceInfo.

        CNSI Id is defined in TS 29.531, only for Core Network  # noqa: E501

        :return: The c_nsiid of this NetworkSliceInfo.
        :rtype: str
        """
        return self._c_nsiid

    @c_nsiid.setter
    def c_nsiid(self, c_nsiid):
        """Sets the c_nsiid of this NetworkSliceInfo.

        CNSI Id is defined in TS 29.531, only for Core Network  # noqa: E501

        :param c_nsiid: The c_nsiid of this NetworkSliceInfo.
        :type c_nsiid: str
        """

        self._c_nsiid = c_nsiid

    @property
    def network_slice_ref(self):
        """Gets the network_slice_ref of this NetworkSliceInfo.


        :return: The network_slice_ref of this NetworkSliceInfo.
        :rtype: List[str]
        """
        return self._network_slice_ref

    @network_slice_ref.setter
    def network_slice_ref(self, network_slice_ref):
        """Sets the network_slice_ref of this NetworkSliceInfo.


        :param network_slice_ref: The network_slice_ref of this NetworkSliceInfo.
        :type network_slice_ref: List[str]
        """

        self._network_slice_ref = network_slice_ref
