# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.serv_attr_com import ServAttrCom
from openapi_server import util

from openapi_server.models.serv_attr_com import ServAttrCom  # noqa: E501

class TermDensity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, serv_attr_com=None, density=None):  # noqa: E501
        """TermDensity - a model defined in OpenAPI

        :param serv_attr_com: The serv_attr_com of this TermDensity.  # noqa: E501
        :type serv_attr_com: ServAttrCom
        :param density: The density of this TermDensity.  # noqa: E501
        :type density: int
        """
        self.openapi_types = {
            'serv_attr_com': ServAttrCom,
            'density': int
        }

        self.attribute_map = {
            'serv_attr_com': 'servAttrCom',
            'density': 'density'
        }

        self._serv_attr_com = serv_attr_com
        self._density = density

    @classmethod
    def from_dict(cls, dikt) -> 'TermDensity':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TermDensity of this TermDensity.  # noqa: E501
        :rtype: TermDensity
        """
        return util.deserialize_model(dikt, cls)

    @property
    def serv_attr_com(self):
        """Gets the serv_attr_com of this TermDensity.


        :return: The serv_attr_com of this TermDensity.
        :rtype: ServAttrCom
        """
        return self._serv_attr_com

    @serv_attr_com.setter
    def serv_attr_com(self, serv_attr_com):
        """Sets the serv_attr_com of this TermDensity.


        :param serv_attr_com: The serv_attr_com of this TermDensity.
        :type serv_attr_com: ServAttrCom
        """

        self._serv_attr_com = serv_attr_com

    @property
    def density(self):
        """Gets the density of this TermDensity.


        :return: The density of this TermDensity.
        :rtype: int
        """
        return self._density

    @density.setter
    def density(self, density):
        """Sets the density of this TermDensity.


        :param density: The density of this TermDensity.
        :type density: int
        """

        self._density = density
