# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class Model5GCNfConnEcmInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _5_gcnf_type=None, _5_gcnfip_address=None, _5_gcnf_ref=None):  # noqa: E501
        """Model5GCNfConnEcmInfo - a model defined in OpenAPI

        :param _5_gcnf_type: The _5_gcnf_type of this Model5GCNfConnEcmInfo.  # noqa: E501
        :type _5_gcnf_type: str
        :param _5_gcnfip_address: The _5_gcnfip_address of this Model5GCNfConnEcmInfo.  # noqa: E501
        :type _5_gcnfip_address: str
        :param _5_gcnf_ref: The _5_gcnf_ref of this Model5GCNfConnEcmInfo.  # noqa: E501
        :type _5_gcnf_ref: str
        """
        self.openapi_types = {
            '_5_gcnf_type': str,
            '_5_gcnfip_address': str,
            '_5_gcnf_ref': str
        }

        self.attribute_map = {
            '_5_gcnf_type': '5GCNFType',
            '_5_gcnfip_address': '5GCNFIpAddress',
            '_5_gcnf_ref': '5GCNFRef'
        }

        self.__5_gcnf_type = _5_gcnf_type
        self.__5_gcnfip_address = _5_gcnfip_address
        self.__5_gcnf_ref = _5_gcnf_ref

    @classmethod
    def from_dict(cls, dikt) -> 'Model5GCNfConnEcmInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The 5GCNfConnEcmInfo of this Model5GCNfConnEcmInfo.  # noqa: E501
        :rtype: Model5GCNfConnEcmInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _5_gcnf_type(self):
        """Gets the _5_gcnf_type of this Model5GCNfConnEcmInfo.


        :return: The _5_gcnf_type of this Model5GCNfConnEcmInfo.
        :rtype: str
        """
        return self.__5_gcnf_type

    @_5_gcnf_type.setter
    def _5_gcnf_type(self, _5_gcnf_type):
        """Sets the _5_gcnf_type of this Model5GCNfConnEcmInfo.


        :param _5_gcnf_type: The _5_gcnf_type of this Model5GCNfConnEcmInfo.
        :type _5_gcnf_type: str
        """
        allowed_values = ["PCF", "NEF", "SCEF"]  # noqa: E501
        if _5_gcnf_type not in allowed_values:
            raise ValueError(
                "Invalid value for `_5_gcnf_type` ({0}), must be one of {1}"
                .format(_5_gcnf_type, allowed_values)
            )

        self.__5_gcnf_type = _5_gcnf_type

    @property
    def _5_gcnfip_address(self):
        """Gets the _5_gcnfip_address of this Model5GCNfConnEcmInfo.


        :return: The _5_gcnfip_address of this Model5GCNfConnEcmInfo.
        :rtype: str
        """
        return self.__5_gcnfip_address

    @_5_gcnfip_address.setter
    def _5_gcnfip_address(self, _5_gcnfip_address):
        """Sets the _5_gcnfip_address of this Model5GCNfConnEcmInfo.


        :param _5_gcnfip_address: The _5_gcnfip_address of this Model5GCNfConnEcmInfo.
        :type _5_gcnfip_address: str
        """

        self.__5_gcnfip_address = _5_gcnfip_address

    @property
    def _5_gcnf_ref(self):
        """Gets the _5_gcnf_ref of this Model5GCNfConnEcmInfo.


        :return: The _5_gcnf_ref of this Model5GCNfConnEcmInfo.
        :rtype: str
        """
        return self.__5_gcnf_ref

    @_5_gcnf_ref.setter
    def _5_gcnf_ref(self, _5_gcnf_ref):
        """Sets the _5_gcnf_ref of this Model5GCNfConnEcmInfo.


        :param _5_gcnf_ref: The _5_gcnf_ref of this Model5GCNfConnEcmInfo.
        :type _5_gcnf_ref: str
        """

        self.__5_gcnf_ref = _5_gcnf_ref
