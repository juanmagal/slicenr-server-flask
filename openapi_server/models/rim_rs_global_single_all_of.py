# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.rim_rs_global_single_all_of_attributes import RimRSGlobalSingleAllOfAttributes
from openapi_server.models.rim_rs_set_single import RimRSSetSingle
from openapi_server import util

from openapi_server.models.rim_rs_global_single_all_of_attributes import RimRSGlobalSingleAllOfAttributes  # noqa: E501
from openapi_server.models.rim_rs_set_single import RimRSSetSingle  # noqa: E501

class RimRSGlobalSingleAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes=None, rim_rs_set=None):  # noqa: E501
        """RimRSGlobalSingleAllOf - a model defined in OpenAPI

        :param attributes: The attributes of this RimRSGlobalSingleAllOf.  # noqa: E501
        :type attributes: RimRSGlobalSingleAllOfAttributes
        :param rim_rs_set: The rim_rs_set of this RimRSGlobalSingleAllOf.  # noqa: E501
        :type rim_rs_set: List[RimRSSetSingle]
        """
        self.openapi_types = {
            'attributes': RimRSGlobalSingleAllOfAttributes,
            'rim_rs_set': List[RimRSSetSingle]
        }

        self.attribute_map = {
            'attributes': 'attributes',
            'rim_rs_set': 'RimRSSet'
        }

        self._attributes = attributes
        self._rim_rs_set = rim_rs_set

    @classmethod
    def from_dict(cls, dikt) -> 'RimRSGlobalSingleAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RimRSGlobal_Single_allOf of this RimRSGlobalSingleAllOf.  # noqa: E501
        :rtype: RimRSGlobalSingleAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this RimRSGlobalSingleAllOf.


        :return: The attributes of this RimRSGlobalSingleAllOf.
        :rtype: RimRSGlobalSingleAllOfAttributes
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this RimRSGlobalSingleAllOf.


        :param attributes: The attributes of this RimRSGlobalSingleAllOf.
        :type attributes: RimRSGlobalSingleAllOfAttributes
        """

        self._attributes = attributes

    @property
    def rim_rs_set(self):
        """Gets the rim_rs_set of this RimRSGlobalSingleAllOf.


        :return: The rim_rs_set of this RimRSGlobalSingleAllOf.
        :rtype: List[RimRSSetSingle]
        """
        return self._rim_rs_set

    @rim_rs_set.setter
    def rim_rs_set(self, rim_rs_set):
        """Sets the rim_rs_set of this RimRSGlobalSingleAllOf.


        :param rim_rs_set: The rim_rs_set of this RimRSGlobalSingleAllOf.
        :type rim_rs_set: List[RimRSSetSingle]
        """

        self._rim_rs_set = rim_rs_set
