# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.supported_data_set_id import SupportedDataSetId
from openapi_server import util

from openapi_server.models.supported_data_set_id import SupportedDataSetId  # noqa: E501

class Udrinfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, supported_data_set_ids=None, n_f_srv_group_id=None):  # noqa: E501
        """Udrinfo - a model defined in OpenAPI

        :param supported_data_set_ids: The supported_data_set_ids of this Udrinfo.  # noqa: E501
        :type supported_data_set_ids: List[SupportedDataSetId]
        :param n_f_srv_group_id: The n_f_srv_group_id of this Udrinfo.  # noqa: E501
        :type n_f_srv_group_id: str
        """
        self.openapi_types = {
            'supported_data_set_ids': List[SupportedDataSetId],
            'n_f_srv_group_id': str
        }

        self.attribute_map = {
            'supported_data_set_ids': 'supportedDataSetIds',
            'n_f_srv_group_id': 'nFSrvGroupId'
        }

        self._supported_data_set_ids = supported_data_set_ids
        self._n_f_srv_group_id = n_f_srv_group_id

    @classmethod
    def from_dict(cls, dikt) -> 'Udrinfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Udrinfo of this Udrinfo.  # noqa: E501
        :rtype: Udrinfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def supported_data_set_ids(self):
        """Gets the supported_data_set_ids of this Udrinfo.


        :return: The supported_data_set_ids of this Udrinfo.
        :rtype: List[SupportedDataSetId]
        """
        return self._supported_data_set_ids

    @supported_data_set_ids.setter
    def supported_data_set_ids(self, supported_data_set_ids):
        """Sets the supported_data_set_ids of this Udrinfo.


        :param supported_data_set_ids: The supported_data_set_ids of this Udrinfo.
        :type supported_data_set_ids: List[SupportedDataSetId]
        """

        self._supported_data_set_ids = supported_data_set_ids

    @property
    def n_f_srv_group_id(self):
        """Gets the n_f_srv_group_id of this Udrinfo.


        :return: The n_f_srv_group_id of this Udrinfo.
        :rtype: str
        """
        return self._n_f_srv_group_id

    @n_f_srv_group_id.setter
    def n_f_srv_group_id(self, n_f_srv_group_id):
        """Sets the n_f_srv_group_id of this Udrinfo.


        :param n_f_srv_group_id: The n_f_srv_group_id of this Udrinfo.
        :type n_f_srv_group_id: str
        """

        self._n_f_srv_group_id = n_f_srv_group_id
