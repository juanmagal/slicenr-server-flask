# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.plmn_info import PlmnInfo
from openapi_server import util

from openapi_server.models.plmn_info import PlmnInfo  # noqa: E501

class NrCellCuSingleAllOfAttributesAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cell_local_id=None, plmn_info_list=None, n_r_frequency_ref=None):  # noqa: E501
        """NrCellCuSingleAllOfAttributesAllOf - a model defined in OpenAPI

        :param cell_local_id: The cell_local_id of this NrCellCuSingleAllOfAttributesAllOf.  # noqa: E501
        :type cell_local_id: int
        :param plmn_info_list: The plmn_info_list of this NrCellCuSingleAllOfAttributesAllOf.  # noqa: E501
        :type plmn_info_list: List[PlmnInfo]
        :param n_r_frequency_ref: The n_r_frequency_ref of this NrCellCuSingleAllOfAttributesAllOf.  # noqa: E501
        :type n_r_frequency_ref: str
        """
        self.openapi_types = {
            'cell_local_id': int,
            'plmn_info_list': List[PlmnInfo],
            'n_r_frequency_ref': str
        }

        self.attribute_map = {
            'cell_local_id': 'cellLocalId',
            'plmn_info_list': 'plmnInfoList',
            'n_r_frequency_ref': 'nRFrequencyRef'
        }

        self._cell_local_id = cell_local_id
        self._plmn_info_list = plmn_info_list
        self._n_r_frequency_ref = n_r_frequency_ref

    @classmethod
    def from_dict(cls, dikt) -> 'NrCellCuSingleAllOfAttributesAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NrCellCu_Single_allOf_attributes_allOf of this NrCellCuSingleAllOfAttributesAllOf.  # noqa: E501
        :rtype: NrCellCuSingleAllOfAttributesAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cell_local_id(self):
        """Gets the cell_local_id of this NrCellCuSingleAllOfAttributesAllOf.


        :return: The cell_local_id of this NrCellCuSingleAllOfAttributesAllOf.
        :rtype: int
        """
        return self._cell_local_id

    @cell_local_id.setter
    def cell_local_id(self, cell_local_id):
        """Sets the cell_local_id of this NrCellCuSingleAllOfAttributesAllOf.


        :param cell_local_id: The cell_local_id of this NrCellCuSingleAllOfAttributesAllOf.
        :type cell_local_id: int
        """

        self._cell_local_id = cell_local_id

    @property
    def plmn_info_list(self):
        """Gets the plmn_info_list of this NrCellCuSingleAllOfAttributesAllOf.


        :return: The plmn_info_list of this NrCellCuSingleAllOfAttributesAllOf.
        :rtype: List[PlmnInfo]
        """
        return self._plmn_info_list

    @plmn_info_list.setter
    def plmn_info_list(self, plmn_info_list):
        """Sets the plmn_info_list of this NrCellCuSingleAllOfAttributesAllOf.


        :param plmn_info_list: The plmn_info_list of this NrCellCuSingleAllOfAttributesAllOf.
        :type plmn_info_list: List[PlmnInfo]
        """

        self._plmn_info_list = plmn_info_list

    @property
    def n_r_frequency_ref(self):
        """Gets the n_r_frequency_ref of this NrCellCuSingleAllOfAttributesAllOf.


        :return: The n_r_frequency_ref of this NrCellCuSingleAllOfAttributesAllOf.
        :rtype: str
        """
        return self._n_r_frequency_ref

    @n_r_frequency_ref.setter
    def n_r_frequency_ref(self, n_r_frequency_ref):
        """Sets the n_r_frequency_ref of this NrCellCuSingleAllOfAttributesAllOf.


        :param n_r_frequency_ref: The n_r_frequency_ref of this NrCellCuSingleAllOfAttributesAllOf.
        :type n_r_frequency_ref: str
        """

        self._n_r_frequency_ref = n_r_frequency_ref
