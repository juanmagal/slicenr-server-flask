# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.managed_nf_profile import ManagedNFProfile
from openapi_server.models.nsacf_info_snssai import NsacfInfoSnssai
from openapi_server.models.tai import Tai
from openapi_server import util

from openapi_server.models.managed_nf_profile import ManagedNFProfile  # noqa: E501
from openapi_server.models.nsacf_info_snssai import NsacfInfoSnssai  # noqa: E501
from openapi_server.models.tai import Tai  # noqa: E501

class NsacfFunctionSingleAllOfAttributesAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, managed_nf_profile=None, nsacf_info_snssai=None, tai_list=None):  # noqa: E501
        """NsacfFunctionSingleAllOfAttributesAllOf - a model defined in OpenAPI

        :param managed_nf_profile: The managed_nf_profile of this NsacfFunctionSingleAllOfAttributesAllOf.  # noqa: E501
        :type managed_nf_profile: ManagedNFProfile
        :param nsacf_info_snssai: The nsacf_info_snssai of this NsacfFunctionSingleAllOfAttributesAllOf.  # noqa: E501
        :type nsacf_info_snssai: List[NsacfInfoSnssai]
        :param tai_list: The tai_list of this NsacfFunctionSingleAllOfAttributesAllOf.  # noqa: E501
        :type tai_list: List[Tai]
        """
        self.openapi_types = {
            'managed_nf_profile': ManagedNFProfile,
            'nsacf_info_snssai': List[NsacfInfoSnssai],
            'tai_list': List[Tai]
        }

        self.attribute_map = {
            'managed_nf_profile': 'managedNFProfile',
            'nsacf_info_snssai': 'nsacfInfoSnssai',
            'tai_list': 'taiList'
        }

        self._managed_nf_profile = managed_nf_profile
        self._nsacf_info_snssai = nsacf_info_snssai
        self._tai_list = tai_list

    @classmethod
    def from_dict(cls, dikt) -> 'NsacfFunctionSingleAllOfAttributesAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NsacfFunction_Single_allOf_attributes_allOf of this NsacfFunctionSingleAllOfAttributesAllOf.  # noqa: E501
        :rtype: NsacfFunctionSingleAllOfAttributesAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def managed_nf_profile(self):
        """Gets the managed_nf_profile of this NsacfFunctionSingleAllOfAttributesAllOf.


        :return: The managed_nf_profile of this NsacfFunctionSingleAllOfAttributesAllOf.
        :rtype: ManagedNFProfile
        """
        return self._managed_nf_profile

    @managed_nf_profile.setter
    def managed_nf_profile(self, managed_nf_profile):
        """Sets the managed_nf_profile of this NsacfFunctionSingleAllOfAttributesAllOf.


        :param managed_nf_profile: The managed_nf_profile of this NsacfFunctionSingleAllOfAttributesAllOf.
        :type managed_nf_profile: ManagedNFProfile
        """

        self._managed_nf_profile = managed_nf_profile

    @property
    def nsacf_info_snssai(self):
        """Gets the nsacf_info_snssai of this NsacfFunctionSingleAllOfAttributesAllOf.


        :return: The nsacf_info_snssai of this NsacfFunctionSingleAllOfAttributesAllOf.
        :rtype: List[NsacfInfoSnssai]
        """
        return self._nsacf_info_snssai

    @nsacf_info_snssai.setter
    def nsacf_info_snssai(self, nsacf_info_snssai):
        """Sets the nsacf_info_snssai of this NsacfFunctionSingleAllOfAttributesAllOf.


        :param nsacf_info_snssai: The nsacf_info_snssai of this NsacfFunctionSingleAllOfAttributesAllOf.
        :type nsacf_info_snssai: List[NsacfInfoSnssai]
        """

        self._nsacf_info_snssai = nsacf_info_snssai

    @property
    def tai_list(self):
        """Gets the tai_list of this NsacfFunctionSingleAllOfAttributesAllOf.


        :return: The tai_list of this NsacfFunctionSingleAllOfAttributesAllOf.
        :rtype: List[Tai]
        """
        return self._tai_list

    @tai_list.setter
    def tai_list(self, tai_list):
        """Sets the tai_list of this NsacfFunctionSingleAllOfAttributesAllOf.


        :param tai_list: The tai_list of this NsacfFunctionSingleAllOfAttributesAllOf.
        :type tai_list: List[Tai]
        """

        self._tai_list = tai_list
