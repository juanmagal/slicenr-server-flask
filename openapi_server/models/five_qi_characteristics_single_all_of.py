# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.packet_error_rate import PacketErrorRate
from openapi_server import util

from openapi_server.models.packet_error_rate import PacketErrorRate  # noqa: E501

class FiveQICharacteristicsSingleAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, five_qi_value=None, resource_type=None, priority_level=None, packet_delay_budget=None, packet_error_rate=None, averaging_window=None, maximum_data_burst_volume=None):  # noqa: E501
        """FiveQICharacteristicsSingleAllOf - a model defined in OpenAPI

        :param five_qi_value: The five_qi_value of this FiveQICharacteristicsSingleAllOf.  # noqa: E501
        :type five_qi_value: int
        :param resource_type: The resource_type of this FiveQICharacteristicsSingleAllOf.  # noqa: E501
        :type resource_type: str
        :param priority_level: The priority_level of this FiveQICharacteristicsSingleAllOf.  # noqa: E501
        :type priority_level: int
        :param packet_delay_budget: The packet_delay_budget of this FiveQICharacteristicsSingleAllOf.  # noqa: E501
        :type packet_delay_budget: int
        :param packet_error_rate: The packet_error_rate of this FiveQICharacteristicsSingleAllOf.  # noqa: E501
        :type packet_error_rate: PacketErrorRate
        :param averaging_window: The averaging_window of this FiveQICharacteristicsSingleAllOf.  # noqa: E501
        :type averaging_window: int
        :param maximum_data_burst_volume: The maximum_data_burst_volume of this FiveQICharacteristicsSingleAllOf.  # noqa: E501
        :type maximum_data_burst_volume: int
        """
        self.openapi_types = {
            'five_qi_value': int,
            'resource_type': str,
            'priority_level': int,
            'packet_delay_budget': int,
            'packet_error_rate': PacketErrorRate,
            'averaging_window': int,
            'maximum_data_burst_volume': int
        }

        self.attribute_map = {
            'five_qi_value': 'fiveQIValue',
            'resource_type': 'resourceType',
            'priority_level': 'priorityLevel',
            'packet_delay_budget': 'packetDelayBudget',
            'packet_error_rate': 'packetErrorRate',
            'averaging_window': 'averagingWindow',
            'maximum_data_burst_volume': 'maximumDataBurstVolume'
        }

        self._five_qi_value = five_qi_value
        self._resource_type = resource_type
        self._priority_level = priority_level
        self._packet_delay_budget = packet_delay_budget
        self._packet_error_rate = packet_error_rate
        self._averaging_window = averaging_window
        self._maximum_data_burst_volume = maximum_data_burst_volume

    @classmethod
    def from_dict(cls, dikt) -> 'FiveQICharacteristicsSingleAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FiveQICharacteristics_Single_allOf of this FiveQICharacteristicsSingleAllOf.  # noqa: E501
        :rtype: FiveQICharacteristicsSingleAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def five_qi_value(self):
        """Gets the five_qi_value of this FiveQICharacteristicsSingleAllOf.


        :return: The five_qi_value of this FiveQICharacteristicsSingleAllOf.
        :rtype: int
        """
        return self._five_qi_value

    @five_qi_value.setter
    def five_qi_value(self, five_qi_value):
        """Sets the five_qi_value of this FiveQICharacteristicsSingleAllOf.


        :param five_qi_value: The five_qi_value of this FiveQICharacteristicsSingleAllOf.
        :type five_qi_value: int
        """

        self._five_qi_value = five_qi_value

    @property
    def resource_type(self):
        """Gets the resource_type of this FiveQICharacteristicsSingleAllOf.


        :return: The resource_type of this FiveQICharacteristicsSingleAllOf.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this FiveQICharacteristicsSingleAllOf.


        :param resource_type: The resource_type of this FiveQICharacteristicsSingleAllOf.
        :type resource_type: str
        """
        allowed_values = ["GBR", "NonGBR"]  # noqa: E501
        if resource_type not in allowed_values:
            raise ValueError(
                "Invalid value for `resource_type` ({0}), must be one of {1}"
                .format(resource_type, allowed_values)
            )

        self._resource_type = resource_type

    @property
    def priority_level(self):
        """Gets the priority_level of this FiveQICharacteristicsSingleAllOf.


        :return: The priority_level of this FiveQICharacteristicsSingleAllOf.
        :rtype: int
        """
        return self._priority_level

    @priority_level.setter
    def priority_level(self, priority_level):
        """Sets the priority_level of this FiveQICharacteristicsSingleAllOf.


        :param priority_level: The priority_level of this FiveQICharacteristicsSingleAllOf.
        :type priority_level: int
        """

        self._priority_level = priority_level

    @property
    def packet_delay_budget(self):
        """Gets the packet_delay_budget of this FiveQICharacteristicsSingleAllOf.


        :return: The packet_delay_budget of this FiveQICharacteristicsSingleAllOf.
        :rtype: int
        """
        return self._packet_delay_budget

    @packet_delay_budget.setter
    def packet_delay_budget(self, packet_delay_budget):
        """Sets the packet_delay_budget of this FiveQICharacteristicsSingleAllOf.


        :param packet_delay_budget: The packet_delay_budget of this FiveQICharacteristicsSingleAllOf.
        :type packet_delay_budget: int
        """

        self._packet_delay_budget = packet_delay_budget

    @property
    def packet_error_rate(self):
        """Gets the packet_error_rate of this FiveQICharacteristicsSingleAllOf.


        :return: The packet_error_rate of this FiveQICharacteristicsSingleAllOf.
        :rtype: PacketErrorRate
        """
        return self._packet_error_rate

    @packet_error_rate.setter
    def packet_error_rate(self, packet_error_rate):
        """Sets the packet_error_rate of this FiveQICharacteristicsSingleAllOf.


        :param packet_error_rate: The packet_error_rate of this FiveQICharacteristicsSingleAllOf.
        :type packet_error_rate: PacketErrorRate
        """

        self._packet_error_rate = packet_error_rate

    @property
    def averaging_window(self):
        """Gets the averaging_window of this FiveQICharacteristicsSingleAllOf.


        :return: The averaging_window of this FiveQICharacteristicsSingleAllOf.
        :rtype: int
        """
        return self._averaging_window

    @averaging_window.setter
    def averaging_window(self, averaging_window):
        """Sets the averaging_window of this FiveQICharacteristicsSingleAllOf.


        :param averaging_window: The averaging_window of this FiveQICharacteristicsSingleAllOf.
        :type averaging_window: int
        """

        self._averaging_window = averaging_window

    @property
    def maximum_data_burst_volume(self):
        """Gets the maximum_data_burst_volume of this FiveQICharacteristicsSingleAllOf.


        :return: The maximum_data_burst_volume of this FiveQICharacteristicsSingleAllOf.
        :rtype: int
        """
        return self._maximum_data_burst_volume

    @maximum_data_burst_volume.setter
    def maximum_data_burst_volume(self, maximum_data_burst_volume):
        """Sets the maximum_data_burst_volume of this FiveQICharacteristicsSingleAllOf.


        :param maximum_data_burst_volume: The maximum_data_burst_volume of this FiveQICharacteristicsSingleAllOf.
        :type maximum_data_burst_volume: int
        """

        self._maximum_data_burst_volume = maximum_data_burst_volume
