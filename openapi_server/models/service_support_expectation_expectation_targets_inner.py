# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.activity_factor_target import ActivityFactorTarget
from openapi_server.models.condition import Condition
from openapi_server.models.dl_latency_target import DLLatencyTarget
from openapi_server.models.dl_thpt_per_ue_target import DLThptPerUETarget
from openapi_server.models.expectation_target import ExpectationTarget
from openapi_server.models.max_numberof_ues_target import MaxNumberofUEsTarget
from openapi_server.models.target_context import TargetContext
from openapi_server.models.ue_speed_target import UESpeedTarget
from openapi_server.models.ul_latency_target import ULLatencyTarget
from openapi_server.models.ul_thpt_per_ue_target import ULThptPerUETarget
from openapi_server import util

from openapi_server.models.activity_factor_target import ActivityFactorTarget  # noqa: E501
from openapi_server.models.condition import Condition  # noqa: E501
from openapi_server.models.dl_latency_target import DLLatencyTarget  # noqa: E501
from openapi_server.models.dl_thpt_per_ue_target import DLThptPerUETarget  # noqa: E501
from openapi_server.models.expectation_target import ExpectationTarget  # noqa: E501
from openapi_server.models.max_numberof_ues_target import MaxNumberofUEsTarget  # noqa: E501
from openapi_server.models.target_context import TargetContext  # noqa: E501
from openapi_server.models.ue_speed_target import UESpeedTarget  # noqa: E501
from openapi_server.models.ul_latency_target import ULLatencyTarget  # noqa: E501
from openapi_server.models.ul_thpt_per_ue_target import ULThptPerUETarget  # noqa: E501

class ServiceSupportExpectationExpectationTargetsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, target_name=None, target_condition=None, target_value_range=None, target_contexts=None):  # noqa: E501
        """ServiceSupportExpectationExpectationTargetsInner - a model defined in OpenAPI

        :param target_name: The target_name of this ServiceSupportExpectationExpectationTargetsInner.  # noqa: E501
        :type target_name: str
        :param target_condition: The target_condition of this ServiceSupportExpectationExpectationTargetsInner.  # noqa: E501
        :type target_condition: Condition
        :param target_value_range: The target_value_range of this ServiceSupportExpectationExpectationTargetsInner.  # noqa: E501
        :type target_value_range: float
        :param target_contexts: The target_contexts of this ServiceSupportExpectationExpectationTargetsInner.  # noqa: E501
        :type target_contexts: List[TargetContext]
        """
        self.openapi_types = {
            'target_name': str,
            'target_condition': Condition,
            'target_value_range': float,
            'target_contexts': List[TargetContext]
        }

        self.attribute_map = {
            'target_name': 'targetName',
            'target_condition': 'targetCondition',
            'target_value_range': 'targetValueRange',
            'target_contexts': 'targetContexts'
        }

        self._target_name = target_name
        self._target_condition = target_condition
        self._target_value_range = target_value_range
        self._target_contexts = target_contexts

    @classmethod
    def from_dict(cls, dikt) -> 'ServiceSupportExpectationExpectationTargetsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ServiceSupportExpectation_expectationTargets_inner of this ServiceSupportExpectationExpectationTargetsInner.  # noqa: E501
        :rtype: ServiceSupportExpectationExpectationTargetsInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def target_name(self):
        """Gets the target_name of this ServiceSupportExpectationExpectationTargetsInner.


        :return: The target_name of this ServiceSupportExpectationExpectationTargetsInner.
        :rtype: str
        """
        return self._target_name

    @target_name.setter
    def target_name(self, target_name):
        """Sets the target_name of this ServiceSupportExpectationExpectationTargetsInner.


        :param target_name: The target_name of this ServiceSupportExpectationExpectationTargetsInner.
        :type target_name: str
        """

        self._target_name = target_name

    @property
    def target_condition(self):
        """Gets the target_condition of this ServiceSupportExpectationExpectationTargetsInner.


        :return: The target_condition of this ServiceSupportExpectationExpectationTargetsInner.
        :rtype: Condition
        """
        return self._target_condition

    @target_condition.setter
    def target_condition(self, target_condition):
        """Sets the target_condition of this ServiceSupportExpectationExpectationTargetsInner.


        :param target_condition: The target_condition of this ServiceSupportExpectationExpectationTargetsInner.
        :type target_condition: Condition
        """

        self._target_condition = target_condition

    @property
    def target_value_range(self):
        """Gets the target_value_range of this ServiceSupportExpectationExpectationTargetsInner.


        :return: The target_value_range of this ServiceSupportExpectationExpectationTargetsInner.
        :rtype: float
        """
        return self._target_value_range

    @target_value_range.setter
    def target_value_range(self, target_value_range):
        """Sets the target_value_range of this ServiceSupportExpectationExpectationTargetsInner.


        :param target_value_range: The target_value_range of this ServiceSupportExpectationExpectationTargetsInner.
        :type target_value_range: float
        """

        self._target_value_range = target_value_range

    @property
    def target_contexts(self):
        """Gets the target_contexts of this ServiceSupportExpectationExpectationTargetsInner.


        :return: The target_contexts of this ServiceSupportExpectationExpectationTargetsInner.
        :rtype: List[TargetContext]
        """
        return self._target_contexts

    @target_contexts.setter
    def target_contexts(self, target_contexts):
        """Sets the target_contexts of this ServiceSupportExpectationExpectationTargetsInner.


        :param target_contexts: The target_contexts of this ServiceSupportExpectationExpectationTargetsInner.
        :type target_contexts: List[TargetContext]
        """

        self._target_contexts = target_contexts
