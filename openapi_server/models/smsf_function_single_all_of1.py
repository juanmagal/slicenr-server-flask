# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.epmapsmsc_single import EPMAPSMSCSingle
from openapi_server.models.epn20_single import EPN20Single
from openapi_server.models.epn21_single import EPN21Single
from openapi_server import util

from openapi_server.models.epmapsmsc_single import EPMAPSMSCSingle  # noqa: E501
from openapi_server.models.epn20_single import EPN20Single  # noqa: E501
from openapi_server.models.epn21_single import EPN21Single  # noqa: E501

class SmsfFunctionSingleAllOf1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ep_n20=None, ep_n21=None, ep_map_smsc=None):  # noqa: E501
        """SmsfFunctionSingleAllOf1 - a model defined in OpenAPI

        :param ep_n20: The ep_n20 of this SmsfFunctionSingleAllOf1.  # noqa: E501
        :type ep_n20: List[EPN20Single]
        :param ep_n21: The ep_n21 of this SmsfFunctionSingleAllOf1.  # noqa: E501
        :type ep_n21: List[EPN21Single]
        :param ep_map_smsc: The ep_map_smsc of this SmsfFunctionSingleAllOf1.  # noqa: E501
        :type ep_map_smsc: List[EPMAPSMSCSingle]
        """
        self.openapi_types = {
            'ep_n20': List[EPN20Single],
            'ep_n21': List[EPN21Single],
            'ep_map_smsc': List[EPMAPSMSCSingle]
        }

        self.attribute_map = {
            'ep_n20': 'EP_N20',
            'ep_n21': 'EP_N21',
            'ep_map_smsc': 'EP_MAP_SMSC'
        }

        self._ep_n20 = ep_n20
        self._ep_n21 = ep_n21
        self._ep_map_smsc = ep_map_smsc

    @classmethod
    def from_dict(cls, dikt) -> 'SmsfFunctionSingleAllOf1':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SmsfFunction_Single_allOf_1 of this SmsfFunctionSingleAllOf1.  # noqa: E501
        :rtype: SmsfFunctionSingleAllOf1
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ep_n20(self):
        """Gets the ep_n20 of this SmsfFunctionSingleAllOf1.


        :return: The ep_n20 of this SmsfFunctionSingleAllOf1.
        :rtype: List[EPN20Single]
        """
        return self._ep_n20

    @ep_n20.setter
    def ep_n20(self, ep_n20):
        """Sets the ep_n20 of this SmsfFunctionSingleAllOf1.


        :param ep_n20: The ep_n20 of this SmsfFunctionSingleAllOf1.
        :type ep_n20: List[EPN20Single]
        """

        self._ep_n20 = ep_n20

    @property
    def ep_n21(self):
        """Gets the ep_n21 of this SmsfFunctionSingleAllOf1.


        :return: The ep_n21 of this SmsfFunctionSingleAllOf1.
        :rtype: List[EPN21Single]
        """
        return self._ep_n21

    @ep_n21.setter
    def ep_n21(self, ep_n21):
        """Sets the ep_n21 of this SmsfFunctionSingleAllOf1.


        :param ep_n21: The ep_n21 of this SmsfFunctionSingleAllOf1.
        :type ep_n21: List[EPN21Single]
        """

        self._ep_n21 = ep_n21

    @property
    def ep_map_smsc(self):
        """Gets the ep_map_smsc of this SmsfFunctionSingleAllOf1.


        :return: The ep_map_smsc of this SmsfFunctionSingleAllOf1.
        :rtype: List[EPMAPSMSCSingle]
        """
        return self._ep_map_smsc

    @ep_map_smsc.setter
    def ep_map_smsc(self, ep_map_smsc):
        """Sets the ep_map_smsc of this SmsfFunctionSingleAllOf1.


        :param ep_map_smsc: The ep_map_smsc of this SmsfFunctionSingleAllOf1.
        :type ep_map_smsc: List[EPMAPSMSCSingle]
        """

        self._ep_map_smsc = ep_map_smsc
