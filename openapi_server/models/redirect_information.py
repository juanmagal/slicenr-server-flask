# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.redirect_address_type import RedirectAddressType
from openapi_server import util

from openapi_server.models.redirect_address_type import RedirectAddressType  # noqa: E501

class RedirectInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, redirect_enabled=None, redirect_address_type=None, redirect_server_address=None):  # noqa: E501
        """RedirectInformation - a model defined in OpenAPI

        :param redirect_enabled: The redirect_enabled of this RedirectInformation.  # noqa: E501
        :type redirect_enabled: bool
        :param redirect_address_type: The redirect_address_type of this RedirectInformation.  # noqa: E501
        :type redirect_address_type: RedirectAddressType
        :param redirect_server_address: The redirect_server_address of this RedirectInformation.  # noqa: E501
        :type redirect_server_address: str
        """
        self.openapi_types = {
            'redirect_enabled': bool,
            'redirect_address_type': RedirectAddressType,
            'redirect_server_address': str
        }

        self.attribute_map = {
            'redirect_enabled': 'redirectEnabled',
            'redirect_address_type': 'redirectAddressType',
            'redirect_server_address': 'redirectServerAddress'
        }

        self._redirect_enabled = redirect_enabled
        self._redirect_address_type = redirect_address_type
        self._redirect_server_address = redirect_server_address

    @classmethod
    def from_dict(cls, dikt) -> 'RedirectInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RedirectInformation of this RedirectInformation.  # noqa: E501
        :rtype: RedirectInformation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def redirect_enabled(self):
        """Gets the redirect_enabled of this RedirectInformation.

        Indicates the redirect is enable.  # noqa: E501

        :return: The redirect_enabled of this RedirectInformation.
        :rtype: bool
        """
        return self._redirect_enabled

    @redirect_enabled.setter
    def redirect_enabled(self, redirect_enabled):
        """Sets the redirect_enabled of this RedirectInformation.

        Indicates the redirect is enable.  # noqa: E501

        :param redirect_enabled: The redirect_enabled of this RedirectInformation.
        :type redirect_enabled: bool
        """

        self._redirect_enabled = redirect_enabled

    @property
    def redirect_address_type(self):
        """Gets the redirect_address_type of this RedirectInformation.


        :return: The redirect_address_type of this RedirectInformation.
        :rtype: RedirectAddressType
        """
        return self._redirect_address_type

    @redirect_address_type.setter
    def redirect_address_type(self, redirect_address_type):
        """Sets the redirect_address_type of this RedirectInformation.


        :param redirect_address_type: The redirect_address_type of this RedirectInformation.
        :type redirect_address_type: RedirectAddressType
        """

        self._redirect_address_type = redirect_address_type

    @property
    def redirect_server_address(self):
        """Gets the redirect_server_address of this RedirectInformation.

        Indicates the address of the redirect server. If \"redirectAddressType\" attribute indicates the IPV4_ADDR, the encoding is the same as the Ipv4Addr data type defined in 3GPP TS 29.571.If \"redirectAddressType\" attribute indicates the IPV6_ADDR, the encoding is the same as the Ipv6Addr data type defined in 3GPP TS 29.571.If \"redirectAddressType\" attribute indicates the URL or SIP_URI, the encoding is the same as the Uri data type defined in 3GPP TS 29.571.   # noqa: E501

        :return: The redirect_server_address of this RedirectInformation.
        :rtype: str
        """
        return self._redirect_server_address

    @redirect_server_address.setter
    def redirect_server_address(self, redirect_server_address):
        """Sets the redirect_server_address of this RedirectInformation.

        Indicates the address of the redirect server. If \"redirectAddressType\" attribute indicates the IPV4_ADDR, the encoding is the same as the Ipv4Addr data type defined in 3GPP TS 29.571.If \"redirectAddressType\" attribute indicates the IPV6_ADDR, the encoding is the same as the Ipv6Addr data type defined in 3GPP TS 29.571.If \"redirectAddressType\" attribute indicates the URL or SIP_URI, the encoding is the same as the Uri data type defined in 3GPP TS 29.571.   # noqa: E501

        :param redirect_server_address: The redirect_server_address of this RedirectInformation.
        :type redirect_server_address: str
        """

        self._redirect_server_address = redirect_server_address
