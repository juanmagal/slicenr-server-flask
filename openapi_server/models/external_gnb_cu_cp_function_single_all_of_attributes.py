# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.pee_parameter import PeeParameter
from openapi_server.models.plmn_id import PlmnId
from openapi_server.models.supported_perf_metric_group import SupportedPerfMetricGroup
from openapi_server.models.vnf_parameter import VnfParameter
from openapi_server import util

from openapi_server.models.pee_parameter import PeeParameter  # noqa: E501
from openapi_server.models.plmn_id import PlmnId  # noqa: E501
from openapi_server.models.supported_perf_metric_group import SupportedPerfMetricGroup  # noqa: E501
from openapi_server.models.vnf_parameter import VnfParameter  # noqa: E501

class ExternalGnbCuCpFunctionSingleAllOfAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user_label=None, vnf_parameters_list=None, pee_parameters_list=None, priority_label=None, supported_perf_metric_groups=None, supported_trace_metrics=None, gnb_id=None, gnb_id_length=None, plmn_id=None):  # noqa: E501
        """ExternalGnbCuCpFunctionSingleAllOfAttributes - a model defined in OpenAPI

        :param user_label: The user_label of this ExternalGnbCuCpFunctionSingleAllOfAttributes.  # noqa: E501
        :type user_label: str
        :param vnf_parameters_list: The vnf_parameters_list of this ExternalGnbCuCpFunctionSingleAllOfAttributes.  # noqa: E501
        :type vnf_parameters_list: List[VnfParameter]
        :param pee_parameters_list: The pee_parameters_list of this ExternalGnbCuCpFunctionSingleAllOfAttributes.  # noqa: E501
        :type pee_parameters_list: List[PeeParameter]
        :param priority_label: The priority_label of this ExternalGnbCuCpFunctionSingleAllOfAttributes.  # noqa: E501
        :type priority_label: int
        :param supported_perf_metric_groups: The supported_perf_metric_groups of this ExternalGnbCuCpFunctionSingleAllOfAttributes.  # noqa: E501
        :type supported_perf_metric_groups: List[SupportedPerfMetricGroup]
        :param supported_trace_metrics: The supported_trace_metrics of this ExternalGnbCuCpFunctionSingleAllOfAttributes.  # noqa: E501
        :type supported_trace_metrics: List[str]
        :param gnb_id: The gnb_id of this ExternalGnbCuCpFunctionSingleAllOfAttributes.  # noqa: E501
        :type gnb_id: str
        :param gnb_id_length: The gnb_id_length of this ExternalGnbCuCpFunctionSingleAllOfAttributes.  # noqa: E501
        :type gnb_id_length: int
        :param plmn_id: The plmn_id of this ExternalGnbCuCpFunctionSingleAllOfAttributes.  # noqa: E501
        :type plmn_id: PlmnId
        """
        self.openapi_types = {
            'user_label': str,
            'vnf_parameters_list': List[VnfParameter],
            'pee_parameters_list': List[PeeParameter],
            'priority_label': int,
            'supported_perf_metric_groups': List[SupportedPerfMetricGroup],
            'supported_trace_metrics': List[str],
            'gnb_id': str,
            'gnb_id_length': int,
            'plmn_id': PlmnId
        }

        self.attribute_map = {
            'user_label': 'userLabel',
            'vnf_parameters_list': 'vnfParametersList',
            'pee_parameters_list': 'peeParametersList',
            'priority_label': 'priorityLabel',
            'supported_perf_metric_groups': 'supportedPerfMetricGroups',
            'supported_trace_metrics': 'supportedTraceMetrics',
            'gnb_id': 'gnbId',
            'gnb_id_length': 'gnbIdLength',
            'plmn_id': 'plmnId'
        }

        self._user_label = user_label
        self._vnf_parameters_list = vnf_parameters_list
        self._pee_parameters_list = pee_parameters_list
        self._priority_label = priority_label
        self._supported_perf_metric_groups = supported_perf_metric_groups
        self._supported_trace_metrics = supported_trace_metrics
        self._gnb_id = gnb_id
        self._gnb_id_length = gnb_id_length
        self._plmn_id = plmn_id

    @classmethod
    def from_dict(cls, dikt) -> 'ExternalGnbCuCpFunctionSingleAllOfAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ExternalGnbCuCpFunction_Single_allOf_attributes of this ExternalGnbCuCpFunctionSingleAllOfAttributes.  # noqa: E501
        :rtype: ExternalGnbCuCpFunctionSingleAllOfAttributes
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_label(self):
        """Gets the user_label of this ExternalGnbCuCpFunctionSingleAllOfAttributes.


        :return: The user_label of this ExternalGnbCuCpFunctionSingleAllOfAttributes.
        :rtype: str
        """
        return self._user_label

    @user_label.setter
    def user_label(self, user_label):
        """Sets the user_label of this ExternalGnbCuCpFunctionSingleAllOfAttributes.


        :param user_label: The user_label of this ExternalGnbCuCpFunctionSingleAllOfAttributes.
        :type user_label: str
        """

        self._user_label = user_label

    @property
    def vnf_parameters_list(self):
        """Gets the vnf_parameters_list of this ExternalGnbCuCpFunctionSingleAllOfAttributes.


        :return: The vnf_parameters_list of this ExternalGnbCuCpFunctionSingleAllOfAttributes.
        :rtype: List[VnfParameter]
        """
        return self._vnf_parameters_list

    @vnf_parameters_list.setter
    def vnf_parameters_list(self, vnf_parameters_list):
        """Sets the vnf_parameters_list of this ExternalGnbCuCpFunctionSingleAllOfAttributes.


        :param vnf_parameters_list: The vnf_parameters_list of this ExternalGnbCuCpFunctionSingleAllOfAttributes.
        :type vnf_parameters_list: List[VnfParameter]
        """

        self._vnf_parameters_list = vnf_parameters_list

    @property
    def pee_parameters_list(self):
        """Gets the pee_parameters_list of this ExternalGnbCuCpFunctionSingleAllOfAttributes.


        :return: The pee_parameters_list of this ExternalGnbCuCpFunctionSingleAllOfAttributes.
        :rtype: List[PeeParameter]
        """
        return self._pee_parameters_list

    @pee_parameters_list.setter
    def pee_parameters_list(self, pee_parameters_list):
        """Sets the pee_parameters_list of this ExternalGnbCuCpFunctionSingleAllOfAttributes.


        :param pee_parameters_list: The pee_parameters_list of this ExternalGnbCuCpFunctionSingleAllOfAttributes.
        :type pee_parameters_list: List[PeeParameter]
        """

        self._pee_parameters_list = pee_parameters_list

    @property
    def priority_label(self):
        """Gets the priority_label of this ExternalGnbCuCpFunctionSingleAllOfAttributes.


        :return: The priority_label of this ExternalGnbCuCpFunctionSingleAllOfAttributes.
        :rtype: int
        """
        return self._priority_label

    @priority_label.setter
    def priority_label(self, priority_label):
        """Sets the priority_label of this ExternalGnbCuCpFunctionSingleAllOfAttributes.


        :param priority_label: The priority_label of this ExternalGnbCuCpFunctionSingleAllOfAttributes.
        :type priority_label: int
        """

        self._priority_label = priority_label

    @property
    def supported_perf_metric_groups(self):
        """Gets the supported_perf_metric_groups of this ExternalGnbCuCpFunctionSingleAllOfAttributes.


        :return: The supported_perf_metric_groups of this ExternalGnbCuCpFunctionSingleAllOfAttributes.
        :rtype: List[SupportedPerfMetricGroup]
        """
        return self._supported_perf_metric_groups

    @supported_perf_metric_groups.setter
    def supported_perf_metric_groups(self, supported_perf_metric_groups):
        """Sets the supported_perf_metric_groups of this ExternalGnbCuCpFunctionSingleAllOfAttributes.


        :param supported_perf_metric_groups: The supported_perf_metric_groups of this ExternalGnbCuCpFunctionSingleAllOfAttributes.
        :type supported_perf_metric_groups: List[SupportedPerfMetricGroup]
        """

        self._supported_perf_metric_groups = supported_perf_metric_groups

    @property
    def supported_trace_metrics(self):
        """Gets the supported_trace_metrics of this ExternalGnbCuCpFunctionSingleAllOfAttributes.


        :return: The supported_trace_metrics of this ExternalGnbCuCpFunctionSingleAllOfAttributes.
        :rtype: List[str]
        """
        return self._supported_trace_metrics

    @supported_trace_metrics.setter
    def supported_trace_metrics(self, supported_trace_metrics):
        """Sets the supported_trace_metrics of this ExternalGnbCuCpFunctionSingleAllOfAttributes.


        :param supported_trace_metrics: The supported_trace_metrics of this ExternalGnbCuCpFunctionSingleAllOfAttributes.
        :type supported_trace_metrics: List[str]
        """

        self._supported_trace_metrics = supported_trace_metrics

    @property
    def gnb_id(self):
        """Gets the gnb_id of this ExternalGnbCuCpFunctionSingleAllOfAttributes.


        :return: The gnb_id of this ExternalGnbCuCpFunctionSingleAllOfAttributes.
        :rtype: str
        """
        return self._gnb_id

    @gnb_id.setter
    def gnb_id(self, gnb_id):
        """Sets the gnb_id of this ExternalGnbCuCpFunctionSingleAllOfAttributes.


        :param gnb_id: The gnb_id of this ExternalGnbCuCpFunctionSingleAllOfAttributes.
        :type gnb_id: str
        """

        self._gnb_id = gnb_id

    @property
    def gnb_id_length(self):
        """Gets the gnb_id_length of this ExternalGnbCuCpFunctionSingleAllOfAttributes.


        :return: The gnb_id_length of this ExternalGnbCuCpFunctionSingleAllOfAttributes.
        :rtype: int
        """
        return self._gnb_id_length

    @gnb_id_length.setter
    def gnb_id_length(self, gnb_id_length):
        """Sets the gnb_id_length of this ExternalGnbCuCpFunctionSingleAllOfAttributes.


        :param gnb_id_length: The gnb_id_length of this ExternalGnbCuCpFunctionSingleAllOfAttributes.
        :type gnb_id_length: int
        """
        if gnb_id_length is not None and gnb_id_length > 32:  # noqa: E501
            raise ValueError("Invalid value for `gnb_id_length`, must be a value less than or equal to `32`")  # noqa: E501
        if gnb_id_length is not None and gnb_id_length < 22:  # noqa: E501
            raise ValueError("Invalid value for `gnb_id_length`, must be a value greater than or equal to `22`")  # noqa: E501

        self._gnb_id_length = gnb_id_length

    @property
    def plmn_id(self):
        """Gets the plmn_id of this ExternalGnbCuCpFunctionSingleAllOfAttributes.


        :return: The plmn_id of this ExternalGnbCuCpFunctionSingleAllOfAttributes.
        :rtype: PlmnId
        """
        return self._plmn_id

    @plmn_id.setter
    def plmn_id(self, plmn_id):
        """Sets the plmn_id of this ExternalGnbCuCpFunctionSingleAllOfAttributes.


        :param plmn_id: The plmn_id of this ExternalGnbCuCpFunctionSingleAllOfAttributes.
        :type plmn_id: PlmnId
        """

        self._plmn_id = plmn_id
