# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.assurance_closed_control_loop_single_all_of_attributes import AssuranceClosedControlLoopSingleAllOfAttributes
from openapi_server.models.assurance_goal_single import AssuranceGoalSingle
from openapi_server import util

from openapi_server.models.assurance_closed_control_loop_single_all_of_attributes import AssuranceClosedControlLoopSingleAllOfAttributes  # noqa: E501
from openapi_server.models.assurance_goal_single import AssuranceGoalSingle  # noqa: E501

class AssuranceClosedControlLoopSingleAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes=None, assurance_goal=None):  # noqa: E501
        """AssuranceClosedControlLoopSingleAllOf - a model defined in OpenAPI

        :param attributes: The attributes of this AssuranceClosedControlLoopSingleAllOf.  # noqa: E501
        :type attributes: AssuranceClosedControlLoopSingleAllOfAttributes
        :param assurance_goal: The assurance_goal of this AssuranceClosedControlLoopSingleAllOf.  # noqa: E501
        :type assurance_goal: List[AssuranceGoalSingle]
        """
        self.openapi_types = {
            'attributes': AssuranceClosedControlLoopSingleAllOfAttributes,
            'assurance_goal': List[AssuranceGoalSingle]
        }

        self.attribute_map = {
            'attributes': 'attributes',
            'assurance_goal': 'AssuranceGoal'
        }

        self._attributes = attributes
        self._assurance_goal = assurance_goal

    @classmethod
    def from_dict(cls, dikt) -> 'AssuranceClosedControlLoopSingleAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AssuranceClosedControlLoop_Single_allOf of this AssuranceClosedControlLoopSingleAllOf.  # noqa: E501
        :rtype: AssuranceClosedControlLoopSingleAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this AssuranceClosedControlLoopSingleAllOf.


        :return: The attributes of this AssuranceClosedControlLoopSingleAllOf.
        :rtype: AssuranceClosedControlLoopSingleAllOfAttributes
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this AssuranceClosedControlLoopSingleAllOf.


        :param attributes: The attributes of this AssuranceClosedControlLoopSingleAllOf.
        :type attributes: AssuranceClosedControlLoopSingleAllOfAttributes
        """

        self._attributes = attributes

    @property
    def assurance_goal(self):
        """Gets the assurance_goal of this AssuranceClosedControlLoopSingleAllOf.


        :return: The assurance_goal of this AssuranceClosedControlLoopSingleAllOf.
        :rtype: List[AssuranceGoalSingle]
        """
        return self._assurance_goal

    @assurance_goal.setter
    def assurance_goal(self, assurance_goal):
        """Sets the assurance_goal of this AssuranceClosedControlLoopSingleAllOf.


        :param assurance_goal: The assurance_goal of this AssuranceClosedControlLoopSingleAllOf.
        :type assurance_goal: List[AssuranceGoalSingle]
        """

        self._assurance_goal = assurance_goal
