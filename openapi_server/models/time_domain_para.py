# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class TimeDomainPara(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dl_ul_switching_period1=None, symbol_offset_of_reference_point1=None, dl_ul_switching_period2=None, symbol_offset_of_reference_point2=None, totalnrof_set_idof_rs1=None, totalnrof_set_idof_rs2=None, nrof_consecutive_rimrs1=None, nrof_consecutive_rimrs2=None, consecutive_rimrs1_list=None, consecutive_rimrs2_list=None, enablenearfar_indication_rs1=None, enablenearfar_indication_rs2=None):  # noqa: E501
        """TimeDomainPara - a model defined in OpenAPI

        :param dl_ul_switching_period1: The dl_ul_switching_period1 of this TimeDomainPara.  # noqa: E501
        :type dl_ul_switching_period1: str
        :param symbol_offset_of_reference_point1: The symbol_offset_of_reference_point1 of this TimeDomainPara.  # noqa: E501
        :type symbol_offset_of_reference_point1: int
        :param dl_ul_switching_period2: The dl_ul_switching_period2 of this TimeDomainPara.  # noqa: E501
        :type dl_ul_switching_period2: str
        :param symbol_offset_of_reference_point2: The symbol_offset_of_reference_point2 of this TimeDomainPara.  # noqa: E501
        :type symbol_offset_of_reference_point2: int
        :param totalnrof_set_idof_rs1: The totalnrof_set_idof_rs1 of this TimeDomainPara.  # noqa: E501
        :type totalnrof_set_idof_rs1: int
        :param totalnrof_set_idof_rs2: The totalnrof_set_idof_rs2 of this TimeDomainPara.  # noqa: E501
        :type totalnrof_set_idof_rs2: int
        :param nrof_consecutive_rimrs1: The nrof_consecutive_rimrs1 of this TimeDomainPara.  # noqa: E501
        :type nrof_consecutive_rimrs1: int
        :param nrof_consecutive_rimrs2: The nrof_consecutive_rimrs2 of this TimeDomainPara.  # noqa: E501
        :type nrof_consecutive_rimrs2: int
        :param consecutive_rimrs1_list: The consecutive_rimrs1_list of this TimeDomainPara.  # noqa: E501
        :type consecutive_rimrs1_list: List[int]
        :param consecutive_rimrs2_list: The consecutive_rimrs2_list of this TimeDomainPara.  # noqa: E501
        :type consecutive_rimrs2_list: List[int]
        :param enablenearfar_indication_rs1: The enablenearfar_indication_rs1 of this TimeDomainPara.  # noqa: E501
        :type enablenearfar_indication_rs1: str
        :param enablenearfar_indication_rs2: The enablenearfar_indication_rs2 of this TimeDomainPara.  # noqa: E501
        :type enablenearfar_indication_rs2: str
        """
        self.openapi_types = {
            'dl_ul_switching_period1': str,
            'symbol_offset_of_reference_point1': int,
            'dl_ul_switching_period2': str,
            'symbol_offset_of_reference_point2': int,
            'totalnrof_set_idof_rs1': int,
            'totalnrof_set_idof_rs2': int,
            'nrof_consecutive_rimrs1': int,
            'nrof_consecutive_rimrs2': int,
            'consecutive_rimrs1_list': List[int],
            'consecutive_rimrs2_list': List[int],
            'enablenearfar_indication_rs1': str,
            'enablenearfar_indication_rs2': str
        }

        self.attribute_map = {
            'dl_ul_switching_period1': 'dlULSwitchingPeriod1',
            'symbol_offset_of_reference_point1': 'symbolOffsetOfReferencePoint1',
            'dl_ul_switching_period2': 'dlULSwitchingPeriod2',
            'symbol_offset_of_reference_point2': 'symbolOffsetOfReferencePoint2',
            'totalnrof_set_idof_rs1': 'totalnrofSetIdofRS1',
            'totalnrof_set_idof_rs2': 'totalnrofSetIdofRS2',
            'nrof_consecutive_rimrs1': 'nrofConsecutiveRIMRS1',
            'nrof_consecutive_rimrs2': 'nrofConsecutiveRIMRS2',
            'consecutive_rimrs1_list': 'consecutiveRIMRS1List',
            'consecutive_rimrs2_list': 'consecutiveRIMRS2List',
            'enablenearfar_indication_rs1': 'enablenearfarIndicationRS1',
            'enablenearfar_indication_rs2': 'enablenearfarIndicationRS2'
        }

        self._dl_ul_switching_period1 = dl_ul_switching_period1
        self._symbol_offset_of_reference_point1 = symbol_offset_of_reference_point1
        self._dl_ul_switching_period2 = dl_ul_switching_period2
        self._symbol_offset_of_reference_point2 = symbol_offset_of_reference_point2
        self._totalnrof_set_idof_rs1 = totalnrof_set_idof_rs1
        self._totalnrof_set_idof_rs2 = totalnrof_set_idof_rs2
        self._nrof_consecutive_rimrs1 = nrof_consecutive_rimrs1
        self._nrof_consecutive_rimrs2 = nrof_consecutive_rimrs2
        self._consecutive_rimrs1_list = consecutive_rimrs1_list
        self._consecutive_rimrs2_list = consecutive_rimrs2_list
        self._enablenearfar_indication_rs1 = enablenearfar_indication_rs1
        self._enablenearfar_indication_rs2 = enablenearfar_indication_rs2

    @classmethod
    def from_dict(cls, dikt) -> 'TimeDomainPara':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TimeDomainPara of this TimeDomainPara.  # noqa: E501
        :rtype: TimeDomainPara
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dl_ul_switching_period1(self):
        """Gets the dl_ul_switching_period1 of this TimeDomainPara.


        :return: The dl_ul_switching_period1 of this TimeDomainPara.
        :rtype: str
        """
        return self._dl_ul_switching_period1

    @dl_ul_switching_period1.setter
    def dl_ul_switching_period1(self, dl_ul_switching_period1):
        """Sets the dl_ul_switching_period1 of this TimeDomainPara.


        :param dl_ul_switching_period1: The dl_ul_switching_period1 of this TimeDomainPara.
        :type dl_ul_switching_period1: str
        """
        allowed_values = ["MS0P5", "MS0P625", "MS1", "MS1P25", "MS2", "MS2P5", "MS3", "MS4", "MS5", "MS10", "MS20"]  # noqa: E501
        if dl_ul_switching_period1 not in allowed_values:
            raise ValueError(
                "Invalid value for `dl_ul_switching_period1` ({0}), must be one of {1}"
                .format(dl_ul_switching_period1, allowed_values)
            )

        self._dl_ul_switching_period1 = dl_ul_switching_period1

    @property
    def symbol_offset_of_reference_point1(self):
        """Gets the symbol_offset_of_reference_point1 of this TimeDomainPara.


        :return: The symbol_offset_of_reference_point1 of this TimeDomainPara.
        :rtype: int
        """
        return self._symbol_offset_of_reference_point1

    @symbol_offset_of_reference_point1.setter
    def symbol_offset_of_reference_point1(self, symbol_offset_of_reference_point1):
        """Sets the symbol_offset_of_reference_point1 of this TimeDomainPara.


        :param symbol_offset_of_reference_point1: The symbol_offset_of_reference_point1 of this TimeDomainPara.
        :type symbol_offset_of_reference_point1: int
        """

        self._symbol_offset_of_reference_point1 = symbol_offset_of_reference_point1

    @property
    def dl_ul_switching_period2(self):
        """Gets the dl_ul_switching_period2 of this TimeDomainPara.


        :return: The dl_ul_switching_period2 of this TimeDomainPara.
        :rtype: str
        """
        return self._dl_ul_switching_period2

    @dl_ul_switching_period2.setter
    def dl_ul_switching_period2(self, dl_ul_switching_period2):
        """Sets the dl_ul_switching_period2 of this TimeDomainPara.


        :param dl_ul_switching_period2: The dl_ul_switching_period2 of this TimeDomainPara.
        :type dl_ul_switching_period2: str
        """
        allowed_values = ["MS0P5", "MS0P625", "MS1", "MS1P25", "MS2", "MS2P5", "MS3", "MS4", "MS5", "MS10", "MS20"]  # noqa: E501
        if dl_ul_switching_period2 not in allowed_values:
            raise ValueError(
                "Invalid value for `dl_ul_switching_period2` ({0}), must be one of {1}"
                .format(dl_ul_switching_period2, allowed_values)
            )

        self._dl_ul_switching_period2 = dl_ul_switching_period2

    @property
    def symbol_offset_of_reference_point2(self):
        """Gets the symbol_offset_of_reference_point2 of this TimeDomainPara.


        :return: The symbol_offset_of_reference_point2 of this TimeDomainPara.
        :rtype: int
        """
        return self._symbol_offset_of_reference_point2

    @symbol_offset_of_reference_point2.setter
    def symbol_offset_of_reference_point2(self, symbol_offset_of_reference_point2):
        """Sets the symbol_offset_of_reference_point2 of this TimeDomainPara.


        :param symbol_offset_of_reference_point2: The symbol_offset_of_reference_point2 of this TimeDomainPara.
        :type symbol_offset_of_reference_point2: int
        """

        self._symbol_offset_of_reference_point2 = symbol_offset_of_reference_point2

    @property
    def totalnrof_set_idof_rs1(self):
        """Gets the totalnrof_set_idof_rs1 of this TimeDomainPara.


        :return: The totalnrof_set_idof_rs1 of this TimeDomainPara.
        :rtype: int
        """
        return self._totalnrof_set_idof_rs1

    @totalnrof_set_idof_rs1.setter
    def totalnrof_set_idof_rs1(self, totalnrof_set_idof_rs1):
        """Sets the totalnrof_set_idof_rs1 of this TimeDomainPara.


        :param totalnrof_set_idof_rs1: The totalnrof_set_idof_rs1 of this TimeDomainPara.
        :type totalnrof_set_idof_rs1: int
        """

        self._totalnrof_set_idof_rs1 = totalnrof_set_idof_rs1

    @property
    def totalnrof_set_idof_rs2(self):
        """Gets the totalnrof_set_idof_rs2 of this TimeDomainPara.


        :return: The totalnrof_set_idof_rs2 of this TimeDomainPara.
        :rtype: int
        """
        return self._totalnrof_set_idof_rs2

    @totalnrof_set_idof_rs2.setter
    def totalnrof_set_idof_rs2(self, totalnrof_set_idof_rs2):
        """Sets the totalnrof_set_idof_rs2 of this TimeDomainPara.


        :param totalnrof_set_idof_rs2: The totalnrof_set_idof_rs2 of this TimeDomainPara.
        :type totalnrof_set_idof_rs2: int
        """

        self._totalnrof_set_idof_rs2 = totalnrof_set_idof_rs2

    @property
    def nrof_consecutive_rimrs1(self):
        """Gets the nrof_consecutive_rimrs1 of this TimeDomainPara.


        :return: The nrof_consecutive_rimrs1 of this TimeDomainPara.
        :rtype: int
        """
        return self._nrof_consecutive_rimrs1

    @nrof_consecutive_rimrs1.setter
    def nrof_consecutive_rimrs1(self, nrof_consecutive_rimrs1):
        """Sets the nrof_consecutive_rimrs1 of this TimeDomainPara.


        :param nrof_consecutive_rimrs1: The nrof_consecutive_rimrs1 of this TimeDomainPara.
        :type nrof_consecutive_rimrs1: int
        """

        self._nrof_consecutive_rimrs1 = nrof_consecutive_rimrs1

    @property
    def nrof_consecutive_rimrs2(self):
        """Gets the nrof_consecutive_rimrs2 of this TimeDomainPara.


        :return: The nrof_consecutive_rimrs2 of this TimeDomainPara.
        :rtype: int
        """
        return self._nrof_consecutive_rimrs2

    @nrof_consecutive_rimrs2.setter
    def nrof_consecutive_rimrs2(self, nrof_consecutive_rimrs2):
        """Sets the nrof_consecutive_rimrs2 of this TimeDomainPara.


        :param nrof_consecutive_rimrs2: The nrof_consecutive_rimrs2 of this TimeDomainPara.
        :type nrof_consecutive_rimrs2: int
        """

        self._nrof_consecutive_rimrs2 = nrof_consecutive_rimrs2

    @property
    def consecutive_rimrs1_list(self):
        """Gets the consecutive_rimrs1_list of this TimeDomainPara.


        :return: The consecutive_rimrs1_list of this TimeDomainPara.
        :rtype: List[int]
        """
        return self._consecutive_rimrs1_list

    @consecutive_rimrs1_list.setter
    def consecutive_rimrs1_list(self, consecutive_rimrs1_list):
        """Sets the consecutive_rimrs1_list of this TimeDomainPara.


        :param consecutive_rimrs1_list: The consecutive_rimrs1_list of this TimeDomainPara.
        :type consecutive_rimrs1_list: List[int]
        """

        self._consecutive_rimrs1_list = consecutive_rimrs1_list

    @property
    def consecutive_rimrs2_list(self):
        """Gets the consecutive_rimrs2_list of this TimeDomainPara.


        :return: The consecutive_rimrs2_list of this TimeDomainPara.
        :rtype: List[int]
        """
        return self._consecutive_rimrs2_list

    @consecutive_rimrs2_list.setter
    def consecutive_rimrs2_list(self, consecutive_rimrs2_list):
        """Sets the consecutive_rimrs2_list of this TimeDomainPara.


        :param consecutive_rimrs2_list: The consecutive_rimrs2_list of this TimeDomainPara.
        :type consecutive_rimrs2_list: List[int]
        """

        self._consecutive_rimrs2_list = consecutive_rimrs2_list

    @property
    def enablenearfar_indication_rs1(self):
        """Gets the enablenearfar_indication_rs1 of this TimeDomainPara.


        :return: The enablenearfar_indication_rs1 of this TimeDomainPara.
        :rtype: str
        """
        return self._enablenearfar_indication_rs1

    @enablenearfar_indication_rs1.setter
    def enablenearfar_indication_rs1(self, enablenearfar_indication_rs1):
        """Sets the enablenearfar_indication_rs1 of this TimeDomainPara.


        :param enablenearfar_indication_rs1: The enablenearfar_indication_rs1 of this TimeDomainPara.
        :type enablenearfar_indication_rs1: str
        """
        allowed_values = ["ENABLE", "DISABLE"]  # noqa: E501
        if enablenearfar_indication_rs1 not in allowed_values:
            raise ValueError(
                "Invalid value for `enablenearfar_indication_rs1` ({0}), must be one of {1}"
                .format(enablenearfar_indication_rs1, allowed_values)
            )

        self._enablenearfar_indication_rs1 = enablenearfar_indication_rs1

    @property
    def enablenearfar_indication_rs2(self):
        """Gets the enablenearfar_indication_rs2 of this TimeDomainPara.


        :return: The enablenearfar_indication_rs2 of this TimeDomainPara.
        :rtype: str
        """
        return self._enablenearfar_indication_rs2

    @enablenearfar_indication_rs2.setter
    def enablenearfar_indication_rs2(self, enablenearfar_indication_rs2):
        """Sets the enablenearfar_indication_rs2 of this TimeDomainPara.


        :param enablenearfar_indication_rs2: The enablenearfar_indication_rs2 of this TimeDomainPara.
        :type enablenearfar_indication_rs2: str
        """
        allowed_values = ["ENABLE", "DISABLE"]  # noqa: E501
        if enablenearfar_indication_rs2 not in allowed_values:
            raise ValueError(
                "Invalid value for `enablenearfar_indication_rs2` ({0}), must be one of {1}"
                .format(enablenearfar_indication_rs2, allowed_values)
            )

        self._enablenearfar_indication_rs2 = enablenearfar_indication_rs2
