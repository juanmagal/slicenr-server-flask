# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.fulfilment_info import FulfilmentInfo
from openapi_server.models.intent_context import IntentContext
from openapi_server.models.intent_single_all_of_intent_expectations_inner import IntentSingleAllOfIntentExpectationsInner
from openapi_server.models.vs_data_container_single import VsDataContainerSingle
from openapi_server import util

from openapi_server.models.fulfilment_info import FulfilmentInfo  # noqa: E501
from openapi_server.models.intent_context import IntentContext  # noqa: E501
from openapi_server.models.intent_single_all_of_intent_expectations_inner import IntentSingleAllOfIntentExpectationsInner  # noqa: E501
from openapi_server.models.vs_data_container_single import VsDataContainerSingle  # noqa: E501

class IntentSingle(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, object_class=None, object_instance=None, vs_data_container=None, user_label=None, intent_expectations=None, intent_contexts=None, intent_fulfilment_info=None):  # noqa: E501
        """IntentSingle - a model defined in OpenAPI

        :param id: The id of this IntentSingle.  # noqa: E501
        :type id: str
        :param object_class: The object_class of this IntentSingle.  # noqa: E501
        :type object_class: str
        :param object_instance: The object_instance of this IntentSingle.  # noqa: E501
        :type object_instance: str
        :param vs_data_container: The vs_data_container of this IntentSingle.  # noqa: E501
        :type vs_data_container: List[VsDataContainerSingle]
        :param user_label: The user_label of this IntentSingle.  # noqa: E501
        :type user_label: str
        :param intent_expectations: The intent_expectations of this IntentSingle.  # noqa: E501
        :type intent_expectations: List[IntentSingleAllOfIntentExpectationsInner]
        :param intent_contexts: The intent_contexts of this IntentSingle.  # noqa: E501
        :type intent_contexts: List[IntentContext]
        :param intent_fulfilment_info: The intent_fulfilment_info of this IntentSingle.  # noqa: E501
        :type intent_fulfilment_info: FulfilmentInfo
        """
        self.openapi_types = {
            'id': str,
            'object_class': str,
            'object_instance': str,
            'vs_data_container': List[VsDataContainerSingle],
            'user_label': str,
            'intent_expectations': List[IntentSingleAllOfIntentExpectationsInner],
            'intent_contexts': List[IntentContext],
            'intent_fulfilment_info': FulfilmentInfo
        }

        self.attribute_map = {
            'id': 'id',
            'object_class': 'objectClass',
            'object_instance': 'objectInstance',
            'vs_data_container': 'VsDataContainer',
            'user_label': 'userLabel',
            'intent_expectations': 'intentExpectations',
            'intent_contexts': 'intentContexts',
            'intent_fulfilment_info': 'intentFulfilmentInfo'
        }

        self._id = id
        self._object_class = object_class
        self._object_instance = object_instance
        self._vs_data_container = vs_data_container
        self._user_label = user_label
        self._intent_expectations = intent_expectations
        self._intent_contexts = intent_contexts
        self._intent_fulfilment_info = intent_fulfilment_info

    @classmethod
    def from_dict(cls, dikt) -> 'IntentSingle':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Intent-Single of this IntentSingle.  # noqa: E501
        :rtype: IntentSingle
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this IntentSingle.


        :return: The id of this IntentSingle.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this IntentSingle.


        :param id: The id of this IntentSingle.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def object_class(self):
        """Gets the object_class of this IntentSingle.


        :return: The object_class of this IntentSingle.
        :rtype: str
        """
        return self._object_class

    @object_class.setter
    def object_class(self, object_class):
        """Sets the object_class of this IntentSingle.


        :param object_class: The object_class of this IntentSingle.
        :type object_class: str
        """

        self._object_class = object_class

    @property
    def object_instance(self):
        """Gets the object_instance of this IntentSingle.


        :return: The object_instance of this IntentSingle.
        :rtype: str
        """
        return self._object_instance

    @object_instance.setter
    def object_instance(self, object_instance):
        """Sets the object_instance of this IntentSingle.


        :param object_instance: The object_instance of this IntentSingle.
        :type object_instance: str
        """

        self._object_instance = object_instance

    @property
    def vs_data_container(self):
        """Gets the vs_data_container of this IntentSingle.


        :return: The vs_data_container of this IntentSingle.
        :rtype: List[VsDataContainerSingle]
        """
        return self._vs_data_container

    @vs_data_container.setter
    def vs_data_container(self, vs_data_container):
        """Sets the vs_data_container of this IntentSingle.


        :param vs_data_container: The vs_data_container of this IntentSingle.
        :type vs_data_container: List[VsDataContainerSingle]
        """

        self._vs_data_container = vs_data_container

    @property
    def user_label(self):
        """Gets the user_label of this IntentSingle.


        :return: The user_label of this IntentSingle.
        :rtype: str
        """
        return self._user_label

    @user_label.setter
    def user_label(self, user_label):
        """Sets the user_label of this IntentSingle.


        :param user_label: The user_label of this IntentSingle.
        :type user_label: str
        """

        self._user_label = user_label

    @property
    def intent_expectations(self):
        """Gets the intent_expectations of this IntentSingle.


        :return: The intent_expectations of this IntentSingle.
        :rtype: List[IntentSingleAllOfIntentExpectationsInner]
        """
        return self._intent_expectations

    @intent_expectations.setter
    def intent_expectations(self, intent_expectations):
        """Sets the intent_expectations of this IntentSingle.


        :param intent_expectations: The intent_expectations of this IntentSingle.
        :type intent_expectations: List[IntentSingleAllOfIntentExpectationsInner]
        """

        self._intent_expectations = intent_expectations

    @property
    def intent_contexts(self):
        """Gets the intent_contexts of this IntentSingle.


        :return: The intent_contexts of this IntentSingle.
        :rtype: List[IntentContext]
        """
        return self._intent_contexts

    @intent_contexts.setter
    def intent_contexts(self, intent_contexts):
        """Sets the intent_contexts of this IntentSingle.


        :param intent_contexts: The intent_contexts of this IntentSingle.
        :type intent_contexts: List[IntentContext]
        """

        self._intent_contexts = intent_contexts

    @property
    def intent_fulfilment_info(self):
        """Gets the intent_fulfilment_info of this IntentSingle.


        :return: The intent_fulfilment_info of this IntentSingle.
        :rtype: FulfilmentInfo
        """
        return self._intent_fulfilment_info

    @intent_fulfilment_info.setter
    def intent_fulfilment_info(self, intent_fulfilment_info):
        """Sets the intent_fulfilment_info of this IntentSingle.


        :param intent_fulfilment_info: The intent_fulfilment_info of this IntentSingle.
        :type intent_fulfilment_info: FulfilmentInfo
        """

        self._intent_fulfilment_info = intent_fulfilment_info
