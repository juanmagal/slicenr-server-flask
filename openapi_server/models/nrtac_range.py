# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class NRTACRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, n_rta_cstart=None, n_rta_cend=None, n_rta_cpattern=None):  # noqa: E501
        """NRTACRange - a model defined in OpenAPI

        :param n_rta_cstart: The n_rta_cstart of this NRTACRange.  # noqa: E501
        :type n_rta_cstart: str
        :param n_rta_cend: The n_rta_cend of this NRTACRange.  # noqa: E501
        :type n_rta_cend: str
        :param n_rta_cpattern: The n_rta_cpattern of this NRTACRange.  # noqa: E501
        :type n_rta_cpattern: str
        """
        self.openapi_types = {
            'n_rta_cstart': str,
            'n_rta_cend': str,
            'n_rta_cpattern': str
        }

        self.attribute_map = {
            'n_rta_cstart': 'nRTACstart',
            'n_rta_cend': 'nRTACend',
            'n_rta_cpattern': 'nRTACpattern'
        }

        self._n_rta_cstart = n_rta_cstart
        self._n_rta_cend = n_rta_cend
        self._n_rta_cpattern = n_rta_cpattern

    @classmethod
    def from_dict(cls, dikt) -> 'NRTACRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NRTACRange of this NRTACRange.  # noqa: E501
        :rtype: NRTACRange
        """
        return util.deserialize_model(dikt, cls)

    @property
    def n_rta_cstart(self):
        """Gets the n_rta_cstart of this NRTACRange.


        :return: The n_rta_cstart of this NRTACRange.
        :rtype: str
        """
        return self._n_rta_cstart

    @n_rta_cstart.setter
    def n_rta_cstart(self, n_rta_cstart):
        """Sets the n_rta_cstart of this NRTACRange.


        :param n_rta_cstart: The n_rta_cstart of this NRTACRange.
        :type n_rta_cstart: str
        """

        self._n_rta_cstart = n_rta_cstart

    @property
    def n_rta_cend(self):
        """Gets the n_rta_cend of this NRTACRange.


        :return: The n_rta_cend of this NRTACRange.
        :rtype: str
        """
        return self._n_rta_cend

    @n_rta_cend.setter
    def n_rta_cend(self, n_rta_cend):
        """Sets the n_rta_cend of this NRTACRange.


        :param n_rta_cend: The n_rta_cend of this NRTACRange.
        :type n_rta_cend: str
        """

        self._n_rta_cend = n_rta_cend

    @property
    def n_rta_cpattern(self):
        """Gets the n_rta_cpattern of this NRTACRange.


        :return: The n_rta_cpattern of this NRTACRange.
        :rtype: str
        """
        return self._n_rta_cpattern

    @n_rta_cpattern.setter
    def n_rta_cpattern(self, n_rta_cpattern):
        """Sets the n_rta_cpattern of this NRTACRange.


        :param n_rta_cpattern: The n_rta_cpattern of this NRTACRange.
        :type n_rta_cpattern: str
        """

        self._n_rta_cpattern = n_rta_cpattern
