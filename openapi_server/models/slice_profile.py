# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.cn_slice_subnet_profile import CNSliceSubnetProfile
from openapi_server.models.plmn_info import PlmnInfo
from openapi_server.models.ran_slice_subnet_profile import RANSliceSubnetProfile
from openapi_server.models.top_slice_subnet_profile import TopSliceSubnetProfile
from openapi_server import util

from openapi_server.models.cn_slice_subnet_profile import CNSliceSubnetProfile  # noqa: E501
from openapi_server.models.plmn_info import PlmnInfo  # noqa: E501
from openapi_server.models.ran_slice_subnet_profile import RANSliceSubnetProfile  # noqa: E501
from openapi_server.models.top_slice_subnet_profile import TopSliceSubnetProfile  # noqa: E501

class SliceProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_profile_id=None, plmn_info_list=None, c_n_slice_subnet_profile=None, r_an_slice_subnet_profile=None, top_slice_subnet_profile=None):  # noqa: E501
        """SliceProfile - a model defined in OpenAPI

        :param service_profile_id: The service_profile_id of this SliceProfile.  # noqa: E501
        :type service_profile_id: str
        :param plmn_info_list: The plmn_info_list of this SliceProfile.  # noqa: E501
        :type plmn_info_list: List[PlmnInfo]
        :param c_n_slice_subnet_profile: The c_n_slice_subnet_profile of this SliceProfile.  # noqa: E501
        :type c_n_slice_subnet_profile: CNSliceSubnetProfile
        :param r_an_slice_subnet_profile: The r_an_slice_subnet_profile of this SliceProfile.  # noqa: E501
        :type r_an_slice_subnet_profile: RANSliceSubnetProfile
        :param top_slice_subnet_profile: The top_slice_subnet_profile of this SliceProfile.  # noqa: E501
        :type top_slice_subnet_profile: TopSliceSubnetProfile
        """
        self.openapi_types = {
            'service_profile_id': str,
            'plmn_info_list': List[PlmnInfo],
            'c_n_slice_subnet_profile': CNSliceSubnetProfile,
            'r_an_slice_subnet_profile': RANSliceSubnetProfile,
            'top_slice_subnet_profile': TopSliceSubnetProfile
        }

        self.attribute_map = {
            'service_profile_id': 'serviceProfileId',
            'plmn_info_list': 'plmnInfoList',
            'c_n_slice_subnet_profile': 'cNSliceSubnetProfile',
            'r_an_slice_subnet_profile': 'rANSliceSubnetProfile',
            'top_slice_subnet_profile': 'topSliceSubnetProfile'
        }

        self._service_profile_id = service_profile_id
        self._plmn_info_list = plmn_info_list
        self._c_n_slice_subnet_profile = c_n_slice_subnet_profile
        self._r_an_slice_subnet_profile = r_an_slice_subnet_profile
        self._top_slice_subnet_profile = top_slice_subnet_profile

    @classmethod
    def from_dict(cls, dikt) -> 'SliceProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SliceProfile of this SliceProfile.  # noqa: E501
        :rtype: SliceProfile
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_profile_id(self):
        """Gets the service_profile_id of this SliceProfile.


        :return: The service_profile_id of this SliceProfile.
        :rtype: str
        """
        return self._service_profile_id

    @service_profile_id.setter
    def service_profile_id(self, service_profile_id):
        """Sets the service_profile_id of this SliceProfile.


        :param service_profile_id: The service_profile_id of this SliceProfile.
        :type service_profile_id: str
        """

        self._service_profile_id = service_profile_id

    @property
    def plmn_info_list(self):
        """Gets the plmn_info_list of this SliceProfile.


        :return: The plmn_info_list of this SliceProfile.
        :rtype: List[PlmnInfo]
        """
        return self._plmn_info_list

    @plmn_info_list.setter
    def plmn_info_list(self, plmn_info_list):
        """Sets the plmn_info_list of this SliceProfile.


        :param plmn_info_list: The plmn_info_list of this SliceProfile.
        :type plmn_info_list: List[PlmnInfo]
        """

        self._plmn_info_list = plmn_info_list

    @property
    def c_n_slice_subnet_profile(self):
        """Gets the c_n_slice_subnet_profile of this SliceProfile.


        :return: The c_n_slice_subnet_profile of this SliceProfile.
        :rtype: CNSliceSubnetProfile
        """
        return self._c_n_slice_subnet_profile

    @c_n_slice_subnet_profile.setter
    def c_n_slice_subnet_profile(self, c_n_slice_subnet_profile):
        """Sets the c_n_slice_subnet_profile of this SliceProfile.


        :param c_n_slice_subnet_profile: The c_n_slice_subnet_profile of this SliceProfile.
        :type c_n_slice_subnet_profile: CNSliceSubnetProfile
        """

        self._c_n_slice_subnet_profile = c_n_slice_subnet_profile

    @property
    def r_an_slice_subnet_profile(self):
        """Gets the r_an_slice_subnet_profile of this SliceProfile.


        :return: The r_an_slice_subnet_profile of this SliceProfile.
        :rtype: RANSliceSubnetProfile
        """
        return self._r_an_slice_subnet_profile

    @r_an_slice_subnet_profile.setter
    def r_an_slice_subnet_profile(self, r_an_slice_subnet_profile):
        """Sets the r_an_slice_subnet_profile of this SliceProfile.


        :param r_an_slice_subnet_profile: The r_an_slice_subnet_profile of this SliceProfile.
        :type r_an_slice_subnet_profile: RANSliceSubnetProfile
        """

        self._r_an_slice_subnet_profile = r_an_slice_subnet_profile

    @property
    def top_slice_subnet_profile(self):
        """Gets the top_slice_subnet_profile of this SliceProfile.


        :return: The top_slice_subnet_profile of this SliceProfile.
        :rtype: TopSliceSubnetProfile
        """
        return self._top_slice_subnet_profile

    @top_slice_subnet_profile.setter
    def top_slice_subnet_profile(self, top_slice_subnet_profile):
        """Sets the top_slice_subnet_profile of this SliceProfile.


        :param top_slice_subnet_profile: The top_slice_subnet_profile of this SliceProfile.
        :type top_slice_subnet_profile: TopSliceSubnetProfile
        """

        self._top_slice_subnet_profile = top_slice_subnet_profile
