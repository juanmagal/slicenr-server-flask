# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.epn33_single import EPN33Single
from openapi_server import util

from openapi_server.models.epn33_single import EPN33Single  # noqa: E501

class NefFunctionSingleAllOf1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ep_n33=None):  # noqa: E501
        """NefFunctionSingleAllOf1 - a model defined in OpenAPI

        :param ep_n33: The ep_n33 of this NefFunctionSingleAllOf1.  # noqa: E501
        :type ep_n33: List[EPN33Single]
        """
        self.openapi_types = {
            'ep_n33': List[EPN33Single]
        }

        self.attribute_map = {
            'ep_n33': 'EP_N33'
        }

        self._ep_n33 = ep_n33

    @classmethod
    def from_dict(cls, dikt) -> 'NefFunctionSingleAllOf1':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NefFunction_Single_allOf_1 of this NefFunctionSingleAllOf1.  # noqa: E501
        :rtype: NefFunctionSingleAllOf1
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ep_n33(self):
        """Gets the ep_n33 of this NefFunctionSingleAllOf1.


        :return: The ep_n33 of this NefFunctionSingleAllOf1.
        :rtype: List[EPN33Single]
        """
        return self._ep_n33

    @ep_n33.setter
    def ep_n33(self, ep_n33):
        """Sets the ep_n33 of this NefFunctionSingleAllOf1.


        :param ep_n33: The ep_n33 of this NefFunctionSingleAllOf1.
        :type ep_n33: List[EPN33Single]
        """

        self._ep_n33 = ep_n33
